import requests
import os
import json
import difflib
from difflib import SequenceMatcher
import re

API_KEY = os.getenv('YA_TR_KEY')
folder_id = os.getenv('YA_TR_FOLDER_ID')
target_language = 'en'
source_lang = 'ru'
texts = ["Цирконий и его соединения играют важную роль в современных технологиях. Диоксид циркония используется в производстве керамики, огнеупоров, а также в атомной и химической промышленности. Однако получение чистого продукта требует эффективных методов переработки сырья. Обуховское месторождение в Северном Казахстане содержит цирконовый концентрат, который до недавнего времени не использовался в полной мере из-за относительно низкого содержания циркония. Исследование посвящено поиску способов повышения качества концентрата и разработке технологии получения товарного диоксида циркония.  \n\n**Повышение качества концентрата**  \nПервым этапом работы стало дообогащение цирконового концентрата Обуховского горно-обогатительного комбината (ГОК) с применением сухой магнитной сепарации. Этот метод позволяет разделить частицы по магнитным свойствам, что особенно эффективно при наличии примесей железа, титана и хрома. Исходный материал содержал около 40% диоксида циркония. После обработки на магнитном сепараторе основная масса циркона (95%) перешла в немагнитную фракцию, а примеси сконцентрировались в магнитной части. Рентгенофлуоресцентный анализ на спектрометре XRF-1800 подтвердил, что содержание циркония в пересчете на диоксид увеличилось до 52,5%. Это существенно повысило ценность концентрата для дальнейшей переработки.  \n\n**Вскрытие цирконового концентрата**  \nДля извлечения циркония из минерала циркона (ZrSiO₄) требуется разрушение его кристаллической структуры. В исследовании использовали метод спекания концентрата с гидроксидом натрия. Немагнитная фракция, полученная после сепарации, смешивалась со щелочью в весовых соотношениях 1:1,5 и 1:2. Процесс проводили при температурах от 550 до 620°C с выдержкой 1 или 2 часа (без учета времени нагрева, которое составляло 1,5 часа).  \n\nЭксперименты показали, что оптимальные условия достигаются при температуре 610°C, времени спекания 2 часа и соотношении концентрата к щелочи 1:2. В этих условиях происходило практически полное разложение циркона с образованием цирконата натрия (Na₂ZrO₃). Более низкие температуры или сокращение времени обработки приводили к неполному вскрытию, а превышение 620°C вызывало нежелательное спекание материалов.  \n\n**Получение диоксида циркония**  \nИз полученного цирконата натрия диоксид циркония выделяли тремя способами, каждый из которых включал стадии растворения, осаждения и прокаливания.  \n\n1. **Метод соляной кислоты**  \nЦирконат натрия растворяли в соляной кислоте, после чего добавляли избыток HCl для высаливания хлорида цирконила (ZrOCl₂). Осадок отделяли от раствора и прокаливали при 950°C. Этот метод обеспечил максимальную чистоту конечного продукта — 97% диоксида циркония. Однако выход составил лишь 58%, что связано с частичной потерей материала на стадии фильтрации.  \n\n2. **Сернокислотный метод**  \nРастворение цирконата натрия в соляной кислоте дополнялось добавлением серной кислоты. В результате гидролиза образовывался основной сульфат циркония (Zr(OH)₂SO₄), который после прокаливания превращался в ZrO₂. Этот способ показал наибольший выход — 68,5%, но чистота продукта снизилась до 94% из-за примесей серы.  \n\n3. **Комбинированный метод**  \nТретий подход предполагал обработку цирконата натрия серной кислотой с последующим высаливанием цирконилсерной кислоты (ZrOSO₄). После прокаливания чистота диоксида циркония достигла 96%, а выход — 63%. Метод занял промежуточное положение по эффективности, но требовал большего расхода реагентов.  \n\n**Анализ результатов**  \nСравнение методов выделения диоксида циркония выявило компромисс между чистотой продукта и его выходом. Использование соляной кислоты обеспечило высокую чистоту, что критически важно для применения в электронике и медицине. Сернокислотный метод, несмотря на более низкое качество продукта, может быть предпочтителен в отраслях, где важна экономическая эффективность — например, в производстве огнеупоров.  \n\nВажную роль в процессе играла стадия прокаливания при 950°C. Эта температура оказалась достаточной для удаления летучих примесей и формирования стабильной кристаллической структуры ZrO₂. Более низкие температуры приводили к остаточному содержанию гидроксильных групп, а превышение 1000°C вызывало спекание частиц, осложняющее дальнейшее использование порошка.  \n\n**Практическая значимость**  \nРазработанная технология позволяет эффективно перерабатывать цирконовый концентрат Обуховского месторождения, ранее считавшийся малоперспективным. Сухая магнитная сепарация повышает содержание циркония до промышленно значимого уровня, а комбинация методов вскрытия и выделения дает гибкость в выборе конечного продукта. Внедрение этой схемы на Обуховском ГОКе может сократить зависимость от импорта диоксида циркония для стран региона.  \n\nПерспективы исследования связаны с оптимизацией стадий очистки и сокращением расхода реагентов. Например, внедрение рециклинга соляной кислоты или использование альтернативных растворителей может улучшить экономику процесса. Дополнительные исследования планируется направить на извлечение сопутствующих элементов — титана и железа из магнитной фракции, что повысит комплексность использования сырья.  \n\n**Заключение**  \nРабота доказала возможность переработки цирконового концентрата Обуховского месторождения с получением диоксида циркония товарного качества. Сухая магнитная сепарация повысила содержание ZrO₂ с 40% до 52,5%, а оптимальные параметры спекания с гидроксидом натрия (610°C, 2 часа, соотношение 1:2) обеспечили почти полное вскрытие циркона. Среди методов выделения диоксида циркония лучшие результаты показал сернокислотный способ с выходом 68,5%, однако для задач, требующих высокой чистоты, предпочтительнее метод с использованием соляной кислоты.  \n\nРазработанная технология сочетает доступность реагентов и воспроизводимость условий, что делает ее применимой не только для Обуховского месторождения, но и для других источников цирконового сырья с аналогичным составом. Дальнейшая работа должна быть направлена на масштабирование процесса и интеграцию стадий переработки в существующие производственные линии."]

def translate_text(text_list, source_lang, target_lang):
    body = {
        "targetLanguageCode": target_lang,
        "sourceLanguageCode": source_lang,
        "texts": text_list,
        "folderId": folder_id,
    }

    headers = {
        "Content-Type": "application/json",
        "Authorization": "Api-Key {0}".format(API_KEY)
    }

    response = requests.post('https://translate.api.cloud.yandex.net/translate/v2/translate',
        json = body,
        headers = headers
    )
    
    return response.json()

num_iterations = 3

current_text = texts[0]
all_russian_versions = [current_text]
all_english_versions = []

for i in range(num_iterations):
    print(f"Iteration {i+1}/{num_iterations}")
    
    ru_to_en = translate_text([current_text], 'ru', 'en')
    english_text = ru_to_en['translations'][0]['text']
    all_english_versions.append(english_text)
    
    en_to_ru = translate_text([english_text], 'en', 'ru')
    russian_text = en_to_ru['translations'][0]['text']
    all_russian_versions.append(russian_text)
    
    current_text = russian_text

print("\nFinal Russian version after {0} iterations:".format(num_iterations))
print(russian_text)

def compare_texts(original, final):
    orig_len = len(original)
    final_len = len(final)
    len_diff = abs(orig_len - final_len)
    len_percent = round((len_diff / orig_len) * 100, 2)
    
    print(f"Original text length: {orig_len} characters")
    print(f"Final text length: {final_len} characters")
    print(f"Length difference: {len_diff} characters ({len_percent}%)")
    
    similarity_ratio = SequenceMatcher(None, original, final).ratio()
    print(f"Text similarity ratio: {similarity_ratio:.4f} (from 0 to 1)")
    
    orig_words = re.findall(r'\b\w+\b', original)
    final_words = re.findall(r'\b\w+\b', final)
    
    print(f"Number of words in original text: {len(orig_words)}")
    print(f"Number of words in final text: {len(final_words)}")
    
    d = difflib.Differ()
    diff = list(d.compare(original.splitlines(), final.splitlines()))
    
    print("\nExamples of differences (first 5 changed lines):")
    count = 0
    for line in diff:
        if line.startswith('- ') or line.startswith('+ '):
            print(line)
            count += 1
            if count >= 10:
                break
    
    return similarity_ratio

print("\n" + "="*50)
print("ANALYSIS OF DIFFERENCES BETWEEN ORIGINAL AND FINAL TEXT")
print("="*50)
similarity = compare_texts(texts[0], russian_text)

if similarity > 0.9:
    print("\nCONCLUSION: Texts are very similar, differences are minimal")
elif similarity > 0.7:
    print("\nCONCLUSION: Texts retain the main meaning, but there are noticeable changes in wording")
elif similarity > 0.5:
    print("\nCONCLUSION: Texts differ significantly, although the main theme is preserved")
else:
    print("\nCONCLUSION: Texts are very different from each other")
