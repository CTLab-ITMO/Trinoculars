{
  "overall_metrics": {
    "f1_score": 0.7956989247311828,
    "roc_auc": 0.7432432432432432,
    "tpr_at_fpr_0_01": 0.00019473684210526317,
    "tpr": 1.0,
    "fpr": 0.5135135135135135,
    "tnr": 0.4864864864864865,
    "fnr": 0.0
  },
  "dataset_metrics": {
    "chatGPT o1-mini": {
      "f1_score": 1.0,
      "roc_auc": null,
      "tpr_at_fpr_0_01": null,
      "tpr": 1.0,
      "fpr": 0,
      "tnr": 0,
      "fnr": 0.0
    },
    "Lenta.ru news": {
      "f1_score": 0.6545454545454545,
      "roc_auc": null,
      "tpr_at_fpr_0_01": null,
      "tpr": 0,
      "fpr": 0.5135135135135135,
      "tnr": 0.4864864864864865,
      "fnr": 0
    }
  },
  "data": {
    "true_positives": [
      {
        "text": "Конечно! В мире веб-разработки существует множество популярных фреймворков, которые облегчают создание современных и функциональных веб-приложений. Вот обзор некоторых из них, разделённых на фронтенд и бэкенд категории:\n\n### Фронтенд-фреймворки\n\n1. **React**\n   - **Описание:** Библиотека JavaScript, разработанная компанией Facebook. Используется для построения пользовательских интерфейсов.\n   - **Особенности:** Компонентный подход, виртуальный DOM, большая экосистема, поддержка серверного рендеринга через Next.js.\n   - **Преимущества:** Высокая производительность, гибкость, активное сообщество.\n\n2. **Angular**\n   - **Описание:** Платформа для построения приложений от Google, основанная на TypeScript.\n   - **Особенности:** Полноценный фреймворк с встроенными инструментами для маршрутизации, управления состоянием, форм и т.д.\n   - **Преимущества:** Структурированность, модульность, поддержка корпоративных решений.\n\n3. **Vue.js**\n   - **Описание:** Прогрессивный фреймворк для построения пользовательских интерфейсов.\n   - **Особенности:** Простота интеграции, реактивная система данных, компоненты.\n   - **Преимущества:** Лёгкость освоения, гибкость, небольший размер.\n\n4. **Svelte**\n   - **Описание:** Современный фреймворк, который компилирует компоненты в высокоэффективный JavaScript-код.\n   - **Особенности:** Отказ от виртуального DOM, минимальные накладные расходы во время выполнения.\n   - **Преимущества:** Высокая производительность, простота синтаксиса, меньший размер бандла.\n\n### Бэкенд-фреймворки\n\n1. **Express.js**\n   - **Описание:** Минималистичный и гибкий фреймворк для Node.js.\n   - **Особенности:** Простота настройки, большое количество middleware, высокая производительность.\n   - **Преимущества:** Лёгкость изучения, гибкость, широкое применение в различных проектах.\n\n2. **Nest.js**\n   - **Описание:** Прогрессивный фреймворк для создания масштабируемых серверных приложений на TypeScript.\n   - **Особенности:** Архитектура, вдохновлённая Angular, поддержка микросервисов, модульности.\n   - **Преимущества:** Структурированность, поддержка современных концепций, интеграция с различными технологиями.\n\n3. **Django**\n   - **Описание:** Высокоуровневый фреймворк на Python, который способствует быстрому развитию веб-приложений.\n   - **Особенности:** Встроенная административная панель, ORM, безопасность.\n   - **Преимущества:** Быстрое развитие, «из коробки» множество функций, большое сообщество.\n\n4. **Ruby on Rails**\n   - **Описание:** Фреймворк на языке Ruby, ориентированный на быстрое развитие веб-приложений.\n   - **Особенности:** Конвенция над конфигурацией, встроенный ORM (ActiveRecord), автоматизация многих задач.\n   - **Преимущества:** Повышенная продуктивность, чистый и читаемый код, множество гемов (библиотек).\n\n5. **Laravel**\n   - **Описание:** Популярный фреймворк на PHP для веб-разработки.\n   - **Особенности:** Элегантный синтаксис, встроенная система аутентификации, ORM (Eloquent), миграции базы данных.\n   - **Преимущества:** Простота использования, мощные инструменты, активное сообщество.\n\n### Full-Stack-фреймворки\n\n1. **Next.js**\n   - **Описание:** Фреймворк для React, позволяющий создавать серверно-рендеренные и статические веб-приложения.\n   - **Особенности:** Поддержка SSR (Server-Side Rendering), маршрутизация на основе файловой структуры, API-роуты.\n   - **Преимущества:** Улучшенная SEO, высокая производительность, простота деплоя.\n\n2. **Nuxt.js**\n   - **Описание:** Фреймворк для Vue.js, аналогичный Next.js для React.\n   - **Особенности:** Поддержка SSR, статической генерации, гибкая настройка конфигурации.\n   - **Преимущества:** Улучшенная производительность, удобство разработки, поддержка различных режимов рендеринга.\n\n### CSS-фреймворки (дополнительно)\n\n1. **Bootstrap**\n   - **Описание:** Один из самых популярных CSS-фреймворков для создания адаптивных и стильных веб-интерфейсов.\n   - **Особенности:** Грид-система, готовые компоненты, поддержка JavaScript-плагинов.\n   - **Преимущества:** Быстрая разработка, кроссбраузерность, большая документация.\n\n2. **Tailwind CSS**\n   - **Описание:** Утилитарный CSS-фреймворк, позволяющий создавать уникальные дизайны без написания большого количества CSS-кода.\n   - **Особенности:** Классы утилит для стилизации, возможность кастомизации, совместимость с различными инструментами сборки.\n   - **Преимущества:** Высокая гибкость, возможность создания уникального дизайна, улучшенная производительность.\n\n### Выбор фреймворка\n\nВыбор подходящего фреймворка зависит от конкретных требований проекта, предпочтений команды и опыта разработчиков. Фреймворки, такие как React и Angular, отлично подходят для сложных одностраничных приложений, тогда как Django и Ruby on Rails позволяют быстро разрабатывать полнофункциональные серверные приложения. Full-stack фреймворки, такие как Next.js и Nuxt.js, предоставляют возможности как фронтенда, так и бэкенда, что упрощает разработку и деплой.\n\nВажно также учитывать активность сообщества, наличие документации и поддерживаемых библиотек при выборе фреймворка для вашего проекта.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Искусственный интеллект (ИИ) играет все возрастающую роль в медицинской диагностике, улучшая точность, скорость и эффективность диагностики различных заболеваний. Основные принципы применения ИИ в этой сфере включают несколько ключевых компонентов:\n\n### 1. **Сбор и подготовка данных**\n- **Медицинские изображения**: Такие как рентгенограммы, МРТ, КТ, что требует высокой точности и детализации.\n- **Электронные медицинские записи (ЭМЗ)**: Включают историю болезни, лабораторные результаты, генетические данные и другие важные сведения.\n- **Сенсорные данные**: Полученные с устройств мониторинга здоровья, носимых гаджетов и других медицинских сенсоров.\n\nПодготовка данных включает очистку, анонимизацию, преобразование и нормализацию, чтобы обеспечить их пригодность для анализа ИИ-моделями.\n\n### 2. **Выбор и разработка моделей машинного обучения**\n- **Нейронные сети и глубокое обучение**: Особенно эффективны для анализа изображений и распознавания сложных паттернов.\n- **Методы обучения без учителя**: Помогают выявлять скрытые структуры в медицинских данных.\n- **Методы ансамблей**: Комбинирование нескольких моделей для повышения точности и устойчивости результатов.\n\n### 3. **Обучение и валидация моделей**\n- **Обучающие данные**: Модели обучаются на больших наборах данных с известными диагнозами для распознавания шаблонов, связанных с различными состояниями здоровья.\n- **Валидация и тестирование**: Проверка точности и надежности моделей на независимых наборах данных для оценки их способности обобщать результаты на новых пациентах.\n\n### 4. **Интерпретируемость и объяснимость**\n- **Объяснимые алгоритмы**: Разработка моделей, которые могут предоставлять понятные и прозрачные объяснения своих решений, что важно для доверия медицинских специалистов.\n- **Визуализация результатов**: Использование тепловых карт, графиков и других визуальных инструментов для демонстрации оснований для диагностических выводов.\n\n### 5. **Интеграция в клинические рабочие процессы**\n- **Информационные системы**: Внедрение ИИ-инструментов в существующие электронные медицинские системы для облегчения доступа и использования.\n- **Поддержка принятия решений**: Предоставление врачам рекомендаций и предупреждений на основе анализа данных, что помогает в постановке диагнозов и выборе лечения.\n- **Обучение и адаптация персонала**: Обучение медицинских работников работе с новыми технологиями и пониманию их возможностей и ограничений.\n\n### 6. **Этические и правовые аспекты**\n- **Конфиденциальность и безопасность данных**: Обеспечение защиты персональной медицинской информации пациентов.\n- **Справедливость и отсутствие предвзятости**: Разработка моделей, которые не являются дискриминационными и работают одинаково эффективно для различных групп населения.\n- **Соответствие нормативным требованиям**: Соблюдение стандартов и регуляций, установленных медицинскими и правовыми органами.\n\n### 7. **Непрерывное обучение и улучшение моделей**\n- **Обновление данных**: Регулярное добавление новых данных для улучшения точности и актуальности моделей.\n- **Мониторинг производительности**: Постоянное отслеживание эффективности ИИ-инструментов в реальных клинических условиях и внесение необходимых корректировок.\n\n### Примеры применения ИИ в медицинской диагностике\n- **Радиология**: Автоматизированный анализ медицинских изображений для выявления опухолей, переломов и других аномалий.\n- **Кардиология**: Диагностика сердечных заболеваний на основе электрокардиограмм и других данных.\n- **Онкология**: Распознавание и классификация различных типов рака, оценка прогноза и подбор оптимального лечения.\n- **Диагностика редких заболеваний**: Помощь в распознавании и диагностике редких и сложных состояний, которые сложно выявить традиционными методами.\n\n### Заключение\nПрименение искусственного интеллекта в медицинской диагностике обладает огромным потенциалом для улучшения качества медицинской помощи, сокращения ошибок и ускорения процессов диагностики. Однако успешная интеграция ИИ в здравоохранение требует комплексного подхода, учитывающего технические, этические и организационные аспекты.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Написание чистого кода — важный аспект разработки, который облегчает поддержку, масштабирование и понимание проекта. Вот несколько ключевых советов, которые помогут вам писать более чистый и качественный код:\n\n1. **Понятные и осмысленные имена**:\n   - Используйте имена переменных, функций и классов, которые ясно отражают их назначение.\n   - Избегайте аббревиатур и слишком коротких имен, если они не общеприняты.\n\n2. **Функции выполняют одну задачу**:\n   - Каждая функция должна выполнять одну конкретную задачу. Это упрощает тестирование и повторное использование.\n   - Если функция становится слишком длинной или выполняет несколько действий, рассмотрите возможность разбиения её на более мелкие части.\n\n3. **Следуйте принципу DRY (Don't Repeat Yourself)**:\n   - Избегайте дублирования кода. Если вы замечаете повторяющиеся участки, вынесите их в отдельные функции или модули.\n   - Это облегчает сопровождение и уменьшает вероятность ошибок при изменениях.\n\n4. **Правильное форматирование и стиль кода**:\n   - Соблюдайте единый стиль оформления кода, включая отступы, пробелы и расположение скобок.\n   - Используйте автоформаттеры и придерживайтесь соглашений стиля, принятых в вашем проекте или сообществе.\n\n5. **Минимизация глубокой вложенности**:\n   - Старайтесь избегать чрезмерной вложенности циклов и условных операторов.\n   - Используйте ранний выход из функций (например, `return` или `continue`), чтобы уменьшить уровень вложенности.\n\n6. **Комментирование с умом**:\n   - Пишите комментарии, которые объясняют \"почему\" делается то или иное действие, а не \"что\" делает код.\n   - Избегайте избыточных комментариев и поддерживайте их актуальность по мере изменения кода.\n\n7. **Применение SOLID-принципов**:\n   - **S**ingle Responsibility Principle: Каждый класс должен иметь одну обязанность.\n   - **O**pen/Closed Principle: Классы должны быть открыты для расширения, но закрыты для модификации.\n   - **L**iskov Substitution Principle: Объекты должны быть заменяемы экземплярами их подтипов.\n   - **I**nterface Segregation Principle: Интерфейсы не должны навязывать ненужные методы.\n   - **D**ependency Inversion Principle: Зависимости должны основываться на абстракциях, а не на конкретных реализациях.\n\n8. **Избегайте магических чисел и строк**:\n   - Используйте константы с понятными именами вместо \"магических\" значений, чтобы код был более читаемым и поддерживаемым.\n\n9. **Тестируемость кода**:\n   - Пишите код таким образом, чтобы его было легко тестировать. Используйте модульные тесты для проверки отдельных компонентов.\n   - Чем проще тестировать код, тем быстрее можно обнаруживать и исправлять ошибки.\n\n10. **Рефакторинг**:\n    - Регулярно пересматривайте и улучшайте существующий код без изменения его функциональности.\n    - Рефакторинг помогает поддерживать кодовую базу чистой и упорядоченной.\n\n11. **Используйте абстракции разумно**:\n    - Создавайте уровни абстракции для скрытия сложностей и улучшения читаемости кода.\n    - Не злоупотребляйте абстракциями — они должны служить улучшению понимания, а не усложнять его.\n\n12. **Документация**:\n    - Помимо комментариев в коде, ведите внешнюю документацию, описывающую архитектуру, ключевые решения и особенности проекта.\n    - Хорошая документация помогает новым участникам быстро понять проект и облегчает дальнейшее его развитие.\n\n13. **Используйте инструменты линтинга и статического анализа**:\n    - Инструменты типа ESLint, Pylint, или RuboCop помогают автоматически проверять код на соответствие стандартам и находить потенциальные ошибки.\n    - Настройте их в вашем проекте для поддержания единообразия и качества кода.\n\n14. **Пиши код для других**:\n    - Помните, что код читают и поддерживают другие разработчики. Стремитесь к тому, чтобы ваш код был понятен и легко читаем.\n    - Избегайте сложных конструкций, если можно выразить ту же логику более простым способом.\n\n15. **Следуйте принципу KISS (Keep It Simple, Stupid)**:\n    - Стремитесь к простоте во всём — простые решения зачастую более эффективны и понятны.\n    - Сложные конструкции могут привести к ошибкам и усложнить поддержку кода.\n\nПрименение этих принципов и практик поможет вам создавать чистый, понятный и легко поддерживаемый код, что значительно повысит качество ваших проектов и облегчит совместную работу в команде.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Безопасность в интернете является важным аспектом современной жизни, особенно учитывая рост цифровизации и онлайн-активности. Вот основные правила, которые помогут вам защищать себя и свои данные в сети:\n\n1. **Используйте Надёжные Пароли:**\n   - Создавайте сложные пароли, содержащие комбинацию букв (верхнего и нижнего регистра), цифр и специальных символов.\n   - Избегайте использования однотипных паролей для разных аккаунтов.\n   - Регулярно обновляйте свои пароли.\n\n2. **Двуфакторная Аутентификация (2FA):**\n   - Включите 2FA там, где это возможно. Это добавляет дополнительный уровень защиты, требуя подтверждения входа через второй фактор (например, SMS-код или приложение-аутентификатор).\n\n3. **Будьте Осторожны с Личной Информацией:**\n   - Не разглашайте личные данные (адрес, телефон, финансовую информацию) на ненадёжных сайтах или в подозрительных сообщениях.\n   - Проверьте настройки приватности в социальных сетях и ограничьте видимость своих данных.\n\n4. **Остерегайтесь Фишинговых Атак:**\n   - Будьте внимательны к электронным письмам и сообщениям от неизвестных отправителей, особенно если они содержат ссылки или просьбы предоставить личную информацию.\n   - Проверяйте URL сайтов перед вводом своих данных, чтобы убедиться в их подлинности.\n\n5. **Обновляйте Программы и Операционную Систему:**\n   - Регулярно устанавливайте обновления для вашего компьютера, смартфона и используемых приложений. Обновления часто содержат важные исправления безопасности.\n\n6. **Используйте Антивирусное ПО и Брандмауэры:**\n   - Установите надёжное антивирусное программное обеспечение и регулярно проводите сканирование системы.\n   - Включите брандмауэр для защиты от несанкционированного доступа.\n\n7. **Осторожно с Публичными Wi-Fi Сетями:**\n   - Избегайте проведения финансовых операций или передачи конфиденциальной информации через публичные Wi-Fi сети.\n   - Используйте VPN (виртуальную частную сеть) для шифрования вашего интернет-трафика при подключении к общественным сетям.\n\n8. **Будьте Внимательны при Скачивании Файлов и Приложений:**\n   - Загружайте программы только с официальных сайтов или проверенных источников.\n   - Проверяйте файлы на наличие вирусов перед их открытием.\n\n9. **Резервное Копирование Данных:**\n   - Регулярно создавайте резервные копии важных файлов на внешних носителях или в облачных хранилищах. Это поможет восстановить данные в случае потери или атаки.\n\n10. **Образование и Осведомлённость:**\n    - Постоянно повышайте свои знания о современных угрозах в интернете и способах их предотвращения.\n    - Следите за новостями в области кибербезопасности и обновляйте свои методы защиты соответственно.\n\n11. **Используйте Надёжные Источники и Проверенные Сайты:**\n    - Переходите только на авторитетные сайты и избегайте подозрительных ресурсов.\n    - Проверяйте наличие SSL-сертификатов (значок \"замок\" в адресной строке) при вводе конфиденциальных данных.\n\n12. **Контролируйте Доступ к Устройствам:**\n    - Устанавливайте пароли или биометрическую аутентификацию на всех своих устройствах.\n    - Не оставляйте устройства без присмотра в общественных местах.\n\nСледование этим правилам поможет значительно повысить вашу безопасность в интернете и защитить ваши данные от потенциальных угроз. Помните, что кибербезопасность — это постоянный процесс, требующий внимания и своевременных действий.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**Dependency Injection (Внедрение зависимостей)** — это дизайнерский паттерн в программировании, который позволяет повысить гибкость и тестируемость кода за счёт разделения создания объектов и их зависимости. Вместо того чтобы класс сам создавал или инициализировал свои зависимости, они предоставляются ему извне, обычно через конструктор, сеттеры или интерфейсы. Это способствует слабой связанности компонентов системы, облегчает их замену и поддержку.\n\n### Основные понятия\n\n1. **Зависимость**: Это объект, который необходим другому объекту (классу) для выполнения своей работы. Например, если класс `Car` использует класс `Engine`, то `Engine` — зависимость для `Car`.\n\n2. **Инъекция зависимостей**: Процесс предоставления зависимостей объекту извне, а не создания их внутри самого объекта.\n\n### Способы внедрения зависимостей\n\n1. **Внедрение через конструктор (Constructor Injection)**:\n   Зависимости передаются через параметры конструктора класса.\n   ```java\n   public class Car {\n       private Engine engine;\n\n       public Car(Engine engine) {\n           this.engine = engine;\n       }\n   }\n   ```\n\n2. **Внедрение через сеттер (Setter Injection)**:\n   Зависимости устанавливаются через специальные методы (сеттеры) после создания объекта.\n   ```java\n   public class Car {\n       private Engine engine;\n\n       public void setEngine(Engine engine) {\n           this.engine = engine;\n       }\n   }\n   ```\n\n3. **Внедрение через интерфейс (Interface Injection)**:\n   Класс реализует интерфейс, который предоставляет метод для внедрения зависимости.\n   ```java\n   public interface EngineInjector {\n       void injectEngine(Car car);\n   }\n\n   public class CarEngineInjector implements EngineInjector {\n       public void injectEngine(Car car) {\n           car.setEngine(new Engine());\n       }\n   }\n   ```\n\n### Преимущества Dependency Injection\n\n- **Слабая связанность**: Классы не зависят от конкретных реализаций своих зависимостей, что облегчает замену и модификацию компонентов.\n  \n- **Упрощение тестирования**: Зависимости можно легко подменять на моки или стабы при написании модульных тестов.\n  \n- **Повышенная читаемость и поддерживаемость кода**: Явное определение зависимостей делает структуру приложения понятнее.\n  \n- **Переиспользуемость компонентов**: Компоненты можно использовать в разных контекстах без изменения их внутренней логики.\n\n### Пример без Dependency Injection\n\n```java\npublic class Car {\n    private Engine engine;\n\n    public Car() {\n        this.engine = new Engine(); // Карс сам создает зависимость\n    }\n}\n```\n\n### Пример с Dependency Injection\n\n```java\npublic class Car {\n    private Engine engine;\n\n    public Car(Engine engine) { // Зависимость передается извне\n        this.engine = engine;\n    }\n}\n```\n\nВ первом примере класс `Car` жестко зависит от конкретной реализации `Engine`. Во втором примере `Engine` передаётся извне, что позволяет легко заменить его другой реализацией или мок-объектом для тестирования.\n\n### Инструменты для Dependency Injection\n\nСуществуют фреймворки и контейнеры, которые упрощают внедрение зависимостей, управляя жизненным циклом объектов и их зависимостями автоматически. Некоторые из них:\n\n- **Spring (для Java)**: Один из самых популярных фреймворков, предоставляющий мощные средства для внедрения зависимостей.\n- **Guice (для Java)**: Лёгковесный фреймворк от Google для внедрения зависимостей.\n- **Dagger (для Java и Android)**: Компилируемый фреймворк, оптимизированный для производительности.\n- **Inversify (для JavaScript/TypeScript)**: Библиотека для внедрения зависимостей в JavaScript-приложениях.\n\n### Заключение\n\nDependency Injection способствует созданию гибких, масштабируемых и легко тестируемых приложений. Разделяя создание объектов и их использование, разработчики могут лучше управлять зависимостями, упрощая процесс разработки и поддержки программного обеспечения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор правильных очков для зрения — важный шаг, влияющий на комфорт и здоровье ваших глаз. Вот основные рекомендации, которые помогут подобрать идеальные очки:\n\n1. **Прохождение обследования у офтальмолога:**\n   Прежде чем выбрать очки, необходимо пройти полное обследование зрения у квалифицированного специалиста. Это поможет определить точную диоптрику и выявить возможные проблемы со зрением.\n\n2. **Определение типа линз:**\n   - **Однофокальные линзы:** Для корректировки близкого или дальнего зрения.\n   - **Бифокальные или мультифокальные линзы (прогрессивные):** Для людей с пресбиопией, нуждающихся в коррекции как для ближнего, так и для дальнего зрения.\n   - **Специализированные линзы:** Для компьютерной работы, спортивных занятий и других специфических задач.\n\n3. **Выбор оправы:**\n   - **Размер и форма:** Оправы должны гармонировать с формой вашего лица. Например, круглые оправы хорошо смотрятся на квадратных лицах, а угловатые — на круглых.\n   - **Материал:** Металлические оправы долговечны и легкие, пластиковые — разнообразны в цвете и дизайне, гибридные сочетают преимущества разных материалов.\n   - **Ширина и посадка:** Оправы должны хорошо сидеть на носу и заушниках, не давить и не скользить.\n\n4. **Подбор линз:**\n   - **Материал линз:** Пластиковые (поликарбонат) легкие и устойчивы к ударам, стеклянные обеспечивают наилучшее качество изображения, но тяжелее и хрупкие.\n   - **Покрытия:** Антирефлективное покрытие уменьшает блики, защитное от царапин повышает долговечность, фотохромные линзы автоматически темнеют на солнце.\n   - **УФ-защита:** Обязательно выбирать линзы с защитой от ультрафиолетовых лучей для предотвращения повреждений глаз.\n\n5. **Учет стиля жизни:**\n   - **Спорт и активные занятия:** Рассмотрите варианты спортивных оправ с дополнительной фиксацией.\n   - **Компьютерная работа:** Специальные антибликовые покрытия и фильтры синего света помогут снизить нагрузку на глаза.\n   - **Ежедневная носка:** Выбирайте оправы, сочетающиеся с вашим гардеробом и стилем.\n\n6. **Проверка зрения и примерка:**\n   - Приобретайте очки в специализированных оптиках с возможностью примерки.\n   - Убедитесь, что линзы правильно центрированы относительно глаз, стёкла не искажают изображение.\n   - Проверьте комфорт при ношении: отсутствие давления на переносицу и заушники, свободное движение при наклоне головы.\n\n7. **Консультация специалистов:**\n   - Обратитесь к консультантам в оптике для получения рекомендаций по выбору оправы и линз.\n   - Не стесняйтесь задавать вопросы о материалах, гарантиях и услугах после покупки.\n\n8. **Бюджет:**\n   - Определите максимальную сумму, которую готовы потратить, но помните, что качественные очки — это инвестиция в здоровье ваших глаз.\n   - Рассмотрите варианты со скидками или акциями, но не жертвуйте качеством ради цены.\n\nСледуя этим рекомендациям, вы сможете выбрать очки, которые не только обеспечат четкое зрение, но и подчеркнут вашу индивидуальность, будут удобны в носке и прослужат долгое время.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Ферментированные продукты занимают важное место в рационе многих культур по всему миру благодаря своим питательным и оздоровительным свойствам. Вот основные преимущества включения ферментированных продуктов в ежедневное питание:\n\n1. **Богатый источник пробиотиков:**\n   Ферментированные продукты, такие как йогурт, кефир, квашеная капуста и кимчи, содержат живые микроорганизмы (пробиотики), которые благотворно влияют на микрофлору кишечника. Здоровая кишечная флора способствует улучшению пищеварения, укреплению иммунной системы и предотвращению роста патогенных бактерий.\n\n2. **Улучшение пищеварения:**\n   Ферментация разлагает сложные вещества, делая питательные вещества более доступными для усвоения организмом. Это особенно полезно для людей с чувствительным пищеварением или непереносимостью определенных продуктов.\n\n3. **Увеличение биодоступности витаминов и минералов:**\n   Во время ферментации повышается содержание некоторых витаминов, например, витаминов группы B и витамина K. Это способствует лучшему усвоению минералов, таких как кальций, магний и железо.\n\n4. **Антиоксидантные свойства:**\n   Многие ферментированные продукты содержат антиоксиданты, которые помогают бороться со свободными радикалами в организме, снижая риск развития хронических заболеваний и замедляя процессы старения.\n\n5. **Поддержка иммунной системы:**\n   Пробиотики, содержащиеся в ферментированных продуктах, способствуют укреплению иммунной системы, помогая организму эффективнее бороться с инфекциями и воспалениями.\n\n6. **Снижение уровня холестерина и сахара в крови:**\n   Некоторые исследования показывают, что регулярное потребление ферментированных продуктов может способствовать снижению уровня плохого холестерина (LDL) и улучшению регуляции сахара в крови, что важно для профилактики сердечно-сосудистых заболеваний и диабета 2 типа.\n\n7. **Поддержка психического здоровья:**\n   Связь между кишечной флорой и мозговыми функциями, известная как ось \"кишечник-мозг\", предполагает, что здоровая микрофлора может положительно влиять на настроение и когнитивные функции, снижая уровень стресса и тревожности.\n\n8. **Разнообразие и вкус:**\n   Ферментированные продукты добавляют разнообразие в рацион благодаря уникальным вкусам и текстурам. Они могут служить отличным дополнением к разнообразным блюдам, обогащая их вкус и питательную ценность.\n\n**Примеры ферментированных продуктов:**\n- **Молочные продукты:** йогурт, кефир, простокваша\n- **Овощи:** квашеная капуста, солёные огурцы, кимчи\n- **Напитки:** комбуча, айрванг, традиционный японский сакэ\n- **Соевые продукты:** мисо, натто, темпе\n- **Бок-чой и другие ферментированные зелени**\n\n**Важные замечания:**\nХотя ферментированные продукты имеют множество преимуществ, важно учитывать индивидуальные особенности организма. Некоторые люди могут испытывать дискомфорт или аллергические реакции на определённые ферментированные продукты. Начинать включение их в рацион следует постепенно и наблюдать за реакцией организма.\n\nВ заключение, ферментированные продукты являются ценным дополнением к здоровому питанию, способствуя улучшению общего самочувствия и поддержке различных систем организма. Однако, как и с любыми продуктами, умеренность и разнообразие играют ключевую роль в их использовании.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация системы хранения документов играет ключевую роль в повышении эффективности работы и обеспечении быстрого доступа к необходимой информации. Вот несколько советов, которые помогут вам создать эффективную систему хранения документов:\n\n1. **Категоризация документов**:\n   - **Основные категории**: Разделите документы на крупные группы, такие как **личные**, **финансовые**, **юридические**, **рабочие**, **медицинские** и т.д.\n   - **Подкатегории**: Внутри каждой основной категории создайте более детальные подкатегории. Например, в **финансовых** документах могут быть **банковские выписки**, **счета-фактуры**, **квитанции**, **налоговые документы** и т.п.\n\n2. **Использование цифровых и физических систем**:\n   - **Физическое хранение**: Используйте папки, папки-картотексы, файловые шкафы или боксы для хранения бумажных документов. Обязательно маркируйте каждую папку с указанием категории и подкатегории.\n   - **Цифровое хранение**: Сканируйте важные документы и храните их в электронном виде. Используйте облачные сервисы (например, Google Drive, Dropbox) или локальные серверы для обеспечения доступа и безопасности.\n\n3. **Разработка системы маркировки и наименования**:\n   - **Единый стиль**: Придумайте единый формат наименования файлов и папок, включающий ключевые данные, такие как дата, тема, номер документа и т.д. Например: `2024-04-27_Налоговая декларация.pdf`.\n   - **Цветовая кодировка**: Используйте цветные метки или папки для быстрого распознавания различных категорий.\n\n4. **Регулярное обновление и очистка**:\n   - **План ревизии**: Устанавливайте регулярные сроки для проверки и обновления системы хранения. Это поможет избежать накопления ненужных документов.\n   - **Удаление и архивирование**: Удаляйте устаревшие документы или перемещайте их в архив, если они могут понадобиться в будущем, но не требуют постоянного доступа.\n\n5. **Обеспечение безопасности и конфиденциальности**:\n   - **Физическая безопасность**: Храните важные документы в замкнутых шкафах или сейфах.\n   - **Цифровая безопасность**: Используйте надежные пароли, шифрование и двухфакторную аутентификацию для защиты электронных документов.\n\n6. **Использование специализированного программного обеспечения**:\n   - **Системы управления документами (DMS)**: Такие программы, как Evernote, Microsoft OneNote, или специализированные DMS системы, могут помочь в организации, поиске и управлении документами.\n   - **Автоматизация процессов**: Настройте автоматические резервные копии, распознавание текста (OCR) и другие функции для упрощения работы с документами.\n\n7. **Обучение и инструкции для пользователей**:\n   - **Стандарты**: Разработайте инструкции по использованию системы хранения для всех пользователей, чтобы обеспечить единообразие.\n   - **Обучение**: Проводите обучение сотрудников или членов семьи, чтобы все знали, как правильно сохранять и находить документы.\n\n8. **Оптимизация пространства**:\n   - **Эргономика**: Разместите часто используемые документы в легкодоступных местах, а редко используемые – в более отдаленных.\n   - **Использование места**: Максимально эффективно используйте доступное пространство, используя многоуровневые полки, стеллажи или вертикальные системы хранения.\n\n9. **Бэкапы и восстановление**:\n   - **Резервное копирование**: Регулярно создавайте резервные копии как физических, так и цифровых документов.\n   - **План восстановления**: Разработайте план действий на случай потери данных, чтобы минимизировать риски и быстро восстановить информацию.\n\n10. **Документирование процессов**:\n    - **Системные описания**: Задокументируйте структуру хранения, правила наименования и процессы управления документами. Это облегчит поддержание порядка и передачу информации новым пользователям системы.\n\nПрименение этих рекомендаций поможет создать организованную и эффективную систему хранения документов, которая облегчит доступ к информации, повысит безопасность данных и сэкономит ваше время.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Регулярные проверки здоровья играют ключевую роль в поддержании общего благополучия и профилактике различных заболеваний. Вот несколько основных причин, почему важно проводить такие осмотры регулярно:\n\n1. **Раннее обнаружение заболеваний**: Многие серьезные заболевания, такие как диабет, гипертония, рак и сердечно-сосудистые болезни, в начальных стадиях могут протекать бессимптомно. Регулярные обследования позволяют выявить эти проблемы на ранних стадиях, что значительно повышает шансы на успешное лечение и уменьшает риск осложнений.\n\n2. **Мониторинг существующих состояний**: Если у вас уже есть хронические заболевания, регулярные визиты к врачу необходимы для контроля состояния, корректировки лечения и предотвращения ухудшения здоровья.\n\n3. **Установление отношений с медицинскими специалистами**: Постоянный контакт с врачом позволяет ему лучше понимать вашу историю болезни и образ жизни, что способствует более точной диагностике и эффективному лечению.\n\n4. **Продвижение здорового образа жизни**: Во время регулярных осмотров врачи могут давать рекомендации по питанию, физической активности, отказу от вредных привычек и другим аспектам здорового образа жизни, что помогает поддерживать и улучшать ваше здоровье.\n\n5. **Снижение расходов на здравоохранение**: Профилактика и раннее лечение заболеваний обычно обходятся дешевле, чем лечение уже прогрессирующих болезней. Это позволяет избежать высоких затрат на медицинские услуги и медикаменты в будущем.\n\n6. **Психологическое спокойствие**: Знание о своем состоянии здоровья и отсутствие серьезных заболеваний приносит уверенность и снижает уровень стресса, связанного с неопределенностью.\n\n7. **Персонализированные рекомендации**: Врачи могут предоставить индивидуальные советы и планы действий, основанные на вашем возрасте, генетике, образе жизни и других факторах, что способствует более эффективному поддержанию здоровья.\n\n8. **Вакцинация и профилактические меры**: Регулярные визиты позволяют своевременно обновлять прививки и получать информацию о сезонных предупреждениях и профилактических мерах, таких как скрининги и тесты.\n\nВ целом, регулярные проверки здоровья являются неотъемлемой частью ответственного подхода к своему здоровью. Они помогают не только поддерживать хорошее физическое состояние, но и повышают качество жизни, обеспечивая возможность своевременно реагировать на возникающие проблемы.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Очистка питьевой воды осуществляется различными методами, основанными на физических, химических и биологических процессах. Ниже представлен краткий обзор основных методов и их научных основ:\n\n### 1. Физические методы\n\n- **Седиментация**: Позволяет взвешенным частицам оседать под действием силы тяжести. Используется для удаления крупных взвешенных загрязнений.\n  \n- **Фильтрация**: Применение различных фильтров (песчаных, активированного угля, мембранных) для задерживания частиц различного размера, органических веществ и некоторых микробов.\n\n- **Дистилляция**: Испарение воды с последующей конденсацией паров, что позволяет удалить соли, тяжелые металлы и микроорганизмы, имеющие более высокие точки кипения, чем вода.\n\n**Научная основа**: Разделение компонентов на основе физических свойств таких как размер частиц, температура кипения и растворимость.\n\n### 2. Химические методы\n\n- **Хлорирование**: Добавление хлора для дезинфекции воды, уничтожения бактерий, вирусов и других патогенных микроорганизмов.\n\n- **Озонирование**: Использование озона как сильного окислителя для удаления органических и неорганических загрязнителей, а также микроорганизмов.\n\n- **Коагуляция и флокуляция**: Введение коагулянтов (например, сульфата алюминия) для агрегации мелких частиц в более крупные флокулы, облегчающие их удаление.\n\n**Научная основа**: Химические реакции, приводящие к инактивации патогенов и агрегации загрязнителей для последующего удаления.\n\n### 3. Биологические методы\n\n- **Биофильтрация**: Использование микроорганизмов для разложения органических загрязнителей. Вода проходит через биофильтр, населённый полезными бактериями, которые разлагают вредные вещества.\n\n**Научная основа**: Метаболическая активность микроорганизмов, способствующая разложению органических соединений.\n\n### 4. Современные и усовершенствованные методы\n\n- **Ультрафиолетовая (УФ) обработка**: Облучение воды ультрафиолетовыми лучами, что приводит к повреждению ДНК микроорганизмов и их инактивации.\n\n- **Обратный осмос**: Применение полупроницаемых мембран для удаления растворённых ионов, молекул и крупных частиц из воды под давлением.\n\n- **Ионообмен**: Использование ионообменных смол для удаления определённых ионов, таких как жесткость воды (кальций, магний) или тяжелые металлы.\n\n**Научная основа**:\n- УФ обработка базируется на фотохимических реакциях, которые повреждают генетический материал микроорганизмов.\n- Обратный осмос использует физическое разделение на молекулярном уровне с помощью мембранной технологии.\n- Ионообмен опирается на химическое связывание и замещение ионов в растворе.\n\n### Заключение\n\nКомбинация различных методов очистки позволяет эффективно удалять широкий спектр загрязнителей из питьевой воды, обеспечивая её безопасность и соответствие санитарным нормам. Выбор конкретных методов зависит от качества исходной воды и требуемого уровня очистки.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Современный фронтенд-стек включает в себя разнообразные инструменты и фреймворки, которые помогают разработчикам эффективно создавать, поддерживать и масштабировать веб-приложения. Рассмотрим основные составляющие современного фронтенд-стека:\n\n### 1. **Библиотеки и Фреймворки**\n\n- **React**: Разработанный Facebook, React является одной из самых популярных библиотек для создания пользовательских интерфейсов. Он основан на компонентном подходе и позволяет создавать быстрые и интерактивные приложения.\n\n- **Vue.js**: Прогрессивный фреймворк для построения пользовательских интерфейсов. Vue известен своей простотой, гибкостью и легкостью интеграции в существующие проекты.\n\n- **Angular**: Полноценный фреймворк от Google, предоставляющий комплексное решение для построения масштабируемых веб-приложений. Он включает встроенные средства для маршрутизации, управления состоянием и много другого.\n\n### 2. **Управление Состоянием**\n\n- **Redux**: Предсказуемый контейнер состояния для JavaScript-приложений, часто используемый вместе с React.\n\n- **Vuex**: Система управления состоянием для приложений на Vue.js, обеспечивающая централизованное хранение данных.\n\n- **MobX**: Библиотека для упрощенного управления состоянием, используя реактивные принципы.\n\n### 3. **Инструменты Сборки и Бандлеры**\n\n- **Webpack**: Один из самых популярных бандлеров модулей, позволяющий собирать JavaScript, CSS и другие ресурсы в оптимизированные пакеты.\n\n- **Vite**: Современный инструмент сборки, использующий нативные ES-модули для обеспечения быстрой разработки и быстрой сборки.\n\n- **Parcel**: Бандлер с нулевой конфигурацией, который автоматически определяет необходимые настройки для проекта.\n\n### 4. **Менеджеры Пакетов**\n\n- **npm (Node Package Manager)**: Стандартный менеджер пакетов для JavaScript, позволяющий устанавливать и управлять зависимостями проекта.\n\n- **Yarn**: Альтернативный менеджер пакетов, известный своей скоростью и дополнительными возможностями, такими как оффлайн-установка.\n\n### 5. **CSS-Фреймворки и Препроцессоры**\n\n- **Sass**: Один из самых популярных CSS-препроцессоров, добавляющий возможности использования переменных, вложенности и миксинов.\n\n- **Tailwind CSS**: Утилитарный CSS-фреймворк, позволяющий быстро создавать адаптивные интерфейсы с помощью готовых классов.\n\n- **Bootstrap**: Классический CSS-фреймворк с обширным набором готовых компонентов и утилит для быстрого прототипирования.\n\n### 6. **TypeScript**\n\nРасширение JavaScript, добавляющее статическую типизацию. TypeScript помогает выявлять ошибки на этапе разработки и улучшает читаемость кода, что особенно полезно в крупных проектах.\n\n### 7. **Тестирование**\n\n- **Jest**: Универсальный тестировщик от Facebook, идеально подходящий для тестирования React-компонентов и других JavaScript-кодов.\n\n- **Mocha**: Гибкий фреймворк для тестирования, позволяющий настраивать различные аспекты тестирования.\n\n- **Cypress**: Современный инструмент для энд-ту-энд тестирования, обеспечивающий быстрые и надежные тесты пользовательских интерфейсов.\n\n### 8. **Среды Разработки и Инструменты**\n\n- **Visual Studio Code (VS Code)**: Популярный редактор кода с богатым набором расширений для фронтенд-разработки.\n\n- **Git**: Система контроля версий, часто используемая совместно с платформами GitHub, GitLab или Bitbucket для управления кодом и совместной работы.\n\n### 9. **Работа с API**\n\n- **Axios**: Популярная библиотека для выполнения HTTP-запросов, поддерживающая промисы и асинхронные операции.\n\n- **Fetch API**: Встроенный в браузеры интерфейс для выполнения сетевых запросов, предоставляющий современный подход к работе с HTTP.\n\n### 10. **Генераторы Статических Сайтов**\n\n- **Next.js**: Фреймворк для React, поддерживающий серверный рендеринг и статическую генерацию сайтов.\n\n- **Nuxt.js**: Аналог Next.js для Vue.js, предоставляющий схожие возможности для создания универсальных приложений.\n\n- **Gatsby**: Генератор статических сайтов на основе React, оптимизированный для создания быстрых и SEO-дружественных сайтов.\n\n### 11. **Прогрессивные Веб-Приложения (PWA)**\n\nИнструменты и библиотеки для создания приложений, работающих как нативные, с поддержкой офлайн-режима, уведомлений и других функций. Примером может служить **Workbox** для управления сервис-воркерами.\n\n### 12. **Линтинги и Форматирование Кода**\n\n- **ESLint**: Инструмент для анализа кода на JavaScript с целью выявления и исправления ошибок и несоответствий стилю кодирования.\n\n- **Prettier**: Автоматический форматтер кода, обеспечивающий единообразный стиль оформления.\n\n### 13. **Архитектурные Подходы**\n\n- **JAMstack**: Архитектурный подход, основанный на использовании JavaScript, API и Markup для создания быстрых, безопасных и масштабируемых веб-приложений.\n\n- **Микрофронтенды**: Подход к разработке, при котором фронтенд-приложение делится на небольшие, независимые части, каждая из которых разрабатывается и разворачивается отдельно.\n\n### Заключение\n\nСовременный фронтенд-стек постоянно эволюционирует, предлагая разработчикам новые инструменты и технологии для повышения эффективности и качества создаваемых приложений. Выбор конкретных инструментов и фреймворков зависит от требований проекта, команды и личных предпочтений разработчиков. Важно следить за трендами и обновлениями в экосистеме, чтобы использовать самые актуальные и проверенные решения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Появление сенсорных сетей (или сенсорных сетей, от англ. Sensor Networks) значительно изменило подходы к научным исследованиям, внедрив новые возможности для сбора, передачи и анализа данных. Сенсорные сети представляют собой распределённые системы малогабаритных устройств (сенсоров), способных измерять различные физические, химические или биологические параметры, а затем передавать собранную информацию для дальнейшей обработки. Ниже приведены основные аспекты, в которых сенсорные сети оказали существенное влияние на научные исследования:\n\n1. **Увеличение объёма и качества данных**:\n   Сенсорные сети позволяют собирать данные в реальном времени с высокой частотой и в больших объёмах. Это существенно улучшает качество исследований, предоставляя более детализированную и актуальную информацию. Например, в климатологии сенсоры размещаются по обширным территориям для мониторинга погодных условий, что повышает точность климатических моделей.\n\n2. **Расширение возможностей наблюдения**:\n   Благодаря компактности и автономности сенсоров, учёные могут проводить мониторинг в труднодоступных или ранее недоступных местах, таких как глубоководные зоны, удалённые леса или экстремальные климатические условия. Это открывает новые горизонты для исследований в геологии, биологии, экологии и других областях.\n\n3. **Автоматизация и удалённое управление**:\n   Сенсорные сети позволяют автоматизировать процесс сбора данных, что снижает необходимость ручного вмешательства и минимизирует вероятность человеческой ошибки. Это особенно полезно в долгосрочных исследованиях, где постоянный мониторинг требует значительных ресурсов.\n\n4. **Интеграция междисциплинарных подходов**:\n   Сенсорные сети объединяют технологии из разных областей, таких как электроника, информатика, телекоммуникации и энергетика. Это стимулирует развитие междисциплинарных исследований и инноваций, например, в области интернета вещей (IoT) или умных городов.\n\n5. **Повышение скорости анализа и принятия решений**:\n   Собранные сенсорами данные могут обрабатываться в режиме реального времени, что позволяет быстро реагировать на изменения и принимать обоснованные решения. В медицине это, например, позволяет мониторить состояние пациентов и оперативно реагировать на критические изменения.\n\n6. **Снижение затрат и повышение эффективности**:\n   Развертывание сенсорных сетей может быть экономически выгодным по сравнению с традиционными методами сбора данных, особенно при необходимости покрытия больших территорий или длительного мониторинга. Это делает исследования более доступными и расширяет их масштаб.\n\n7. **Поддержка моделирования и прогнозирования**:\n   Большие объёмы данных, полученные с помощью сенсорных сетей, служат основой для создания более точных моделей и прогнозов в различных областях, включая метеорологию, экосистемы, урбанистику и здравоохранение.\n\n8. **Улучшение взаимодействия с обществом**:\n   Сенсорные сети могут интегрироваться с мобильными приложениями и другими интерфейсами, позволяя учёным делиться данными и результатами исследований с широкой аудиторией в реальном времени. Это способствует более открытому и прозрачному научному процессу, а также повышает вовлечённость общества в научные проекты.\n\n**Примеры применения сенсорных сетей в научных исследованиях**:\n\n- **Экология и охрана окружающей среды**: Мониторинг качества воздуха и воды, отслеживание миграций животных, наблюдение за лесными пожарами.\n- **Здравоохранение**: Носимые устройства для мониторинга физиологических показателей, сбор данных о распространении заболеваний.\n- **Сельское хозяйство**: Автоматизированный мониторинг состояния посевов, управление орошением и удобрениями на основе данных сенсоров.\n- **Геология и климатология**: Измерение сейсмической активности, отслеживание климатических изменений и экстремальных погодных явлений.\n- **Инженерия и строительство**: Наблюдение за состоянием строительных конструкций, управление инфраструктурой умных городов.\n\nВ целом, сенсорные сети стали неотъемлемым инструментом современного научного исследования, предоставляя учёным новые способы получения, анализа и использования данных. Их интеграция способствует более глубокому пониманию сложных процессов, улучшает точность исследований и открывает новые направления для научных открытий.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Система контроля версий Git занимает ключевое место в современном процессе разработки программного обеспечения и других проектах, связанных с управлением файлами и кодом. Ее важность обусловлена рядом факторов:\n\n1. **Отслеживание изменений**: Git позволяет сохранять историю всех изменений в проекте. Это обеспечивает возможность возвращаться к предыдущим версиям, анализировать внесенные изменения и понимать, кто и когда их сделал.\n\n2. **Коллаборация**: В командах Git облегчает совместную работу разработчиков над одним проектом. Благодаря распределенной природе Git каждый участник имеет локальную копию репозитория, что позволяет работать независимо и затем интегрировать изменения.\n\n3. **Ветвление и слияние**: Git предоставляет мощные инструменты для создания веток, что позволяет разрабатывать новые функции, исправлять ошибки или экспериментировать без нарушения основной стабильной версии проекта. После завершения работы над веткой изменения легко сливаются обратно в основную ветку.\n\n4. **Конфликт-менеджмент**: При работе нескольких человек над одними и теми же файлами Git помогает эффективно управлять конфликтами изменений, предоставляя механизмы для их разрешения.\n\n5. **История и ревизии**: Подробная история изменений упрощает аудит проекта, помогает в обнаружении и исправлении ошибок, а также позволяет отслеживать прогресс разработки.\n\n6. **Интеграция с инструментами**: Git хорошо интегрируется с различными сервисами и платформами, такими как GitHub, GitLab и Bitbucket, которые предоставляют дополнительные возможности для управления проектами, непрерывной интеграции и развертывания.\n\n7. **Открытость и сообщество**: Будучи открытой системой, Git имеет большое сообщество пользователей и разработчиков, обеспечивающее постоянное развитие, поддержку и создание множества полезных инструментов и расширений.\n\n8. **Производительность и эффективность**: Git разработан для работы с большими проектами и обеспечивает высокую скорость операций, таких как коммиты, ветвление и слияние, что делает его подходящим для проектов любого размера.\n\nИспользование Git способствует организованности, прозрачности и эффективности в процессе разработки, снижая риски потери данных и облегчая управление сложными проектами. Благодаря этим преимуществам Git стал де-факто стандартом в индустрии разработки программного обеспечения и широко используется как в открытых, так и в коммерческих проектах.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация детской комнаты — важный этап, который способствует созданию комфортного и безопасного пространства для ребенка. Вот несколько советов, которые помогут вам эффективно организовать детскую комнату:\n\n### 1. Планировка пространства\n\n**Разделите комнату на зоны:**\n- **Спальная зона:** место для кровати и хранения постельного белья.\n- **Игровая зона:** пространство для игр, хранения игрушек и творчества.\n- **Учебная зона:** рабочее место с письменным столом и стулом.\n- **Зона отдыха:** уголок для чтения или расслабления.\n\n### 2. Выбор мебели\n\n**Функциональность и безопасность:**\n- Выбирайте мебель из экологичных материалов без острых углов.\n- Предпочитайте мебель, которая растет вместе с ребенком, например, регулируемые столы и стулья.\n- Используйте вертикальное пространство для хранения: настенные полки, навесные шкафчики.\n\n### 3. Организация хранения\n\n**Эффективные системы хранения:**\n- Используйте разноцветные коробки и корзины для сортировки игрушек, книг и одежды.\n- Компактные комоды и тумбы помогут поддерживать порядок в комнате.\n- Организуйте шкафы с раздельными секциями для легкого доступа к вещам.\n\n### 4. Оформление интерьера\n\n**Цветовая палитра и декор:**\n- Выбирайте яркие, но мягкие цвета, стимулирующие развитие и создающие уют.\n- Тематические панели или наклейки на стенах могут добавить индивидуальности комнате.\n- Используйте декоративные элементы, отражающие интересы ребенка (например, звездное небо, животные, сказочные персонажи).\n\n### 5. Безопасность\n\n**Меры предосторожности:**\n- Убедитесь, что мебель надежно закреплена к стене, чтобы предотвратить опрокидывание.\n- Избегайте использования мелких деталей, если в комнате находятся маленькие дети.\n- Проверьте наличие оконных замков и защитных элементов для розеток.\n\n### 6. Освещение\n\n**Разнообразие освещения:**\n- Основное освещение должно быть достаточно ярким и равномерным.\n- Добавьте настольные лампы или настенные светильники для учебной зоны.\n- Мягкое ночное освещение поможет создать уютное пространство для сна.\n\n### 7. Вовлечение ребенка\n\n**Совместное планирование:**\n- Позвольте ребенку участвовать в выборе цвета стен, мебельных элементов и декоративных аксессуаров.\n- Это поможет создать пространство, которое ребенку действительно нравится и в котором он чувствует себя комфортно.\n\n### 8. Гибкость и адаптивность\n\n**Подстраивайтесь под изменения:**\n- Дети быстро растут, и их потребности меняются. Выбирайте мебель и элементы декора, которые можно легко адаптировать под новые возраста и интересы.\n- Планируйте пространство так, чтобы легко можно было менять зону использования по мере необходимости.\n\n### 9. Креативные решения\n\n**Используйте нестандартные идеи:**\n- Подвесные полки и ящики могут освободить место на полу.\n- Многофункциональная мебель, например, кровать с встроенными ящиками для хранения.\n- Место для творчества с простыми системами для хранения материалов (краски, бумага, карандаши).\n\n### 10. Поддержание порядка\n\n**Простые правила:**\n- Установите систему регулярной уборки и сортировки игрушек.\n- Сделайте хранение вещей привычкой для ребенка, разместив все предметы на своих местах.\n- Используйте ярлыки или картинки на коробках для облегчения процесса уборки, особенно для малышей.\n\nОрганизованная и хорошо спланированная детская комната не только будет способствовать развитию ребенка, но и облегчит жизнь всей семьи. Учитывайте индивидуальные потребности и предпочтения вашего ребенка, чтобы создать пространство, в котором ему будет комфортно и интересно проводить время.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**WebSocket** — это протокол связи, обеспечивающий двустороннее (full-duplex) взаимодействие между клиентом и сервером через одно установленное соединение. В отличие от традиционного HTTP, где клиент инициирует запросы, а сервер отвечает на них, WebSocket позволяет поддерживать постоянное соединение, позволяя как клиенту, так и серверу отправлять данные в любое время.\n\n### Основные характеристики WebSocket:\n\n1. **Двусторонняя связь**: Обе стороны — клиент и сервер — могут отправлять сообщения независимо друг от друга без необходимости устанавливать новое соединение для каждого обмена данными.\n2. **Низкая задержка**: Благодаря постоянному соединению уменьшается время, необходимое для установления связи, что особенно важно для приложений в реальном времени.\n3. **Эффективность**: Минимизируется накладные расходы на установку и разрыв соединений, а также объем передаваемых данных благодаря использованию легковесных фреймов.\n\n### Зачем нужен WebSocket в веб-разработке:\n\n1. **Приложения в реальном времени**:\n   - **Чаты и мессенджеры**: Обеспечивают мгновенную отправку и получение сообщений между пользователями.\n   - **Игры**: Позволяют синхронизировать игровые состояния между игроками в режиме реального времени.\n   \n2. **Финансовые приложения**:\n   - **Торговые платформы**: Обновляют котировки акций и других финансовых инструментов в реальном времени.\n   - **Мониторинг рынка**: Предоставляют актуальные данные о состоянии рынка без задержек.\n   \n3. **Уведомления и обновления**:\n   - **Социальные сети**: Обновляют ленты новостей, уведомления о событиях и активности пользователей.\n   - **Системы мониторинга**: Предоставляют оперативные данные о состоянии серверов, сетей и приложений.\n   \n4. **Коллаборативные инструменты**:\n   - **Редакторы документов**: Позволяют нескольким пользователям одновременно редактировать документ с мгновенными обновлениями.\n   - **Инструменты для совместной работы**: Обеспечивают синхронизацию действий пользователей в реальном времени.\n\n5. **Интернет вещей (IoT)**:\n   - **Устройства и сенсоры**: Обеспечивают постоянный обмен данными между устройствами и центральными серверами для мониторинга и управления.\n\n### Преимущества использования WebSocket:\n\n- **Сокращение трафика**: Постоянное соединение уменьшает количество заголовков HTTP, передаваемых при каждом запросе.\n- **Быстродействие**: Меньшая задержка при передаче данных делает приложения более отзывчивыми.\n- **Упрощение архитектуры**: Единое подключение для обмена данными упрощает обработку коммуникации между клиентом и сервером.\n\n### Заключение\n\nWebSocket играет ключевую роль в современной веб-разработке, особенно когда требуется обмен данными в реальном времени. Он обеспечивает более эффективную и быструю связь между клиентом и сервером по сравнению с традиционными методами, что открывает широкие возможности для создания интерактивных и отзывчивых веб-приложений.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Дифференциальные уравнения — это математические уравнения, которые связывают функцию с её производными. Они играют ключевую роль в моделировании и описании различных физических, биологических, экономических и других процессов, где изменение одной величины зависит от изменений другой.\n\n### Основные понятия\n\n1. **Порядок уравнения**: Определяется по наивысшему порядку производной, присутствующей в уравнении. Например, \\( \\frac{d^2y}{dx^2} + 3\\frac{dy}{dx} + 2y = 0 \\) является дифференциальным уравнением второго порядка.\n\n2. **Линейные и нелинейные уравнения**: Если уравнение линейно по неизвестной функции и её производным (т.е. они входят без степеней и произведений), то оно называется линейным. Пример линейного уравнения: \\( \\frac{dy}{dx} + P(x)y = Q(x) \\). Нелинейные уравнения могут содержать произведения, степени и другие нелинейные комбинации функции и её производных.\n\n3. **Однородные и неоднородные уравнения**: Уравнение называется однородным, если все его слагаемые содержат функцию или её производные. В противном случае оно неоднородное.\n\n### Применение в науке\n\nДифференциальные уравнения находят применение в различных областях науки и техники:\n\n1. **Физика**:\n   - **Механика**: Уравнения движения (например, законы Ньютона) описываются дифференциальными уравнениями. Пример: второй закон Ньютона \\( F = ma \\) может быть представлен как \\( m\\frac{d^2x}{dt^2} = F \\).\n   - **Электрические цепи**: Уравнения Кирхгофа описывают связь между токами и напряжениями в электрических цепях.\n   - **Теория волн и квантовая механика**: Уравнение Шредингера описывает эволюцию квантовых систем.\n\n2. **Биология**:\n   - **Моделирование популяций**: Модель логистического роста описывается дифференциальным уравнением, которое учитывает скорость роста и ограничивающие факторы.\n   - **Нейрофизиология**: Модели нейронной активности, такие как уравнения Ходжкина–Хаксли, используют дифференциальные уравнения для описания электрической активности нейронов.\n\n3. **Химия**:\n   - **Реакционная кинетика**: Скорость химических реакций часто описывается дифференциальными уравнениями, учитывающими концентрации реагентов и продуктов.\n\n4. **Экономика**:\n   - **Модели экономического роста**: Дифференциальные уравнения используются для описания изменений в экономических показателях во времени.\n   - **Финансовые модели**: Модели оценки опционов, такие как модель Блэка–Шоулза, включают дифференциальные уравнения.\n\n5. **Инженерия**:\n   - **Системы управления**: Динамические системы, такие как стабилизация полётов или управление процессами на производстве, описываются дифференциальными уравнениями.\n   - **Теплопередача и механика сплошных сред**: Уравнения теплопроводности и Навье–Стокса описывают распространение тепла и движение жидкостей соответственно.\n\n### Примеры дифференциальных уравнений\n\n1. **Простое обыкновенное дифференциальное уравнение (ОДУ)**:\n   \\[\n   \\frac{dy}{dx} = ky\n   \\]\n   Решение: \\( y = y_0 e^{kx} \\), где \\( y_0 \\) — константа интегрирования.\n\n2. **Лапласовское уравнение**:\n   \\[\n   \\nabla^2 \\phi = 0\n   \\]\n   Используется в теории потенциала для описания электростатических и гравитационных полей.\n\n3. **Уравнение теплопроводности**:\n   \\[\n   \\frac{\\partial u}{\\partial t} = \\alpha \\nabla^2 u\n   \\]\n   Описывает распределение температуры \\( u \\) в пространстве и времени.\n\n### Заключение\n\nДифференциальные уравнения являются фундаментальным инструментом для анализа и прогнозирования поведения сложных систем. Их способность описывать зависимости между изменяющимися величинами делает их незаменимыми в науке и технике, позволяя создавать модели, которые помогают понять природу и разрабатывать новые технологии.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор качественной обуви — важный процесс, который влияет не только на внешний вид, но и на здоровье ног. Вот несколько советов, которые помогут вам сделать правильный выбор:\n\n1. **Определите назначение обуви**:\n   - **Повседневная обувь** должна обеспечивать комфорт и поддержку в течение всего дня.\n   - **Спортивная обувь** должна соответствовать специфике занятий (бег, тренировки, футбол и т.д.).\n   - **Официальная обувь** должна быть стильной и сочетаться с деловым гардеробом.\n\n2. **Обратите внимание на материалы**:\n   - **Натуральная кожа** — долговечный и дышащий материал, который хорошо формируется по ступне.\n   - **Замша** требует бережного ухода, но также комфортна и стильна.\n   - **Синтетические материалы** могут быть более доступными по цене, но менее долговечными.\n\n3. **Проверьте качество изготовления**:\n   - **Швы** должны быть ровными и прочными, без пропусков нитки.\n   - **Подкладка** должна быть качественной, не натирать и хорошо впитывать влагу.\n   - **Подошва** должна быть прочно прикреплена к верхней части обуви, без люфта.\n\n4. **Уделите внимание посадке**:\n   - **Размер** должен соответствовать вашей стопе. Лучше примерять обувь в конце дня, когда стопы немного набухают.\n   - **Ширина** обуви должна соответствовать ширине вашей ноги. Не должно быть ощущений сдавленности или, наоборот, свободности.\n   - **Опора** для свода стопы важна для предотвращения усталости и болей в ногах.\n\n5. **Проверьте амортизацию и поддержку**:\n   - **Стельки** должны быть удобными и поддерживать арку стопы.\n   - **Подошва** должна обеспечивать хорошую амортизацию и сцепление с поверхностью.\n\n6. **Оцените комфорт**:\n   - Прогуляйтесь в обуви, чтобы почувствовать, нет ли натираний или дискомфорта.\n   - Обратите внимание на амортизацию и жесткость подошвы.\n\n7. **Изучите репутацию бренда**:\n   - Известные бренды часто гарантируют более высокое качество продукции.\n   - Читайте отзывы покупателей и оценивайте репутацию производителя.\n\n8. **Учтите стиль и дизайн**:\n   - Выбирайте обувь, которая соответствует вашему стилю и гардеробу.\n   - Помните, что классические модели обычно более универсальны и долговечны в плане моды.\n\n9. **Ценовой фактор**:\n   - Качественная обувь может стоить дороже, но она прослужит дольше и будет более комфортной.\n   - Избегайте слишком дешевых вариантов, которые могут быстро износиться и причинить дискомфорт.\n\n10. **Уход за обувью**:\n    - Правильный уход продлит жизнь вашей обуви. Используйте специальные средства для чистки и защиты, храните обувь в подходящих условиях.\n\nСледуя этим советам, вы сможете выбрать обувь, которая будет не только красивой, но и удобной, а также прослужит вам долгое время.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Вот несколько идей для семейного досуга, которые подойдут для разных возрастов и интересов:\n\n1. **Пикник на природе**\n   - Выберите парк, лес или набережную для отдыха. Возьмите с собой еду, игры на свежем воздухе и наслаждайтесь временем вместе.\n\n2. **Совместные прогулки и походы**\n   - Исследуйте окрестности пешком или на велосипедах. Это отличная возможность провести время на свежем воздухе и узнать что-то новое о вашем районе.\n\n3. **Настольные игры**\n   - Соберитесь за любимыми настольными играми. Это развивает стратегическое мышление и способствует общению.\n\n4. **Киноночь дома**\n   - Организуйте просмотр семейных фильмов с попкорном и уютными пледами. Можно выбрать классику или новые современные фильмы.\n\n5. **Совместное приготовление пищи**\n   - Готовьте вместе ужин или десерт. Это не только весело, но и полезно для развития кулинарных навыков у детей.\n\n6. **Творческие мастер-классы**\n   - Попробуйте рисовать, лепить из глины, делать поделки из природных материалов или создавать семейные альбомы.\n\n7. **Посещение музеев и выставок**\n   - Исследуйте культурные и образовательные объекты. Многие музеи предлагают интерактивные экспозиции для детей.\n\n8. **Садоводство**\n   - Ведите семейный сад или ухаживайте за комнатными растениями. Это учит ответственности и заботе.\n\n9. **Спортивные активности**\n   - Играйте в футбол, волейбол или бадминтон. Можно также посетить бассейн, каток или прокатиться на роликах.\n\n10. **Чтение вслух**\n    - Выберите интересную книгу и читайте её всей семьей, обсуждая сюжет и персонажей.\n\n11. **Посещение зоопарка или аквариума**\n    - Узнайте больше о животных и морских обитателях, проводя время вместе в увлекательной атмосфере.\n\n12. **Путешествия и экскурсии**\n    - Организуйте небольшие поездки по родному региону, посещая интересные места и достопримечательности.\n\n13. **Волонтёрские проекты**\n    - Совместное участие в благотворительных акциях или уборке местных парков поможет детям понять важность взаимопомощи.\n\n14. **Музыкальные вечера**\n    - Играйте на музыкальных инструментах, пойте вместе или танцуйте под любимую музыку.\n\n15. **Создание семейного альбома**\n    - Соберите фотографии и воспоминания, создавая общий альбом или видеоролик о проведённом вместе времени.\n\n16. **Посещение местных мероприятий**\n    - Участвуйте в фестивалях, ярмарках или концертах, которые проводятся в вашем городе или районе.\n\n17. **Настольный теннис или бильярд**\n    - Если есть возможность, устройте соревнования дома или посетите клуб.\n\n18. **Караоке вечер**\n    - Пойте свои любимые песни вместе, весело проводя время и раскрывая свои таланты.\n\n19. **Разгадывание квестов и головоломок**\n    - Устраивайте домашние квесты или посещайте специальные зоны для решения загадок вместе.\n\n20. **Совместное планирование будущих проектов**\n    - Обсуждайте и планируйте семейные путешествия, мероприятия или домашние улучшения, вовлекая всех членов семьи в процесс.\n\nНадеюсь, эти идеи помогут вам создать приятные и запоминающиеся моменты всей семьей!",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Генераторы статических сайтов (Static Site Generators, SSG) становятся все более популярными инструментами для создания веб-сайтов. Они отличаются от традиционных динамических сайтов тем, что генерируют статические HTML-файлы на этапе сборки, которые затем обслуживаются пользователям. Рассмотрим основные плюсы и минусы использования генераторов статических сайтов.\n\n### Плюсы генераторов статических сайтов\n\n1. **Высокая производительность**:\n   - **Быстрая загрузка страниц**: Статические файлы загружаются быстрее, поскольку не требуют обработки на сервере при каждом запросе.\n   - **Минимальное использование ресурсов сервера**: Поскольку серверу нужно только отдавать файлы, нагрузка на него значительно снижается.\n\n2. **Безопасность**:\n   - **Меньше уязвимостей**: Отсутствие серверной логики (например, базы данных или серверных скриптов) снижает риск атак, таких как SQL-инъекции или атаки через уязвимости в серверном ПО.\n   - **Меньше точек отказа**: Меньше компонентов, которые могут быть взломаны или выйти из строя.\n\n3. **Простота развертывания и хостинга**:\n   - **Легкие требования к хостингу**: Статические сайты могут быть размещены на различных платформах, включая бесплатные хостинги (например, GitHub Pages, Netlify).\n   - **Упрощенное масштабирование**: Продажи сайта в ответ на увеличение трафика обычно сводятся к простому увеличению ресурсов хостинга.\n\n4. **Версионирование и контроль изменений**:\n   - **Интеграция с системами контроля версий**: Легко отслеживать изменения, откатываться к предыдущим версиям и работать в команде.\n\n5. **Оптимизация SEO**:\n   - **Более быстрая загрузка страниц** способствует лучшему ранжированию в поисковых системах.\n   - **Чистый HTML-код** облегчает индексацию страниц поисковыми роботами.\n\n### Минусы генераторов статических сайтов\n\n1. **Ограниченная поддержка динамического контента**:\n   - **Отсутствие встроенной интерактивности**: Функции, требующие динамического взаимодействия с пользователем (например, комментарии, системы управления пользователями) требуют дополнительных решений или интеграции с внешними сервисами.\n   - **Необходимость переиндексации**: Изменения контента требуют повторной генерации и развертывания сайта.\n\n2. **Сложность для больших и часто обновляемых сайтов**:\n   - **Время сборки**: Для крупных сайтов с тысячами страниц время генерации может стать значительным.\n   - **Управление контентом**: Отсутствие встроенной CMS может усложнить процесс редактирования и управления контентом для не технических пользователей.\n\n3. **Необходимость технических знаний**:\n   - **Настройка и конфигурация**: Требуются знания в области разработки и работы с инструментами сборки.\n   - **Обновление и поддержка**: Следует самостоятельно следить за обновлениями генератора и плагинов.\n\n4. **Ограниченная функциональность без сторонних сервисов**:\n   - **Интеграция с внешними API**: Для реализации некоторых функций, таких как поиск по сайту, комментарии или формы обратной связи, необходимо привлекать сторонние сервисы, что может увеличить сложность реализации и затрат.\n\n5. **Отсутствие пользовательской персонализации**:\n   - **Статический характер**: Трудно предоставить индивидуализированный контент для пользователей без использования дополнительных технологий на стороне клиента.\n\n### Заключение\n\nГенераторы статических сайтов отлично подходят для блогов, портфолио, документации и других типов сайтов с относительно статичным контентом. Они обеспечивают высокую производительность, безопасность и простоту развертывания. Однако для проектов, требующих сложной динамической функциональности или частых обновлений, могут потребоваться дополнительные инструменты и усилия для интеграции необходимой функциональности. Перед выбором генератора статических сайтов важно оценить потребности проекта и сопоставить их с возможностями данного подхода.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Инвестиции представляют собой вложение средств в различные активы с целью получения прибыли или увеличения их стоимости в будущем. Существует множество видов инвестиций, включая акции, облигации, недвижимость, паевые инвестиционные фонды и криптовалюты. Основные принципы успешного инвестирования включают диверсификацию портфеля, управление рисками и долгосрочное планирование. Важно тщательно анализировать рынок, понимать свои финансовые цели и уровень допустимого риска перед тем, как принять решение об инвестировании. Консультация с финансовыми специалистами также может помочь разработать эффективную стратегию для достижения финансовой стабильности и роста капитала.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор правильных солнцезащитных средств играет ключевую роль в защите кожи от вредного воздействия ультрафиолетовых (UV) лучей, которые могут вызывать преждевременное старение, солнечные ожоги и повышать риск развития рака кожи. Вот основные рекомендации по выбору эффективных солнцезащитных средств:\n\n### 1. **Выбирайте широкоспектровые средства**\n   - **Защита от UVA и UVB лучей**: Убедитесь, что средство обладает широким спектром защиты, то есть защищает как от UVA (вызывают старение кожи и рост некоторых типов рака), так и от UVB лучей (вызывают ожоги кожи и также связаны с раком кожи).\n   \n### 2. **Учитывайте фактор защиты от солнца (SPF)**\n   - **SPF 30 или выше**: Рекомендуется использовать средства с SPF не ниже 30, которые блокируют примерно 97% UVB лучей. SPF 50 блокирует около 98%, а SPF 100 — около 99%.\n   - **Выбор SPF** зависит от типа кожи: люди с более светлой кожей, склонной к ожогам, могут потребовать более высокий SPF, тогда как обладатели более темной кожи могут обойтись и с меньшим показателем.\n\n### 3. **Обращайте внимание на состав**\n   - **Физические (минеральные) фильтры**: Содержат оксид цинка или диоксид титана, которые отражают и расеивают UV-лучи. Подходят для чувствительной кожи и детей.\n   - **Химические фильтры**: Включают такие ингредиенты, как авобензон, октиренимокс и другие, которые поглощают UV-лучи. Часто более легкие по текстуре и легче наносятся, но могут вызывать раздражение у чувствительной кожи.\n   - **Безопасность ингредиентов**: Избегайте средств с вредными консервантами или потенциально аллергенными компонентами, особенно если у вас чувствительная кожа.\n\n### 4. **Форма выпуска**\n   - **Кремы и лосьоны**: Идеальны для сухой кожи и обеспечивают хорошую защиту. Требуют тщательного нанесения.\n   - **Гели и спреи**: Удобны для жирной кожи и быстрой нанесения, особенно при активности на открытом воздухе. Важно тщательно распределять средство.\n   - **Стикеры и пудры**: Подходят для дополнительной защиты в сочетании с другими средствами.\n\n### 5. **Водостойкость средства**\n   - **Если планируете плавать или потеть**: Выбирайте водостойкие или водоотталкивающие солнцезащитные средства, которые сохраняют защитные свойства некоторое время после контакта с водой или потом.\n\n### 6. **Срок годности**\n   - **Проверяйте дату**: Солнцезащитные средства теряют свою эффективность со временем. Обычно срок годности указан на упаковке и составляет около 3 лет. Не используйте средство после истечения срока годности.\n\n### 7. **Тестирование на коже**\n   - **Аллергические реакции**: Перед первым использованием нового средства нанесите небольшое количество на внутреннюю сторону запястья или локтя, чтобы убедиться в отсутствии аллергии или раздражения.\n\n### 8. **Дополнительные факторы**\n   - **Защита от ветра и загрязнений**: Некоторые солнцезащитные средства также содержат антиоксиданты и ингредиенты, защищающие от городской загрязненности.\n   - **Увлажняющие компоненты**: Если у вас сухая кожа, ищите средства с увлажняющими компонентами, такими как гиалуроновая кислота или глицерин.\n\n### 9. **Правильное применение**\n   - **Достаточное количество**: Для взрослого человека рекомендуется наносить около 2 столовых ложек средства на все открытые участки тела.\n   - **Повторное нанесение**: Наносите солнцезащитное средство каждые 2 часа и после плавания, потоотделения или вытирания полотенцем.\n\n### 10. **Дополнительные меры защиты**\n   - **Носите защитную одежду**: Шляпы с широкими полями, солнцезащитные очки и одежда с UV-защитой дополняют использование солнцезащитных средств.\n   - **Ищите тень**: Избегайте пребывания на прямых солнечных лучах, особенно с 10 утра до 4 вечера, когда UV-излучение наиболее интенсивно.\n\n### Заключение\n\nВыбор правильного солнцезащитного средства требует учета ряда факторов, включая тип кожи, условия использования и личные предпочтения. Регулярное и правильное применение солнцезащитных средств в сочетании с другими мерами защиты помогает эффективно минимизировать вредное воздействие солнечных лучей на кожу.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор солнцезащитных средств является важным шагом для защиты кожи от вредного воздействия ультрафиолетовых (УФ) лучей, предотвращения преждевременного старения и снижения риска развития рака кожи. Вот основные рекомендации, которые помогут правильно выбрать солнцезащитное средство:\n\n### 1. **Определите фактор защиты от солнца (SPF)**\n- **SPF (Sun Protection Factor)** показывает уровень защиты от ультрафиолетовых B (UVB) лучей, вызывающих ожоги и способствующих развитию рака кожи.\n- **Рекомендуемые значения SPF:**\n  - **SPF 30-50** — подходит для большинства типов кожи и условий.\n  - **SPF 50+** — для очень светлой кожи или при интенсивном пребывании на солнце.\n\n### 2. **Выбирайте широкоспектральную защиту**\n- **Широкий спектр** означает защиту от обоих типов УФ-лучей: \n  - **UVB** — вызывают ожоги.\n  - **UVA** — проникают глубже в кожу, способствуют старению и повышают риск рака.\n- Убедитесь, что на этикетке указано \"широкий спектр\" или \"UVA/UVC защита\".\n\n### 3. **Тип солнцезащитного средства**\n- **Физические (минеральные) фильтры** содержат оксид цинка или диоксид титана. Они отражают и рассеивают УФ-лучи, подходят для чувствительной кожи и начинаются действовать сразу после нанесения.\n- **Химические фильтры** (авобензон, октокрилен, октадина) поглощают УФ-лучи и преобразуют их в тепло. Требуют времени для активации и наносятся тоньше.\n\n### 4. **Учитывайте тип вашей кожи**\n- **Сухая кожа:** ищите увлажняющие формулы с добавлением антиоксидантов.\n- **Жирная или склонная к акне кожа:** выбирайте легкие, некомедогенные (не забивающие поры) средства, например, гели или водные формулы.\n- **Чувствительная кожа:** отдавайте предпочтение физическим фильтрам с минимальным количеством добавок.\n\n### 5. **Влажностойкость**\n- Если вы планируете купаться или активно потеть, выбирайте водостойкие солнцезащитные кремы. Однако необходимо повторно наносить средство каждые 2 часа и после водных процедур.\n\n### 6. **Проверяйте состав**\n- **Избегайте потенцильных раздражителей**, таких как парабены или фталаты, если у вас чувствительная кожа.\n- **Предпочтение натуральным компонентам**, если это важно для вас.\n\n### 7. **Способ нанесения**\n- **Применяйте достаточное количество**: обычно рекомендуется около 2 мг на квадратный сантиметр кожи.\n- **Не забывайте о скрытых зонах**, таких как уши, шея, задняя часть ног и волосы (при отсутствии шапочки).\n- **Повторное нанесение** каждые 2 часа и после плавания, потоотделения или вытирания полотенцем.\n\n### 8. **Срок годности**\n- Обратите внимание на срок годности. Старые или неправильно хранящиеся солнцезащитные средства могут потерять эффективность.\n\n### 9. **Дополнительные факторы**\n- **Антиоксиданты** в составе (витамины C и E) могут дополнительно защищать кожу от повреждений.\n- **Текстура и аромат**: выбирайте средство, которое вам приятно использовать, чтобы не забывать наносить его регулярно.\n\n### 10. **Консультация со специалистом**\n- При наличии кожных заболеваний или особых потребностей рекомендуется проконсультироваться с дерматологом для подбора наиболее подходящего средства.\n\nПравильный выбор и регулярное использование солнцезащитных средств помогут сохранить здоровье и молодость вашей кожи на долгие годы.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Логирование событий в приложении играет ключевую роль в обеспечении его надежности, безопасности и эффективности. Вот основные причины, почему важно внедрять и поддерживать систему логирования:\n\n1. **Отладка и устранение ошибок**:\n   - **Идентификация проблем**: Логи позволяют разработчикам быстро находить и анализировать ошибки, сбои или необычное поведение приложения.\n   - **Трассировка событий**: Пошаговый учет операций помогает понять, какие действия привели к ошибке.\n\n2. **Мониторинг производительности**:\n   - **Анализ времени отклика**: Логи могут содержать информацию о скорости выполнения операций, что позволяет оптимизировать производительность.\n   - **Выявление узких мест**: Через анализ логов можно определить компоненты системы, которые работают медленно или потребляют слишком много ресурсов.\n\n3. **Безопасность**:\n   - **Обнаружение подозрительной активности**: Логи помогают отслеживать несанкционированные попытки доступа, атаки или другие угрозы безопасности.\n   - **Соблюдение нормативных требований**: Во многих отраслях существуют требования к ведению логов для обеспечения соответствия стандартам безопасности и конфиденциальности.\n\n4. **Аудит и соответствие**:\n   - **Проследуемость действий**: Ведение логов обеспечивает возможность отслеживания действий пользователей и изменений в системе, что важно для аудита.\n   - **Соблюдение регуляций**: Некоторым организациям необходимо хранить логи в соответствии с законодательными требованиями.\n\n5. **Анализ использования и улучшение продукта**:\n   - **Понимание поведения пользователей**: Логи помогают узнать, как пользователи взаимодействуют с приложением, какие функции наиболее востребованы.\n   - **Информирование о направлениях развития**: На основе анализа логов можно принимать решения о добавлении новых функций или улучшении существующих.\n\n6. **Поддержка и обслуживание**:\n   - **Быстрое реагирование на инциденты**: Логи позволяют оперативно реагировать на возникшие проблемы и минимизировать время простоя.\n   - **Планирование технического обслуживания**: Анализ логов помогает определить оптимальные сроки для обновлений и обслуживания системы.\n\n7. **Восстановление после сбоев**:\n   - **Реконструкция событий**: В случае серьезных сбоев логи позволяют восстановить последовательность событий, что облегчает восстановление системы.\n   - **Минимизация потерь данных**: Правильно настроенное логирование помогает сохранить критически важную информацию для восстановления.\n\n8. **Оптимизация ресурсов**:\n   - **Управление нагрузкой**: Логи помогают отслеживать использование ресурсов и оптимизировать их распределение.\n   - **Экономия затрат**: Анализ логов может выявить избыточное потребление ресурсов, что позволяет снизить эксплуатационные расходы.\n\nВ совокупности, эффективное логирование является неотъемлемой частью жизненного цикла приложения. Оно способствует повышению качества продукта, обеспечивает его надежную работу и безопасность, а также поддерживает процесс принятия решений на основе объективных данных.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Основные паттерны проектирования (шаблоны проектирования) представляют собой проверенные решения типичных задач при разработке программного обеспечения. Они делятся на три основные категории: порождающие, структурные и поведенческие паттерны. Рассмотрим основные паттерны каждой категории.\n\n### 1. Порождающие паттерны\nПорождающие паттерны обеспечивают гибкие и эффективные способы создания объектов, скрывая детали их создания.\n\n- **Singleton (Одиночка)**  \n  Гарантирует, что у класса есть только один экземпляр, и предоставляет глобальную точку доступа к нему.\n\n- **Factory Method (Фабричный метод)**  \n  Определяет интерфейс для создания объектов, позволяя подклассам решать, какой класс инстанцировать.\n\n- **Abstract Factory (Абстрактная фабрика)**  \n  Предоставляет интерфейс для создания семейств взаимосвязанных объектов без указания их конкретных классов.\n\n- **Builder (Строитель)**  \n  Отделяет конструирование сложного объекта от его представления, позволяя создавать различные представления.\n\n- **Prototype (Прототип)**  \n  Создает новые объекты путем копирования существующих экземпляров (прототипов).\n\n### 2. Структурные паттерны\nСтруктурные паттерны описывают способы организации классов и объектов для формирования больших структур.\n\n- **Adapter (Адаптер)**  \n  Преобразует интерфейс одного класса в интерфейс, ожидаемый клиентом, позволяя несовместимым классам работать вместе.\n\n- **Bridge (Мост)**  \n  Разделяет абстракцию и её реализацию, позволяя изменять их независимо друг от друга.\n\n- **Composite (Компоновщик)**  \n  Объединяет объекты в древовидные структуры для представления иерархий \"часть-целое\".\n\n- **Decorator (Декоратор)**  \n  Добавляет новые обязанности объекту динамически, оборачивая его в объект-декоратор.\n\n- **Facade (Фасад)**  \n  Предоставляет унифицированный интерфейс для набора интерфейсов подсистемы, упрощая взаимодействие с ней.\n\n- **Flyweight (Приспособленец)**  \n  Использует разделение для эффективного поддержки множества мелких объектов.\n\n- **Proxy (Заместитель)**  \n  Представляет собой суррогат или замену другому объекту, контролируя доступ к нему.\n\n### 3. Поведенческие паттерны\nПоведенческие паттерны определяют способы взаимодействия объектов и распределения обязанностей между ними.\n\n- **Chain of Responsibility (Цепочка обязанностей)**  \n  Передает запрос по цепочке обработчиков до тех пор, пока один из них не обработает запрос.\n\n- **Command (Команда)**  \n  Инкапсулирует запрос как объект, позволяя параметризовать клиентов с разными запросами и поддерживать операции отмены.\n\n- **Interpreter (Интерпретатор)**  \n  Определяет грамматику для языка и интерпретирует предложения этого языка.\n\n- **Iterator (Итератор)**  \n  Предоставляет способ последовательного доступа к элементам коллекции без раскрытия её внутреннего представления.\n\n- **Mediator (Посредник)**  \n  Определяет объект, который инкапсулирует взаимодействие между набором объектов, снижая связанность между ними.\n\n- **Memento (Хранитель)**  \n  Сохраняет и восстанавливает внутреннее состояние объекта без нарушения инкапсуляции.\n\n- **Observer (Наблюдатель)**  \n  Определяет зависимость \"один-ко-многим\" между объектами, так что при изменении состояния одного объекта все зависящие от него оповещаются и обновляются автоматически.\n\n- **State (Состояние)**  \n  Позволяет объекту изменять своё поведение при изменении внутреннего состояния, создавая иллюзию изменения класса.\n\n- **Strategy (Стратегия)**  \n  Определяет семейство алгоритмов, инкапсулирует каждый из них и делает их взаимозаменяемыми.\n\n- **Template Method (Шаблонный метод)**  \n  Определяет основу алгоритма, позволяя подклассам изменять некоторые шаги без изменения структуры алгоритма.\n\n- **Visitor (Посетитель)**  \n  Позволяет добавлять новые операции к объектам без изменения их классов, используя двойную диспетчеризацию.\n\n### Заключение\nИспользование паттернов проектирования позволяет разработчикам создавать более гибкие, понятные и поддерживаемые системы. Они служат своего рода шаблонами для решения распространённых проблем и способствуют повышению качества программного обеспечения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Выбор первого языка программирования — важный шаг, который может существенно повлиять на вашу мотивацию и дальнейшее развитие в сфере IT. Вот несколько советов, которые помогут вам сделать правильный выбор:\n\n### 1. Определите свои цели и интересы\n\nПрежде чем выбрать язык, подумайте, для чего вы собираетесь его использовать:\n\n- **Веб-разработка**: Если вас интересует создание веб-сайтов и веб-приложений, **JavaScript** будет отличным выбором. Он является основным языком для фронтенда, а с помощью Node.js можно использовать его и на серверной стороне.\n  \n- **Анализ данных и машинное обучение**: Для работы с данными, статистики и ИИ лучше всего подойдет **Python** благодаря богатой экосистеме библиотек (например, Pandas, NumPy, TensorFlow).\n  \n- **Мобильная разработка**: Для создания приложений под Android рекомендуется **Kotlin** или **Java**, а для iOS — **Swift**.\n  \n- **Разработка игр**: **C#** часто используется с игровым движком Unity, а **C++** применяется в крупных игровых проектах с высокими требованиями к производительности.\n  \n- **Встроенные системы и системное программирование**: **C** или **C++** подойдут для разработки низкоуровневых системных компонентов.\n\n### 2. Простота изучения\n\nДля новичков особенно важно, чтобы язык был понятен и имел простой синтаксис:\n\n- **Python** славится своей читаемостью и простотой. Его синтаксис близок к естественному языку, что облегчает понимание основ программирования.\n  \n- **JavaScript** также достаточно доступен для начала, особенно если вы интересуетесь веб-разработкой.\n\n### 3. Поддержка сообщества и учебные ресурсы\n\nНаличие большого и активного сообщества, а также множества образовательных материалов облегчают процесс обучения:\n\n- **Python** и **JavaScript** имеют обширные сообщества, множество учебников, курсов и форумов для поддержки новичков.\n  \n- **Java**, **C#** и другие популярные языки также предлагают богатый выбор ресурсов для самообразования.\n\n### 4. Перспективы трудоустройства\n\nСтоит учитывать востребованность языка на рынке труда:\n\n- **Python** и **JavaScript** сегодня находятся в числе самых востребованных языков программирования.\n  \n- **Java** и **C#** также пользуются стабильным спросом, особенно в крупных компаниях и корпоративных проектах.\n\n### 5. Гибкость и универсальность\n\nНекоторые языки позволяют работать в разных сферах, что дает больше возможностей для развития:\n\n- **Python** подходит для веб-разработки, научных исследований, автоматизации, анализа данных и ИИ.\n  \n- **JavaScript** используется не только во фронтенде, но и на серверной стороне (Node.js), а также для создания мобильных и десктопных приложений.\n\n### 6. Личные предпочтения и удобство\n\nНекоторые люди лучше воспринимают определенные стили программирования или синтаксис. Попробуйте написать несколько простых программ на разных языках, чтобы понять, какой язык вам больше нравится.\n\n### Рекомендации\n\n**Для большинства новичков отличным выбором будет Python**. Он прост в изучении, универсален и востребован на рынке труда. Python позволит быстро освоить фундаментальные концепции программирования и перейти к решению реальных задач.\n\nЕсли же вы уверены, что хотите сразу заняться веб-разработкой, **JavaScript** станет хорошим стартом, поскольку он необходим для создания интерактивных веб-страниц и широко применяется на серверной стороне.\n\nВ любом случае, помните, что выбор первого языка не является окончательным. Освоив основные концепции программирования на одном языке, переход на другой будет значительно проще.\n\nУдачи в вашем пути к освоению программирования!",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Вычислительные модели играют ключевую роль в современном прогнозировании погоды, позволяя метеорологам предсказывать условия атмосферы с высокой степенью точности. Ниже представлены основные аспекты того, как эти модели функционируют и помогают в предсказании погоды:\n\n### 1. **Нумерическое моделирование погоды (НМП)**\nНумерическое моделирование погоды основывается на математических уравнениях, описывающих физические процессы в атмосфере. Эти уравнения включают:\n- **Уравнения Навье-Стокса:** описывают движение воздуха.\n- **Уравнения сохранения массы и энергии:** учитывают массовые и тепловые потоки.\n- **Уравнения гидрогравитации и термодинамики:** учитывают взаимодействие атмосферных слоев.\n\n### 2. **Сбор и обработка данных**\nДля запуска моделей необходимы начальные условия, которые получают из различных источников:\n- **Стационарные наземные метеостанции**\n- **Спутниковые наблюдения**\n- **Радарные системы**\n- **Воздушные зонды и буи**\n\nЭти данные интегрируются и обрабатываются для создания начальной картины состояния атмосферы.\n\n### 3. **Дискретизация атмосферы**\nАтмосфера разделяется на сетку, состоящую из ячеек. Чем мельче сетка, тем более детализированными будут прогнозы, но это требует больших вычислительных ресурсов. Типичная модель может иметь разрешение от нескольких километров до десятков километров.\n\n### 4. **Вычислительная мощность**\nРешение сложных уравнений в каждой ячейке требует значительных вычислительных мощностей. Для этого используются суперкомпьютеры, способные выполнять миллионы вычислений в секунду. Примеры таких систем включают центры суперкомпьютеров Национального управления океанических и атмосферных исследований (NOAA) в США или Европейские суперкомпьютеры.\n\n### 5. **Анализ и интерпретация результатов**\nПосле выполнения расчетов модели генерируют прогнозы различных метеорологических параметров, таких как температура, влажность, скорость и направление ветра, осадки и давление. Метеорологи анализируют эти данные, учитывая опыт и другие источники информации, чтобы создать окончательные прогнозы.\n\n### 6. **Энсебл-прогнозирование**\nДля повышения надежности прогнозов используются ансамблевые методы, при которых запускается несколько моделей с небольшими вариациями начальных условий или параметров модели. Это помогает оценить неопределенности и предоставить диапазон возможных исходов, что особенно важно для прогнозирования экстремальных погодных явлений.\n\n### 7. **Постоянное совершенствование моделей**\nВычислительные модели постоянно обновляются и совершенствуются с учетом новых данных и научных исследований. Внедрение машинного обучения и искусственного интеллекта также начинает играть все более значимую роль в улучшении точности прогнозов и обработке больших объемов данных.\n\n### 8. **Ограничения и вызовы**\nНесмотря на значительные успехи, модели прогнозирования погоды имеют ограничения:\n- **Неопределенность начальных условий:** Малейшие ошибки в начальных данных могут привести к существенным отклонениям в долгосрочных прогностических моделях (принцип хаоса).\n- **Компьютерные ограничения:** Более точные модели требуют больше вычислительных ресурсов.\n- **Физические процессы:** Некоторые процессы, такие как турбулентность или облачность, сложно точно моделировать.\n\n### Заключение\nВычислительные модели являются неотъемлемой частью современного прогнозирования погоды, объединяя обширные наборы данных и сложные математические алгоритмы для создания точных и своевременных метеорологических прогнозов. Постоянное развитие вычислительных технологий и методов моделирования продолжает повышать точность и надежность предсказаний, способствуя более эффективному планированию и реагированию на погодные изменения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Паттерны проектирования играют ключевую роль в разработке микросервисных архитектур, обеспечивая масштабируемость, устойчивость и гибкость систем. Ниже приведены основные паттерны проектирования, часто используемые при создании микросервисов:\n\n1. **API Gateway (Шлюз API)**\n   \n   * **Описание:** Шлюз API действует как единственная точка входа для всех клиентских запросов к микросервисам. Он маршрутизирует запросы к соответствующим сервисам, выполняет аутентификацию, авторизацию, агрегацию данных и другие кросс-отраслевые задачи.\n   \n   * **Преимущества:**\n     - Сокращение количества запросов от клиента.\n     - Централизация кросс-отраслевых функциональностей (логирование, мониторинг, безопасность).\n     - Абстрагирование внутренней структуры микросервисов от клиентов.\n\n2. **Service Discovery (Сервисное обнаружение)**\n   \n   * **Описание:** Паттерн позволяет микросервисам динамически обнаруживать и взаимодействовать с другими сервисами без жестко прописанных адресов. Обычно используется реестр сервисов (например, Eureka, Consul, etcd).\n   \n   * **Преимущества:**\n     - Облегчение масштабирования и динамического изменения инфраструктуры.\n     - Повышение отказоустойчивости за счёт автоматического перенаправления запросов при недоступности сервисов.\n\n3. **Circuit Breaker (Автоматический прерыватель цепи)**\n   \n   * **Описание:** Механизм, предотвращающий повторные попытки вызова сервисов, которые могут быть недоступны или перегружены, тем самым предотвращая каскадные сбои.\n   \n   * **Преимущества:**\n     - Увеличение устойчивости системы.\n     - Быстрое восстановление после сбоев.\n     - Защита от перегрузок и чрезмерных задержек.\n\n4. **Database per Service (База данных на сервис)**\n   \n   * **Описание:** Каждый микросервис имеет собственную базу данных, что обеспечивает независимость и изоляцию данных между сервисами.\n   \n   * **Преимущества:**\n     - Независимое масштабирование и развитие сервисов.\n     - Избежание конфликтов при изменении схемы данных.\n     - Повышение безопасности за счёт изоляции данных.\n\n5. **Saga Pattern (Паттерн Сага)**\n   \n   * **Описание:** Паттерн для управления распределёнными транзакциями, состоящими из серии локальных транзакций, каждая из которых компенсируется в случае неудачи.\n   \n   * **Преимущества:**\n     - Поддержка согласованности данных в распределённых системах.\n     - Отказоустойчивость и гибкость при обработке ошибок.\n     - Избежание использования долгих распределённых транзакций.\n\n6. **Event Sourcing (Хранение событий)**\n   \n   * **Описание:** Вместо хранения текущего состояния сущности, сохраняются все события, приведшие к этому состоянию. Текущее состояние восстанавливается путём последовательного применения событий.\n   \n   * **Преимущества:**\n     - Возможность отслеживания полной истории изменений.\n     - Улучшенная масштабируемость и производительность для определённых сценариев.\n     - Поддержка сложных бизнес-логик и аналитики.\n\n7. **CQRS (Command Query Responsibility Segregation)**\n   \n   * **Описание:** Разделение операций изменения состояния (команд) и операций чтения данных (запросов) на разные модели.\n   \n   * **Преимущества:**\n     - Оптимизация производительности и масштабируемости для операций чтения и записи.\n     - Улучшенная гибкость и модульность системы.\n     - Облегчение реализации сложных бизнес-правил и логики.\n\n8. **Strangler Fig (Паттерн «Столбняк»)**\n\n   * **Описание:** Постепенная миграция функциональности из монолитного приложения в микросервисную архитектуру, при этом старые компоненты постепенно замещаются новыми сервисами.\n   \n   * **Преимущества:**\n     - Минимизация рисков при переходе с монолита на микросервисы.\n     - Постепенное внедрение изменений без необходимости полной остановки системы.\n     - Облегчение тестирования и интеграции новых сервисов.\n\n9. **Bulkhead (Комната для быков)**\n   \n   * **Описание:** Изоляция различных частей системы друг от друга, чтобы сбой в одном сервисе не приводил к отказу всей системы.\n   \n   * **Преимущества:**\n     - Повышение устойчивости и отказоустойчивости.\n     - Ограничение воздействия сбоев на другие компоненты системы.\n     - Улучшение управляемости ресурсов.\n\n10. **Sidecar (Побочный контейнер)**\n    \n    * **Описание:** Размещение дополнительного процесса (например, прокси-сервера, менеджера конфигураций) рядом с основным сервисом в одном контейнере или поде. Этот процесс обеспечивает поддерживающие функции для основного сервиса.\n    \n    * **Преимущества:**\n      - Разделение ответственности между сервисами.\n      - Упрощение внедрения кросс-отраслевых функциональностей.\n      - Повышение модульности и повторного использования кода.\n\n11. **Adapter (Адаптер)**\n    \n    * **Описание:** Создание моста между микросервисами, обеспечивающего совместимость интерфейсов и протоколов взаимодействия.\n    \n    * **Преимущества:**\n      - Облегчение интеграции различных сервисов.\n      - Поддержка различных протоколов и форматов данных.\n      - Упрощение миграции и обновления систем.\n\n12. **Gateway Aggregation (Агрегация через шлюз)**\n    \n    * **Описание:** Объединение запросов к нескольким микросервисам в одном вызове через API Gateway, снижая число обращений клиента к системе.\n    \n    * **Преимущества:**\n      - Снижение задержек за счёт уменьшения количества сетевых вызовов.\n      - Упрощение клиентского кода.\n      - Централизация логики агрегации данных.\n\n**Заключение**\n\nИспользование этих паттернов проектирования помогает создать гибкую, масштабируемую и устойчивую микросервисную архитектуру. Важно понимать, что выбор конкретных паттернов зависит от требований проекта, бизнес-логики и особенностей инфраструктуры. Правильное применение паттернов способствует эффективной разработке, сопровождению и эксплуатации микросервисных систем.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Озоновый слой Земли представляет собой область стратосферы, находящуюся на высотах от примерно 15 до 35 километров над поверхностью планеты. Его основная функция — поглощение и фильтрация ультрафиолетового (УФ) излучения Солнца, что защищает живые организмы от вредного воздействия.\n\n## Изменения озонового слоя\n\n1. **Историческое истощение:**\n   В середине XX века учёные обнаружили, что концентрация озона в стратосфере начала уменьшаться. Основной причиной этого стало массовое использование хлорфторуглеродов (ХФУ), фторуглеродов (ФГУ) и других аналогичных веществ в промышленности и быту (например, в хладагентах, аэрозолях и пенопластах). Когда эти вещества поднимаются в стратосферу, они распадаются под воздействием УФ-излучения, выделяя атомы хлора и брома, которые катализируют разложение молекул озона (O₃) до кислорода (O₂).\n\n2. **Заброшенный озоновый слой:**\n   К 1980-м годам была обнаружена так называемая «озоновая дыра», особенно выраженная над Антарктидой. Это явление характеризуется значительным снижением концентрации озона в определённые периоды года из-за уникальных атмосферных условий, способствующих ускоренному разрушению озона.\n\n3. **Международные меры и восстановление:**\n   В 1987 году был подписан Монреальский протокол — международное соглашение, направленное на сокращение производства и потребления озоноразрушающих веществ. Благодаря соблюдению этого протокола и постепенному отказу от использования ХФУ и других вредных веществ, наблюдаются признаки постепенного восстановления озонового слоя. Однако этот процесс медленный и требует ещё нескольких десятилетий для полного восстановления до доконтаминантного уровня.\n\n## Важность озонового слоя\n\n1. **Защита от ультрафиолета:**\n   Озоновый слой эффективно поглощает большую часть УФ-С и УФ-В излучения, которые могут вызвать серьёзные повреждения кожи и глаз у человека, а также негативно влиять на экосистемы, включая растения и водные организмы.\n\n2. **Предотвращение заболеваний:**\n   Увеличение уровня УФ-излучения из-за истощения озонового слоя связано с повышенным риском появления кожных раков, катаракты и других заболеваний у людей. Также это может привести к ослаблению иммунной системы.\n\n3. **Экологические последствия:**\n   Повышенные уровни УФ-излучения негативно сказываются на росте и развитии растений, что может привести к нарушению экосистем и снижению продовольственной безопасности. В водных экосистемах, такие как коралловые рифы, УФ-излучение может вызывать разрушение их структуры и биоразнообразия.\n\n4. **Климатические изменения:**\n   Озоновый слой также играет роль в регулировании температуры атмосферы. Его изменения могут влиять на климатические процессы, включая циркуляцию атмосферы и формирование погоды.\n\n## Заключение\n\nИзменения в озоновом слое являются значимой экологической проблемой, требующей международного сотрудничества и ответственных действий. Благодаря принятым мерам, таким как Монреальский протокол, существует надежда на восстановление озонового слоя, что в свою очередь обеспечит защиту жизни на Земле от вредного УФ-излучения и поддержит баланс экосистем.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Проведение эффективного code review (ревью кода) играет ключевую роль в обеспечении качества программного обеспечения и повышении уровня команды разработчиков. Вот несколько советов, которые помогут сделать процесс ревью более продуктивным и конструктивным:\n\n1. **Понимание контекста изменений:**\n   - **Изучите требования и задачи:** Перед началом ревью ознакомьтесь с описанием задачи или требования, которое решает внесённый код.\n   - **Просмотрите связанные тикеты или документацию:** Это поможет лучше понять цель изменений и их влияние на проект.\n\n2. **Следуйте стандартам кодирования:**\n   - **Единый стиль:** Убедитесь, что код соответствует стилевым гайдлайнам проекта (именование переменных, форматирование, структура).\n   - **Консистентность:** Поддерживайте единообразие в кодовой базе, что облегчает чтение и поддержку кода.\n\n3. **Фокус на качестве кода:**\n   - **Читабельность:** Код должен быть понятен другим разработчикам. Используйте ясные и осмысленные имена переменных, функций и классов.\n   - **Простота:** Избегайте избыточной сложности. Простые решения обычно более устойчивы и легче поддерживаются.\n   - **DRY (Don't Repeat Yourself):** Избегайте дублирования кода. Переработайте повторяющиеся фрагменты в общие функции или модули.\n\n4. **Проверка функциональности и логики:**\n   - **Корректность:** Убедитесь, что код выполняет задуманную функцию без ошибок.\n   - **Покрытие тестами:** Проверьте наличие и качество автоматических тестов (юнит-тестов, интеграционных тестов) для новых функций.\n   - **Граничные случаи:** Рассмотрите обработку крайних и неожиданных ситуаций.\n\n5. **Производительность и оптимизация:**\n   - **Эффективность:** Оцените, насколько оптимизированы алгоритмы и использование ресурсов (память, процессорное время).\n   - **Масштабируемость:** Подумайте о том, как код будет вести себя при увеличении нагрузки или объёма данных.\n\n6. **Безопасность:**\n   - **Уязвимости:** Ищите возможные точки для атак, такие как SQL-инъекции, XSS, неправильная обработка данных.\n   - **Валидация данных:** Убедитесь, что вводимые данные корректно проверяются и обрабатываются.\n\n7. **Архитектура и дизайн:**\n   - **Следование принципам SOLID:** Проверьте, соблюдены ли основные принципы объектно-ориентированного проектирования.\n   - **Модульность:** Код должен быть разделён на логические модули или компоненты, которые легко поддерживать и расширять.\n   - **Повторное использование:** Насколько код можно использовать повторно в других частях приложения.\n\n8. **Использование инструментов:**\n   - **Системы контроля версий:** Git, Mercurial и другие системы позволяют эффективно управлять изменениями и проводить ревью.\n   - **Платформы для code review:** GitHub, GitLab, Bitbucket и другие предоставляют удобные интерфейсы для обсуждения и проверки кода.\n   - **Автоматизированные инструменты:** Линтеры, статический анализ кода и автоматические тесты могут помочь выявить простые ошибки до ручного ревью.\n\n9. **Коммуникация и конструктивность:**\n   - **Будьте вежливы:** Общайтесь уважительно, даже если вы находите ошибки или недостатки.\n   - **Конструктивная критика:** Вместо того чтобы просто указывать на проблемы, предлагайте решения или улучшения.\n   - **Признание хорошего кода:** Отмечайте и поощряйте хорошо написанные и эффективные решения.\n\n10. **Ограничение объёма изменений:**\n    - **Маленькие коммиты:** Предпочитайте маленькие, логически связанные изменения. Это облегчает ревью и снижает вероятность пропуска ошибок.\n    - **Своевременность:** Проводите ревью оперативно, чтобы избежать накопления большого количества незавершённых изменений.\n\n11. **Обучение и развитие команды:**\n    - **Обмен знаниями:** Используйте код-ревью как возможность для обмена опытом и лучшими практиками внутри команды.\n    - **Обратная связь:** Поощряйте открытость к обратной связи как для авторов изменений, так и для ревьюеров.\n\n12. **Документирование обсуждений:**\n    - **Записывайте решения:** Если в процессе ревью были приняты важные решения или внесены изменения, задокументируйте их для будущих ссылок.\n    - **Обновление документации:** Убедитесь, что сопутствующая документация обновлена в соответствии с изменениями в коде.\n\nСледуя этим рекомендациям, вы сможете сделать процесс code review более эффективным, повысить качество кода и укрепить сотрудничество внутри команды разработчиков. Помните, что цель ревью кода не только найти ошибки, но и способствовать непрерывному улучшению и развитию как проекта, так и профессиональных навыков участников команды.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Современные телескопы играют ключевую роль в развитии астрономии, обеспечивая ученым средства для детального изучения Вселенной. Существует несколько типов современных телескопов, каждый из которых специализирован для наблюдения различных диапазонов электромагнитного спектра:\n\n1. **Оптические телескопы**: Используют видимый свет для наблюдений. Примеры включают Большой телескоп на Гавайях (Keck) и Европейский южный обсерваторий (ESO). Они позволяют изучать звезды, галактики и различные астрономические явления с высоким разрешением.\n\n2. **Радиотелескопы**: Принимают радиоволны из космоса. Важный пример — массивная радиоволнаская обсерватория Very Large Array (VLA) в США. Радиотелескопы помогают исследовать холодные объекты космоса, такие как газовые облака и пульсары.\n\n3. **Инфракрасные телескопы**: Наблюдают в инфракрасном диапазоне, что позволяет видеть через космическую пыль и изучать формирование звезд и планет. Космический телескоп Спитцер является одним из ведущих инфракрасных инструментов.\n\n4. **Космические телескопы**: Расположены за пределами земной атмосферы, что исключает атмосферные искажения. Ключевые примеры — телескопы Хаббл и Джеймс Уэбб, которые предоставляют изображения высокой четкости и позволяют исследовать глубокий космос.\n\n5. **Гамма- и рентгеневские телескопы**: Детектируют высокоэнергетические излучения. Такие телескопы, как космический телескоп Чандра, исследуют экстремальные явления, такие как черные дыры и сверхновые взрывы.\n\n**Роль современных телескопов в астрономии:**\n\n- **Расширение знаний о Вселенной**: Позволяют изучать структуры от планет до самых отдаленных галактик, раскрывая процессы формирования и эволюции космических объектов.\n  \n- **Обнаружение экзопланет**: Помогают находить и анализировать планеты за пределами Солнечной системы, что важно для поиска условий, пригодных для жизни.\n  \n- **Изучение космических явлений**: Обеспечивают данные о звездных взрывах, черных дырах, нейтронных звездах и других астрономических феноменах.\n  \n- **Поддержка космологических исследований**: Способствуют пониманию масштабов, структуры и истории расширяющейся Вселенной.\n\n- **Инновации и технологии**: Развитие высокоточных телескопов стимулирует прогресс в оптике, криогении, компьютерных технологиях и других областях.\n\nТаким образом, современные телескопы являются незаменимыми инструментами, которые не только расширяют границы нашего понимания космоса, но и вдохновляют новые поколения астрономов и исследователей.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Садоводство — это не только увлекательное хобби, но и действенный способ улучшить здоровье. Ниже перечислены основные преимущества садоводства для физического и психического благополучия:\n\n### 1. Физическая активность\n\n- **Умеренные физические нагрузки**: Работа в саду включает такие действия, как копание, посадка, прополка и полив растений, которые способствуют укреплению мышц, повышению гибкости и выносливости.\n- **Улучшение сердечно-сосудистой системы**: Регулярные физические нагрузки помогают снижать риск сердечно-сосудистых заболеваний, контролировать артериальное давление и уровень холестерина.\n- **Сжигание калорий**: В зависимости от вида деятельности в саду, можно сжечь значительное количество калорий, что способствует контролю веса.\n\n### 2. Психическое здоровье\n\n- **Снижение уровня стресса**: Общение с природой и выполнение садовых работ помогают снизить уровень кортизола — гормона стресса, способствуя расслаблению и умиротворению.\n- **Улучшение настроения**: Контакт с природой и успешный уход за растениями способствуют выработке серотонина и дофамина, что улучшает настроение и общее самочувствие.\n- **Развитие когнитивных функций**: Планирование и уход за садом требуют концентрации, внимания и решения задач, что стимулирует мозг и может снижать риск развития когнитивных расстройств.\n\n### 3. Социальные аспекты\n\n- **Укрепление социальных связей**: Садоводство часто становится поводом для общения с соседями, участвовать в садоводческих клубах или обмениваться опытом и урожаем, что способствует социальной интеграции и снижению чувства одиночества.\n- **Обучение и развитие навыков**: Обмен знаниями и опытом с другими садоводами помогает развивать новые навыки и расширять кругозор.\n\n### 4. Питательные и экологические преимущества\n\n- **Доступ к свежим продуктам**: Выращивание собственных овощей, фруктов и зелени обеспечивает доступ к свежим и экологически чистым продуктам, что положительно влияет на питание и здоровье.\n- **Повышение иммунитета**: Контакт с землей и растениями может способствовать укреплению иммунной системы благодаря воздействию разнообразных микроэлементов и соединений.\n\n### 5. Улучшение качества сна\n\n- **Регулирование биоритмов**: Физическая активность на свежем воздухе и естественный дневной свет помогают регулировать циркадные ритмы, способствуя более глубокому и качественному сну.\n\n### 6. Терапевтические эффекты\n\n- **Садоводческая терапия**: Используется как метод лечения для людей с различными психическими и физическими расстройствами, улучшая общее состояние и способствуя реабилитации.\n\n### Заключение\n\nСадоводство — это многогранная деятельность, которая приносит пользу как физическому, так и психическому здоровью. Оно способствует активному образу жизни, улучшает настроение, укрепляет социальные связи и обеспечивает доступ к полезной пище. Включение садоводства в повседневную жизнь может значительно повысить качество жизни и общее благополучие.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Составление грамотного резюме является важным шагом на пути к успешному трудоустройству. Хорошо оформленное и структурированное резюме помогает выделиться среди множества соискателей и привлечь внимание работодателя. Ниже приведены основные рекомендации и этапы по созданию эффективного резюме.\n\n### 1. Выберите правильный формат резюме\n\nСуществует несколько форматов резюме, каждый из которых подходит для разных ситуаций:\n\n- **Хронологический**: перечисляются места работы и образование в обратном хронологическом порядке. Подходит для кандидатов с стабильным трудовым стажем и без значительных перерывов.\n  \n- **Функциональный (комбинированный)**: акцент на навыках и компетенциях, а не на временных промежутках работы. Подходит для тех, кто меняет профессию или имеет разнородный опыт.\n  \n- **Целевой**: резюме нацелено на конкретную вакансию, подчеркивая релевантные навыки и опыт.\n\n### 2. Основные разделы резюме\n\n#### **1. Контактная информация**\n- **Имя и фамилия**: четко укажите полные имя и фамилию.\n- **Телефон**: рабочий номер, лучше с мобильного телефона.\n- **Электронная почта**: профессиональный email (избегайте неформальных или несерьезных адресов).\n- **Адрес** (необязательно): город проживания, иногда указывают полный адрес.\n- **Ссылки** (при необходимости): профиль LinkedIn, портфолио, личный сайт.\n\n#### **2. Цель или резюме профессионала**\n- **Цель**: короткое заявление о ваших карьерных намерениях и том, что вы ищете.\n- **Резюме**: краткое описание вашего профессионального опыта, ключевых навыков и достижений. Полезно для опытных специалистов.\n\n#### **3. Опыт работы**\n- **Название должности**\n- **Название компании**, местоположение\n- **Период работы** (месяц и год начала и окончания)\n- **Основные обязанности и достижения**: используйте глаголы действия, количественные показатели (например, \"увеличил продажи на 20%\").\n  \n*Пример:*\n```\nМенеджер по продажам, ООО \"Ключевые решения\", Москва\nЯнварь 2018 – март 2023\n- Управление командой из 10 сотрудников\n- Разработка и внедрение стратегии продаж, что привело к росту выручки на 25%\n- Поддержание отношений с ключевыми клиентами\n```\n\n#### **4. Образование**\n- **Название учебного заведения**\n- **Степень или квалификация**\n- **Факультет/специальность**\n- **Период обучения**\n- **Дополнительные достижения** (например, стипендии, награды).\n\n*Пример:*\n```\nМосковский государственный университет, Москва\nБакалавр экономики, факультет экономики\nСентябрь 2014 – июнь 2018\n- Средний балл: 4.7/5.0\n- Участие в экономических конференциях\n```\n\n#### **5. Навыки**\n- Разделите навыки на **профессиональные** (например, владение программным обеспечением, языки программирования) и **межличностные** (например, коммуникабельность, лидерские качества).\n- Указывайте только те навыки, которые релевантны для позиции, на которую претендуете.\n\n*Пример:*\n```\nПрофессиональные навыки:\n- Продвинутый уровень MS Excel\n- Владение Python и SQL\n- Управление проектами (Agile, Scrum)\n\nМежличностные навыки:\n- Командная работа\n- Решение конфликтов\n- Тайм-менеджмент\n```\n\n#### **6. Дополнительные разделы (при необходимости)**\n- **Сертификаты и курсы**: релевантные профессиональные сертификаты.\n- **Языки**: уровень владения (например, английский — свободно).\n- **Проекты**: описание значимых проектов, особенно если они демонстрируют ваши навыки.\n- **Волонтерский опыт**: показывает социальную активность и дополнительные навыки.\n- **Публикации**: если они важны для позиции.\n\n### 3. Общие рекомендации\n\n- **Краткость и лаконичность**: идеальная длина — 1-2 страницы.\n- **Структурированность**: используйте заголовки, подзаголовки, списки для облегчения чтения.\n- **Правильность и грамотность**: избегайте орфографических и грамматических ошибок. Перепроверьте текст или попросите кого-то просмотреть.\n- **Адаптация под вакансию**: подчеркивайте те аспекты вашего опыта и навыков, которые наиболее релевантны для конкретной позиции.\n- **Четкое оформление**: используйте единый шрифт, понятные отступы, избегайте избыточного оформления и графических элементов, если это не требуется.\n- **Активный язык**: используйте глаголы действия и избегайте пассивных конструкций.\n- **Избегайте лишней информации**: личные данные вроде возраста, семейного положения, фотографии могут быть необязательны (в некоторых странах — даже нежелательны).\n\n### 4. Форматирование и оформление\n\n- **Шрифт**: выбирайте легкочитаемые шрифты (например, Arial, Calibri, Times New Roman) размером 10-12 пунктов.\n- **Выравнивание**: используйте левое выравнивание, обеспечьте равномерные отступы.\n- **Маркированные списки**: для перечисления обязанностей и навыков.\n- **Не используйте сложные элементы**: такие как таблицы, графики, если это не требуется для вакансии.\n\n### 5. Проверка и финализация\n\n- **Перепроверьте информацию**: убедитесь, что все данные актуальны и точны.\n- **Спрашивайте обратную связь**: попросите коллегу или специалиста просмотреть ваше резюме.\n- **Сохраните в правильном формате**: PDF обычно предпочтительный формат для отправки, чтобы сохранить оформление.\n\n### Пример структуры резюме\n\n```\nИванов Иван Иванович\nТелефон: +7 123 456-78-90 | Email: ivanov@example.com | LinkedIn: linkedin.com/in/ivanov\n\nРезюме\nОпытный менеджер по продажам с более чем 5-летним стажем в сфере ИТ. Успешно управлял командами, разрабатывал стратегии продаж и увеличивал выручку компании. Ищу возможность применять свои навыки в динамичной компании для достижения высоких результатов.\n\nОпыт работы\nМенеджер по продажам, ООО \"Ключевые решения\", Москва\nЯнварь 2018 – март 2023\n- Управление командой из 10 сотрудников\n- Разработка и внедрение стратегии продаж, что привело к росту выручки на 25%\n- Поддержание отношений с ключевыми клиентами\n\nОбразование\nМосковский государственный университет, Москва\nБакалавр экономики, факультет экономики\nСентябрь 2014 – июнь 2018\n- Средний балл: 4.7/5.0\n\nНавыки\nПрофессиональные:\n- Продвинутый уровень MS Excel\n- Владение Python и SQL\n- Управление проектами (Agile, Scrum)\n\nМежличностные:\n- Командная работа\n- Решение конфликтов\n- Тайм-менеджмент\n\nДополнительная информация\n- Сертификат CRM-аналитик, 2020\n- Английский язык — свободное владение\n- Участник волонтерского проекта \"Развитие молодежи\", 2019-2021\n```\n\n### Заключение\n\nСоздание резюме — это возможность представить себя с наилучшей стороны потенциальному работодателю. Следуя вышеуказанным рекомендациям, вы сможете составить структурированное, информативное и привлекательное резюме, которое повысит ваши шансы на успешное трудоустройство. Помните, что резюме должно отражать вашу уникальность и соответствовать требованиям конкретной позиции.\n\nУдачи в поиске работы!",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Внедрение практик DevOps в компании может значительно повысить эффективность разработки, ускорить вывод продуктов на рынок и улучшить качество программного обеспечения. Вот пошаговые рекомендации для успешного внедрения DevOps:\n\n1. **Понимание принципов DevOps**\n   - **Культура совместной работы**: DevOps объединяет команды разработки (Dev) и эксплуатации (Ops) для улучшения коммуникации и сотрудничества.\n   - **Автоматизация процессов**: Основная цель — автоматизация повторяющихся задач, что снижает вероятность ошибок и ускоряет процессы.\n   - **Непрерывная интеграция и доставка (CI/CD)**: Автоматизация сборки, тестирования и развертывания приложений для быстрого и безопасного выпуска обновлений.\n\n2. **Оценка текущих процессов и инфраструктуры**\n   - Проведите аудит существующих рабочих процессов, инструментов и инфраструктуры.\n   - Выявите узкие места, задержки и области, требующие улучшения.\n\n3. **Формирование DevOps-культуры**\n   - **Изменение менталитета**: Поощряйте открытость, доверие и ответственность между командами.\n   - **Совместные цели**: Установите общие цели для разработки и эксплуатации, чтобы обе стороны работали в одном направлении.\n   - **Обучение и развитие**: Инвестируйте в обучение сотрудников новым технологиям и практикам, связанным с DevOps.\n\n4. **Внедрение инструментов для автоматизации**\n   - **Системы контроля версий**: Git, GitLab, GitHub для управления исходным кодом.\n   - **Инструменты для CI/CD**: Jenkins, GitLab CI/CD, CircleCI, Travis CI для автоматизации сборки и развертывания.\n   - **Контейнеризация и оркестрация**: Docker, Kubernetes для управления приложениями и инфраструктурой.\n   - **Инфраструктура как код (IaC)**: Terraform, Ansible, Chef, Puppet для автоматизации управления инфраструктурой.\n\n5. **Автоматизация процессов разработки и развертывания**\n   - Настройте автоматизированные сборки и тестирование при каждом изменении кода.\n   - Реализуйте автоматическое развертывание на различных средах (тестирование, стейджинг, продакшен).\n\n6. **Непрерывное мониторинг и обратная связь**\n   - Внедрите инструменты мониторинга (Prometheus, Grafana, ELK Stack) для отслеживания производительности и стабильности систем.\n   - Собирайте и анализируйте метрики для быстрого обнаружения и решения проблем.\n   - Организуйте регулярные ретроспективы для обсуждения успешных практик и выявления областей для улучшения.\n\n7. **Обеспечение безопасности (DevSecOps)**\n   - Интегрируйте практики безопасности на всех этапах разработки и развертывания.\n   - Используйте инструменты для автоматического сканирования кода и управления уязвимостями.\n\n8. **Постепенное внедрение изменений**\n   - Начните с пилотных проектов, чтобы протестировать новые процессы и инструменты.\n   - Постепенно масштабируйте успешные практики на остальные команды и проекты.\n\n9. **Измерение успеха и постоянное улучшение**\n   - Определите ключевые показатели эффективности (KPI) для оценки успешности внедрения DevOps.\n   - Регулярно оценивайте процессы и инструменты, внося необходимые коррективы для оптимизации работы.\n\n10. **Обеспечение поддержки высшего руководства**\n    - Получите поддержку и участие руководства, чтобы обеспечить необходимые ресурсы и устранить возможные барьеры.\n    - Демонстрируйте преимущества DevOps через конкретные достижения и улучшения.\n\nВнедрение DevOps требует времени и усилий, но с правильным подходом и поддержкой компании можно достичь значительных улучшений в разработке и эксплуатации программного обеспечения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Создание REST API (Representational State Transfer Application Programming Interface) включает несколько ключевых этапов. Ниже представлены основные шаги, которые помогут вам разработать эффективное и масштабируемое REST API:\n\n### 1. **Планирование и Проектирование**\n\n**a. Определение Требований:**\n   - **Цели API:** Поймите, какие задачи должен решать ваш API и какие проблемы он будет устранять.\n   - **Целевая аудитория:** Определите, кто будет использовать ваш API (внутренние разработчики, внешние клиенты и т.д.).\n\n**b. Моделирование Ресурсов:**\n   - **Идентификация Ресурсов:** Определите ключевые сущности (например, пользователи, продукты, заказы), которые будут представлены через API.\n   - **Определение Отношений между Ресурсами:** Опишите, как ресурсы связаны друг с другом (например, один пользователь может иметь несколько заказов).\n\n**c. Определение Эндпоинтов и Методов:**\n   - **Эндпоинты (URL):** Спроектируйте понятные и логичные URL для доступа к ресурсам (например, `/users`, `/products/{id}`).\n   - **HTTP Методы:** Используйте правильные методы для операций над ресурсами:\n     - `GET` – получение данных\n     - `POST` – создание нового ресурса\n     - `PUT`/`PATCH` – обновление существующего ресурса\n     - `DELETE` – удаление ресурса\n\n### 2. **Выбор Технологий и Инструментов**\n\n**a. Язык Программирования и Фреймворк:**\n   - **Популярные Выборы:** Node.js с Express, Python с Django или Flask, Ruby on Rails, Java с Spring Boot и др.\n   \n**b. База Данных:**\n   - **Типы Баз Данных:** Выберите между реляционными (SQL) или нереляционными (NoSQL) базами данных в зависимости от требований проекта.\n   - **ORM/ODM:** Используйте инструменты для упрощения взаимодействия с базой данных (например, Sequelize для Node.js, SQLAlchemy для Python).\n\n**c. Инструменты для Документации и Тестирования:**\n   - **Документация:** Swagger/OpenAPI, Postman.\n   - **Тестирование:** Jest, Mocha, pytest и другие.\n\n### 3. **Разработка API**\n\n**a. Настройка Окружения:**\n   - **Контроль Версий:** Используйте системы контроля версий, такие как Git.\n   - **Управление Зависимостями:** Убедитесь, что все необходимые библиотеки и модули правильно установлены.\n\n**b. Реализация Эндпоинтов:**\n   - **Маршрутизация:** Настройте маршруты для каждого эндпоинта.\n   - **Обработка Запросов:** Реализуйте логику обработки входящих запросов и формирования ответов.\n   \n**c. Валидация и Обработка Ошибок:**\n   - **Валидация Входных Данных:** Проверяйте корректность и полноту данных, поступающих от клиентов.\n   - **Обработка Исключений:** Грамотно обрабатывайте ошибки и возвращайте понятные сообщения об ошибках с соответствующими статусами HTTP.\n\n### 4. **Аутентификация и Авторизация**\n\n**a. Механизмы Безопасности:**\n   - **JWT (JSON Web Tokens):** Часто используется для аутентификации и передачи информации о пользователях.\n   - **OAuth 2.0:** Подходит для авторизации через сторонние сервисы.\n   \n**b. Контроль Доступа:**\n   - **Роли и Разрешения:** Определите, какие действия доступны разным категориям пользователей.\n\n### 5. **Тестирование**\n\n**a. Юнит-Тесты:**\n   - Тестируйте отдельные функции и модули API для проверки их корректной работы.\n\n**b. Интеграционные Тесты:**\n   - Проверьте взаимодействие между различными частями системы и внешними сервисами.\n\n**c. Тестирование Безопасности:**\n   - Убедитесь, что API защищен от основных уязвимостей (например, SQL-инъекций, XSS, CSRF).\n\n### 6. **Документация**\n\n**a. Автоматизированная Документация:**\n   - Используйте инструменты вроде Swagger/OpenAPI для автоматического создания и поддержания актуальной документации.\n\n**b. Примеры Использования:**\n   - Добавьте примеры запросов и ответов для облегчения понимания использования API разработчиками.\n\n### 7. **Развертывание и Хостинг**\n\n**a. Выбор Платформы:**\n   - **Облачные Сервисы:** AWS, Google Cloud, Azure, Heroku и другие.\n   - **Серверы:** Развертывание на собственных серверах или VPS.\n\n**b. Настройка CI/CD:**\n   - Автоматизируйте процессы сборки, тестирования и развертывания для ускорения выпуска обновлений.\n\n### 8. **Мониторинг и Поддержка**\n\n**a. Логирование:**\n   - Внедрите системы логирования для отслеживания активности и выявления проблем.\n\n**b. Мониторинг Производительности:**\n   - Используйте инструменты для мониторинга ответного времени, нагрузки на сервер и других метрик.\n\n**c. Обновления и Улучшения:**\n   - Регулярно обновляйте API, добавляйте новые функции и исправляйте выявленные баги.\n\n### 9. **Версионирование API**\n\n**a. Управление Изменениями:**\n   - Внедрите стратегию версионирования (например, через URL `/v1/`, `/v2/`) для обеспечения совместимости при внесении изменений.\n\n### 10. **Обеспечение Масштабируемости**\n\n**a. Архитектурные Решения:**\n   - Используйте микросервисную архитектуру, если это оправдано.\n   \n**b. Кэширование:**\n   - Реализуйте кэширование для улучшения производительности и снижения нагрузки на сервер.\n\nСледуя этим шагам, вы сможете создать надежный, безопасный и удобный REST API, который будет эффективно обслуживать потребности ваших пользователей и интегрироваться с другими системами.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**Тестирование производительности веб-приложений** — это процесс оценки скорости, стабильности и масштабируемости веб-приложения под различными нагрузками. Цель такого тестирования — гарантировать, что приложение будет эффективно работать в условиях реальной эксплуатации, обеспечивая пользователям удовлетворительный опыт взаимодействия.\n\n### Основные цели тестирования производительности:\n1. **Определение предельных возможностей системы:** Выявление, при каких нагрузках приложение начинает испытывать проблемы.\n2. **Оптимизация ресурсов:** Обнаружение узких мест в системе для эффективного использования серверных и сетевых ресурсов.\n3. **Обеспечение стабильности:** Проверка стабильности работы приложения при длительных нагрузках.\n4. **Поддержка принятия бизнес-решений:** Помощь в планировании масштабируемости и инфраструктуры.\n\n### Виды тестирования производительности:\n\n1. **Нагрузочное тестирование (Load Testing):**\n   - **Цель:** Определить, как система ведет себя при ожидаемой рабочей нагрузке.\n   - **Пример:** Проверка работы сайта при 1000 одновременных пользователей.\n\n2. **Стресс-тестирование (Stress Testing):**\n   - **Цель:** Определить пределы производительности системы, выяснить, как она реагирует на экстремальные нагрузки.\n   - **Пример:** Наращивание количества пользователей до тех пор, пока сервер не начнет сбои.\n\n3. **Тестирование на устойчивость (Endurance Testing или Soak Testing):**\n   - **Цель:** Проверить стабильность и производительность системы при длительной работе под нормальной нагрузкой.\n   - **Пример:** Работать с приложением под нагрузкой в течение 24 часов и мониторить использование ресурсов.\n\n4. **Тестирование на скачки нагрузки (Spike Testing):**\n   - **Цель:** Оценить, как система реагирует на внезапные резкие повышения нагрузки.\n   - **Пример:** Внезапный всплеск пользователей после запуска рекламной кампании.\n\n5. **Конфигурационное тестирование (Configuration Testing):**\n   - **Цель:** Исследовать влияние различных конфигураций аппаратного и программного обеспечения на производительность.\n   - **Пример:** Сравнение работы приложения на разных версиях серверного ПО.\n\n### Ключевые метрики производительности:\n\n- **Время отклика (Response Time):** Время, необходимое системе для ответа на запрос пользователя.\n- **Пропускная способность (Throughput):** Количество обработанных запросов за единицу времени.\n- **Использование ресурсов (Resource Utilization):** Загрузка ЦП, памяти, диска и сети во время тестирования.\n- **Время простоя (Downtime):** Время, когда система недоступна для пользователей.\n- **Ошибки (Errors):** Количество и тип ошибок, возникающих при нагрузке.\n\n### Инструменты для тестирования производительности:\n\n1. **Apache JMeter:** Популярный инструмент с открытым исходным кодом для нагрузочного тестирования веб-приложений.\n2. **LoadRunner:** Коммерческий продукт от Micro Focus, мощный и функциональный инструмент для различных видов тестирования производительности.\n3. **Gatling:** Инструмент с открытым исходным кодом, ориентированный на разработчиков, с использованием скриптов на языке Scala.\n4. **Locust:** Инструмент на Python, позволяющий создавать масштабируемые сценарии нагрузки.\n5. **BlazeMeter:** Облачный сервис, совместимый с JMeter, обеспечивающий масштабируемость и удобство использования.\n\n### Этапы тестирования производительности:\n\n1. **Планирование:**\n   - Определение целей тестирования.\n   - Идентификация ключевых транзакций и сценариев использования.\n   - Установление критериев успеха.\n\n2. **Дизайн тестов:**\n   - Разработка сценариев нагрузки, отражающих реальные условия эксплуатации.\n   - Определение типов тестирования (нагрузочное, стрессовое и т.д.).\n\n3. **Настройка окружения:**\n   - Подготовка тестовой среды, максимально приближенной к рабочей.\n   - Настройка инструментов мониторинга ресурсов.\n\n4. **Выполнение тестов:**\n   - Запуск сценариев нагрузки.\n   - Мониторинг работы системы и собирание данных.\n\n5. **Анализ результатов:**\n   - Сравнение полученных данных с установленными критериями.\n   - Выявление узких мест и проблемных областей.\n\n6. **Оптимизация:**\n   - Внесение изменений в код, конфигурацию или инфраструктуру для улучшения производительности.\n   - Повторное тестирование для проверки эффективности внесенных улучшений.\n\n7. **Отчетность:**\n   - Составление подробных отчетов с результатами тестирования и рекомендациями.\n\n### Лучшие практики при тестировании производительности:\n\n- **Реалистичные сценарии:** Используйте реальные данные и сценарии, чтобы тестирование отражало фактические условия эксплуатации.\n- **Изолированное тестирование:** Обеспечьте, чтобы другие процессы не влияли на результаты тестирования.\n- **Постоянный мониторинг:** Используйте инструменты для мониторинга ресурсов в реальном времени.\n- **Повторяемость:** Обеспечьте возможность повторного запуска тестов для проверки стабильности результатов.\n- **Документирование:** Ведите подробную документацию всех этапов тестирования, используемых методов и обнаруженных проблем.\n\n### Заключение\n\nТестирование производительности веб-приложений является неотъемлемой частью процесса разработки, обеспечивая надежную и эффективную работу приложения под различными нагрузками. Правильное планирование, выбор соответствующих инструментов и соблюдение лучших практик помогут выявить и устранить проблемы на ранних стадиях, что в конечном итоге приведет к повышению удовлетворенности пользователей и успешности веб-продукта.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Развитие критического мышления является важным аспектом личностного и профессионального роста. Ниже представлены несколько способов, которые могут помочь улучшить ваши навыки критического мышления:\n\n1. **Постановка вопросов**\n   - **Сомневайтесь и задавайте уточняющие вопросы.** Вместо того чтобы принимать информацию на веру, исследуйте её происхождение и обоснование.\n   - **Используйте метод Сократа**: задавайте последовательные вопросы, чтобы глубже понять тему.\n\n2. **Анализ информации**\n   - **Разделяйте информацию на составляющие.** Разбирайте сложные идеи на более простые части для лучшего понимания.\n   - **Оценивайте источники.** Проверяйте достоверность и надёжность информации, которую получаете.\n\n3. **Развитие логического мышления**\n   - **Изучайте основы логики.** Понимание логических последовательностей и аргументации помогает в оценке аргументов других людей.\n   - **Практикуйте решение логических задач и головоломок.**\n\n4. **Разнообразие источников информации**\n   - **Читайте различные материалы**: книги, статьи, исследования из разных областей и точек зрения.\n   - **Избегайте информационного пузыря.** Стремитесь получать информацию из разноплановых источников, чтобы избежать предвзятости.\n\n5. **Обсуждение и дебаты**\n   - **Участвуйте в дискуссиях** с людьми, имеющими разные мнения. Это помогает увидеть проблему с различных углов.\n   - **Слушайте активно,** стараясь понять аргументы противоположной стороны перед тем, как высказывать своё мнение.\n\n6. **Решение проблем и принятие решений**\n   - **Практикуйте структурированный подход** к решению проблем: определение проблемы, генерация вариантов решений, оценка и выбор наилучшего варианта.\n   - **Используйте техники мозгового штурма** для нахождения креативных решений.\n\n7. **Рефлексия и самооценка**\n   - **Регулярно анализируйте свои мысли и действия.** Определяйте, где вы могли допустить ошибку и как можно улучшить подход.\n   - **Ведите дневник размышлений,** записывая свои идеи, выводы и вопросы.\n\n8. **Отличение фактов от мнений**\n   - **Учитесь распознавать, что является доказанным фактом, а что лишь субъективным мнением.**\n   - **Проверяйте информацию** перед тем, как принимать её за истину.\n\n9. **Участие в образовательных программах**\n   - **Посещайте курсы и семинары,** направленные на развитие критического мышления.\n   - **Используйте онлайн-ресурсы и литературу,** посвящённую этой теме.\n\n10. **Практика открытости ума**\n    - **Будьте готовы изменить своё мнение** на основе новых доказательств и аргументов.\n    - **Избегайте когнитивных искажений,** таких как подтверждающее искажение или эффект роскошного фронта.\n\nРазвитие критического мышления требует времени и постоянной практики. Применяя перечисленные методы в повседневной жизни, вы сможете улучшить свою способность анализировать информацию, принимать обоснованные решения и эффективно решать возникающие проблемы.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Написание качественной документации для REST API является ключевым элементом успешной интеграции и использования вашего сервиса разработчиками. Вот несколько советов, которые помогут создать понятную, структурированную и полезную документацию:\n\n### 1. **Введение и обзор**\n\n- **Описание общего назначения API**: Объясните, что делает ваш API, для каких задач он предназначен и какие проблемы решает.\n- **Целевая аудитория**: Укажите, к кому обращена ваша документация (например, разработчики, интеграторы, технические специалисты).\n\n### 2. **Аутентификация и авторизация**\n\n- **Методы аутентификации**: Опишите, как пользователи могут аутентифицироваться (например, OAuth 2.0, API ключи, JWT).\n- **Примеры запросов**: Приведите примеры заголовков и параметров, необходимых для аутентификации.\n- **Безопасность**: Объясните меры безопасности, используемые для защиты данных и доступа.\n\n### 3. **Обзор конечных точек (Endpoints)**\n\n- **Структура URL**: Опишите базовый URL API и структуру конечных точек.\n- **Ресурсы и методы**: Перечислите все доступные ресурсы и соответствующие HTTP-методы (GET, POST, PUT, DELETE и т.д.).\n\n### 4. **Подробное описание конечных точек**\n\nДля каждой конечной точки предоставьте следующую информацию:\n\n- **URL и метод запроса**: Например, `GET /api/v1/users`.\n- **Описание**: Кратко опишите, что делает эта конечная точка.\n- **Параметры запроса**:\n  - **Параметры пути**: Например, `/{id}`.\n  - **Параметры запроса**: Например, фильтры, лимиты, сортировка.\n  - **Тело запроса**: Для методов, которые отправляют данные (POST, PUT). Опишите структуру данных и допустимые значения.\n- **Примеры запросов**: Представьте примеры HTTP-запросов с использованием cURL или других инструментов.\n- **Ответы**:\n  - **Статусы HTTP**: Опишите возможные коды ответа (200, 201, 400, 401, 404, 500 и т.д.).\n  - **Структура ответа**: Приведите примеры JSON или XML ответов.\n  - **Описание полей**: Объясните, что означает каждое поле в ответе.\n- **Ошибки**:\n  - Опишите типичные ошибки и как их обрабатывать.\n  - Примеры сообщений об ошибках.\n\n### 5. **Примеры использования**\n\n- **Практические примеры**: Покажите, как выполнять типичные задачи с помощью вашего API.\n- **Кодовые примеры**: Предоставьте фрагменты кода на популярных языках программирования (Python, JavaScript, Java и т.д.), демонстрирующие использование API.\n- **Полные сценарии**: Описывайте пошаговые примеры от аутентификации до выполнения различных операций с ресурсами.\n\n### 6. **Схемы данных и модели**\n\n- **Описание моделей данных**: Объясните основные сущности и их атрибуты.\n- **Связи между ресурсами**: Покажите, как различные ресурсы связаны между собой (например, один-ко-многим, многие-ко-многим).\n- **Диаграммы**: Используйте ER-диаграммы или другие визуальные представления для лучшего понимания структуры данных.\n\n### 7. **Инструменты и SDK**\n\n- **Инструменты для тестирования API**: Укажите рекомендуемые инструменты, такие как Postman, Insomnia или встроенные консоли.\n- **Библиотеки и SDK**: Если доступны официальные библиотеки для различных языков, предоставьте ссылки и инструкции по установке.\n\n### 8. **Лучшие практики и рекомендации**\n\n- **Версионирование**: Опишите стратегию версионирования API и как пользователи могут переключаться между версиями.\n- **Ограничения и лимиты**: Информируйте о любых ограничениях, таких как лимиты запросов (rate limiting), размер данных и т.д.\n- **Обработка ошибок**: Рекомендации по корректной обработке ошибок на стороне клиента.\n- **Оптимизация запросов**: Советы по эффективному использованию API для повышения производительности.\n\n### 9. **Часто задаваемые вопросы (FAQ)**\n\n- Ответьте на распространенные вопросы, которые могут возникнуть у пользователей API.\n- Объясните типичные проблемы и способы их решения.\n\n### 10. **Обратная связь и поддержка**\n\n- **Контактные данные**: Укажите способы связи для получения поддержки (электронная почта, форумы, чаты).\n- **Сообщество**: Если есть, предоставьте ссылки на сообщества разработчиков, где они могут обсуждать вопросы и делиться опытом.\n\n### 11. **Технические детали и ограничения**\n\n- **Спецификации протоколов**: Укажите используемые форматы данных (JSON, XML), поддерживаемые версии HTTP и другие технические аспекты.\n- **Совместимость**: Объясните, с какими системами или платформами совместим ваш API.\n- **Известные ограничения**: Укажите любые текущие ограничения или планируемые изменения, которые могут повлиять на пользователей.\n\n### 12. **Автоматизация и генерация документации**\n\n- **Использование инструментов**: Рассмотрите использование инструментов для автоматической генерации документации, таких как Swagger (OpenAPI), Redoc, Apiary или Postman.\n- **Поддержка актуальности**: Обеспечьте, чтобы документация автоматически обновлялась при изменениях в API, что поможет избежать расхождений.\n\n### 13. **Язык и стиль изложения**\n\n- **Ясность и простота**: Пишите доступным языком, избегайте избыточной технической терминологии, если это не необходимо.\n- **Последовательность**: Используйте единый стиль оформления, терминологию и форматирование по всей документации.\n- **Хорошая структура**: Разделяйте информацию на логические разделы и подпункты, используйте оглавление для облегчения навигации.\n\n### 14. **Тестирование и проверка документации**\n\n- **Ревью и тестирование**: Перед публикацией документации убедитесь, что все примеры работают корректно, а описания точны.\n- **Обратная связь пользователей**: Позвольте пользователям оставлять отзывы и предложения по улучшению документации.\n\n### Заключение\n\nКачественная документация для REST API должна быть понятной, полной и удобной для навигации. Она не только помогает разработчикам эффективно использовать ваш API, но и снижает нагрузку на вашу поддержку, снижая количество возникающих вопросов и проблем. Постоянно обновляйте документацию в соответствии с изменениями API и учитывайте обратную связь от пользователей для ее улучшения.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Методология **Kanban** является одной из популярных гибких (agile) методологий управления проектами, широко применяемой в IT-сфере. Она изначально разработана в производственной отрасли компанией Toyota для оптимизации процессов производства, но с тех пор адаптирована и успешно используется в различных областях, включая информационные технологии.\n\n### Основные принципы Kanban\n\n1. **Визуализация рабочего процесса**:\n   - **Kanban-доска**: Центральный элемент методологии — это доска, разделённая на колонки, отражающие стадии выполнения задач (например, \"Запланировано\", \"В работе\", \"Готово\"). Каждая задача представлена карточкой, которую перемещают по доске по мере её выполнения.\n   - Визуализация помогает команде видеть текущие задачи, их состояние и прогресс проекта в целом.\n\n2. **Ограничение незавершённой работы (WIP Limits)**:\n   - Устанавливаются максимальные количества задач в каждой стадии процесса. Это предотвращает перегрузку команды, снижает время ожидания и способствует более эффективному управлению ресурсами.\n\n3. **Управление потоком**:\n   - Цель — обеспечить плавное и предсказуемое движение задач через все стадии процесса. Это включает мониторинг и оптимизацию скорости выполнения задач, выявление и устранение узких мест.\n\n4. **Ясные процессы и правила**:\n   - Определяются четкие правила и критерии для каждой стадии процесса, что упрощает понимание и выполнение задач всеми участниками команды.\n\n5. **Непрерывное улучшение (Kaizen)**:\n   - Команда постоянно анализирует процесс, выявляет области для улучшения и внедряет изменения для повышения эффективности и качества работы.\n\n### Как Kanban помогает в IT-проектах\n\n1. **Повышение прозрачности**:\n   - Визуализация процесса позволяет всем участникам команды и заинтересованным сторонам видеть текущий статус задач, что способствует лучшему пониманию и сотрудничеству.\n\n2. **Гибкость и адаптивность**:\n   - Kanban не требует фиксированных временных рамок или структурированных ролей, что позволяет быстро адаптироваться к изменениям требований и условий проекта.\n\n3. **Оптимизация потока работы**:\n   - Ограничения на количество одновременно выполняемых задач помогают избежать \"узких мест\" и обеспечивают более равномерное распределение нагрузки, что снижает время выполнения задач и повышает общую производительность.\n\n4. **Фокус на качестве**:\n   - Постоянное внимание к процессу и задачи на каждой стадии способствует выявлению и устранению проблем на ранних этапах, что улучшает качество конечного продукта.\n\n5. **Улучшение коммуникации**:\n   - Регулярные обсуждения и визуальная организация работы способствуют лучшей коммуникации внутри команды и между различными участниками проекта.\n\n6. **Снижение риска**:\n   - Постепенная и контролируемая работа над задачами позволяет вовремя выявлять и решать проблемы, снижая общие риски проекта.\n\n### Инструменты для реализации Kanban\n\n- **Физические доски**: Простые доски с пост-итами, используемые в офлайн-командах.\n- **Программные решения**: Такие как Jira, Trello, Asana, Microsoft Azure DevOps и другие, которые предоставляют цифровые Kanban-доски с дополнительными функциями для управления проектами.\n\n### Примеры применения Kanban в IT\n\n- **Разработка программного обеспечения**: Управление задачами разработки, тестирования и выпуска новых версий.\n- **Поддержка и обслуживание**: Организация и приоритизация запросов на поддержку пользователей.\n- **Инфраструктура и DevOps**: Координация задач по настройке и поддержке инфраструктуры, автоматизации процессов и развертыванию приложений.\n\n### Сравнение с другими методологиями\n\nВ отличие от **Scrum**, который основывается на фиксированных спринтах и ролях (например, Scrum-мастер, Product Owner), Kanban более гибок и не требует строгого деления времени на итерации. Это делает Kanban привлекательным для команд, которым необходима большая гибкость и возможность непрерывного потока работы без фиксированных циклов.\n\n### Заключение\n\nМетодология Kanban предоставляет эффективный инструмент для управления IT-проектами благодаря своей гибкости, визуализации процессов и фокусу на непрерывном улучшении. Она помогает командам повысить производительность, улучшить качество работы и быстрее адаптироваться к изменениям, что особенно важно в динамичной среде разработки программного обеспечения и информационных технологий.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор подходящей интегрированной среды разработки (IDE) для Python может существенно повысить вашу продуктивность и упростить процесс программирования. Вот несколько советов, которые помогут вам выбрать наиболее подходящую IDE для ваших потребностей:\n\n### 1. **Определите свои потребности и уровень навыков**\n- **Начинающие**: Если вы только начинаете изучать Python, возможно, стоит выбрать простую и интуитивно понятную среду, которая не перегружена множеством функций.\n- **Профессионалы**: Для опытных разработчиков могут понадобиться расширенные возможности, такие как продвинутая отладка, интеграция с системами контроля версий, поддержка фреймворков и т.д.\n\n### 2. **Рассмотрите популярные IDE для Python**\n\n- **PyCharm**\n  - **Плюсы**: Мощная функциональность, отличная поддержка Django и других фреймворков, интегрированный отладчик, рефакторинг кода, поддержка виртуальных сред.\n  - **Минусы**: Полная версия платная (есть бесплатная версия Community Edition с ограниченными возможностями).\n  - **Подходит для**: Профессиональных разработчиков и тех, кто работает над крупными проектами.\n\n- **Visual Studio Code (VS Code)**\n  - **Плюсы**: Бесплатная, легкая, огромное количество расширений, отличная поддержка Python через расширение Microsoft, встроенный терминал, интеграция с Git.\n  - **Минусы**: Некоторым может не хватать некоторых встроенных функций по сравнению с полнофункциональными IDE.\n  - **Подходит для**: Большинства пользователей, особенно тех, кто ценит гибкость и возможности настройки.\n\n- **Spyder**\n  - **Плюсы**: Ориентирована на научные вычисления и анализ данных, интеграция с библиотеками NumPy, SciPy, Matplotlib, встроенный консоль.\n  - **Минусы**: Менее подходит для разработки веб-приложений.\n  - **Подходит для**: Учёных, инженеров и аналитиков данных.\n\n- **Jupyter Notebook**\n  - **Плюсы**: Отлично подходит для интерактивного программирования, анализа данных и машинного обучения, возможность интеграции с Markdown для документации.\n  - **Минусы**: Не является полноценной IDE, ограниченные возможности по сравнению с другими средами.\n  - **Подходит для**: Аналитиков данных и исследователей.\n\n- **Sublime Text**\n  - **Плюсы**: Очень быстрый и легкий редактор, поддержка множества плагинов, высокая настраиваемость.\n  - **Минусы**: Платный (есть бесплатная версия с периодическими напоминаниями о покупке лицензии), требует настройки для полноценной работы с Python.\n  - **Подходит для**: Разработчиков, предпочитающих минималистичный подход и высокую скорость.\n\n- **Atom**\n  - **Плюсы**: Бесплатный, с открытым исходным кодом, поддержка множества пакетов, гибкая настройка.\n  - **Минусы**: Может быть менее производительным при больших проектах.\n  - **Подходит для**: Разработчиков, ищущих бесплатное и настраиваемое решение.\n\n### 3. **Оцените ключевые функции IDE**\n\nПри выборе IDE обратите внимание на следующие функции:\n- **Автодополнение кода**: Помогает ускорить написание кода и уменьшить количество ошибок.\n- **Отладчик**: Возможность пошагового выполнения кода, установка точек останова и анализ состояния программы.\n- **Интеграция с системами контроля версий (Git, SVN)**: Упрощает управление кодом и совместную работу.\n- **Поддержка виртуальных сред**: Позволяет изолировать зависимости проектов.\n- **Интеграция с базами данных**: Полезно для разработки приложений, работающих с базами данных.\n- **Поддержка фреймворков**: Например, Django, Flask для веб-разработки.\n- **Многоязычная поддержка**: Если вы работаете не только с Python, а с другими языками программирования.\n\n### 4. **Тестируйте несколько вариантов**\nНе стесняйтесь пробовать разные IDE, чтобы понять, какая из них больше подходит вашему стилю работы. Большинство популярных сред предоставляют бесплатные версии или пробные периоды.\n\n### 5. **Учитывайте производительность и системные требования**\nНекоторые IDE требуют больше ресурсов компьютера. Если у вас ограниченные системные ресурсы, выбирайте более легкие решения, такие как VS Code или Sublime Text.\n\n### 6. **Сообщество и поддержка**\nIDE с активным сообществом и регулярными обновлениями, как PyCharm или VS Code, предоставляют больше ресурсов для обучения и решения возникающих вопросов.\n\n### 7. **Лицензирование и стоимость**\nОпределите, готовы ли вы инвестировать в платную IDE или предпочитаете бесплатные. Многие мощные инструменты имеют бесплатные версии с ограничениями, которые могут быть достаточны для ваших задач.\n\n### Заключение\n\nВыбор IDE — индивидуальный процесс, зависящий от ваших конкретных потребностей, уровня опыта и предпочтений. Попробуйте несколько вариантов, учитывая вышеперечисленные факторы, и выберите ту среду, которая наиболее комфортна и эффективна для вас.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Вот несколько идей для экологичного образа жизни, которые помогут снизить ваш экологический след и сделать вклад в сохранение планеты:\n\n1. **Сократите потребление энергии:**\n   - Используйте энергосберегающие лампочки (LED).\n   - Выключайте электронику, когда она не используется.\n   - Изолируйте дом, чтобы уменьшить затраты на отопление и охлаждение.\n   - Инвестируйте в энергоэффективные бытовые приборы.\n\n2. **Экономия воды:**\n   - Устанавливайте водосберегающие насадки на краны и душевые.\n   - Собирайте дождевую воду для полива растений.\n   - Ремонтируйте протекающие краны и сантехнику.\n\n3. **Устойчивый транспорт:**\n   - Используйте общественный транспорт, велосипед или ходите пешком, когда это возможно.\n   - Рассмотрите вариант покупки электромобиля или гибридного автомобиля.\n   - Сократите количество поездок на автомобиле, комбинируя дела в одном месте.\n\n4. **Сокращение отходов:**\n   - Практикуйте раздельный сбор мусора и переработку.\n   - Используйте многоразовые сумки для покупок вместо одноразовых пластиковых.\n   - Отдавайте предпочтение товарам без упаковки или в экологичной упаковке.\n\n5. **Экологичное потребление:**\n   - Покупайте товары местного производства, чтобы снизить углеродный след от транспортировки.\n   - Выбирайте продукты с минимальной упаковкой.\n   - Поддерживайте компании, придерживающиеся принципов устойчивого развития.\n\n6. **Рациональное питание:**\n   - Увеличьте потребление растительной пищи и сократите потребление мяса, особенно говядины и свинины.\n   - Покупайте органические и сезонные продукты.\n   - Сократите количество пищевых отходов, планируя меню и храня продукты правильно.\n\n7. **Использование возобновляемых источников энергии:**\n   - Рассмотрите установку солнечных панелей или других возобновляемых источников энергии для вашего дома.\n   - Поддерживайте компании, инвестирующие в зеленую энергетику.\n\n8. **Уход за природой:**\n   - Участвуйте в местных экологических акциях, например, по очистке парков и пляжей.\n   - Сажайте деревья и создавайте сады на своем участке или в сообществе.\n   - Поддерживайте биоразнообразие, создавая среду обитания для местных видов.\n\n9. **Экологическое образование и осведомленность:**\n   - Обучайте себя и окружающих принципам устойчивого развития.\n   - Делитесь знаниями о экологичных практиках с друзьями и семьей.\n   - Поддерживайте эколого-ориентированные инициативы и организации.\n\n10. **Ответственное использование техники:**\n    - Долгосрочно используйте технику, продлевая ее срок службы через ремонт и обслуживание.\n    - Отдавайте старую технику на переработку или в пункты приема вторсырья.\n\n11. **Минимализм:**\n    - Придерживайтесь принципов минимализма, покупая только необходимые вещи.\n    - Избегайте излишнего потребления и сосредоточьтесь на качестве, а не на количестве.\n\n12. **Создание устойчивого рабочего места:**\n    - Используйте электронные документы вместо бумажных.\n    - Внедряйте программы сортировки отходов на рабочем месте.\n    - Продвигайте сотрудников использовать экологичный транспорт.\n\nКаждое из этих действий может показаться небольшим, но в совокупности они значительно способствуют снижению негативного воздействия на окружающую среду. Начните с нескольких простых шагов и постепенно внедряйте новые привычки в свою повседневную жизнь.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Принципы **SOLID** представляют собой набор пяти основных принципов объектно-ориентированного программирования и дизайна программного обеспечения. Эти принципы были популяризированы Робертом Мартином (также известным как «Дядя Боб») и помогают разработчикам создавать более читаемый, поддерживаемый и масштабируемый код. Аббревиатура **SOLID** расшифровывается как:\n\n1. **S** – **Single Responsibility Principle (Принцип единственной ответственности)**\n2. **O** – **Open/Closed Principle (Принцип открытости/закрытости)**\n3. **L** – **Liskov Substitution Principle (Принцип подстановки Лисков)**\n4. **I** – **Interface Segregation Principle (Принцип разделения интерфейса)**\n5. **D** – **Dependency Inversion Principle (Принцип инверсии зависимостей)**\n\nДавайте рассмотрим каждый из этих принципов подробно.\n\n---\n\n### 1. Принцип единственной ответственности (Single Responsibility Principle, SRP)\n\n**Суть:** Класс должен иметь **только одну ответственность** или, иначе говоря, выполняет **только одну задачу**. Это означает, что вся функциональность класса должна быть направлена на выполнение одной конкретной задачи.\n\n**Преимущества:**\n- Улучшенная читаемость и поддерживаемость кода.\n- Упрощение тестирования.\n- Снижение связности между компонентами системы.\n\n**Пример:**\nПредположим, есть класс `Report`, который отвечает за генерацию отчета и его сохранение в файл.\n\n```java\npublic class Report {\n    public String generate() {\n        // Логика генерации отчета\n    }\n\n    public void saveToFile(String data) {\n        // Логика сохранения в файл\n    }\n}\n```\n\nВ соответствии с SRP, эти ответственности следует разделить:\n\n```java\npublic class ReportGenerator {\n    public String generate() {\n        // Логика генерации отчета\n    }\n}\n\npublic class FileSaver {\n    public void save(String data) {\n        // Логика сохранения в файл\n    }\n}\n```\n\n---\n\n### 2. Принцип открытости/закрытости (Open/Closed Principle, OCP)\n\n**Суть:** **Классы должны быть открыты для расширения, но закрыты для модификации.** Это означает, что поведение класса можно расширять без изменения его исходного кода.\n\n**Преимущества:**\n- Повышение гибкости системы.\n- Упрощение внедрения новых функциональностей.\n- Снижение риска внесения ошибок при изменении существующего кода.\n\n**Пример:**\nРассмотрим систему, которая рассчитывает скидки для пользователей.\n\n```java\npublic class DiscountCalculator {\n    public double calculateDiscount(User user) {\n        if (user.getType().equals(\"VIP\")) {\n            return 0.2;\n        } else {\n            return 0.05;\n        }\n    }\n}\n```\n\nЕсли требуется добавить новый тип пользователя, придётся изменять класс `DiscountCalculator`. Вместо этого можно использовать наследование и полиморфизм:\n\n```java\npublic abstract class DiscountCalculator {\n    public abstract double calculateDiscount(User user);\n}\n\npublic class VIPDiscountCalculator extends DiscountCalculator {\n    @Override\n    public double calculateDiscount(User user) {\n        return 0.2;\n    }\n}\n\npublic class RegularDiscountCalculator extends DiscountCalculator {\n    @Override\n    public double calculateDiscount(User user) {\n        return 0.05;\n    }\n}\n```\n\nТеперь добавление нового типа скидки не требует изменения существующих классов.\n\n---\n\n### 3. Принцип подстановки Лисков (Liskov Substitution Principle, LSP)\n\n**Суть:** **Объекты подклассов должны корректно заменять объекты суперклассов** без нарушения функциональности программы. То есть, если класс `S` является подтипом класса `T`, то объекты типа `T` должны быть заменяемы объектами типа `S` без влияния на корректность работы программы.\n\n**Преимущества:**\n- Обеспечение корректного поведения при использовании полиморфизма.\n- Улучшение гибкости и расширяемости кода.\n\n**Пример:**\nПредположим, есть базовый класс `Bird` и подкласс `Penguin`.\n\n```java\npublic class Bird {\n    public void fly() {\n        // Логика полёта\n    }\n}\n\npublic class Penguin extends Bird {\n    @Override\n    public void fly() {\n        throw new UnsupportedOperationException(\"Пингвины не летают\");\n    }\n}\n```\n\nВ данном случае, `Penguin` нарушает принцип LSP, так как не может корректно реализовать метод `fly`. Правильным решением будет пересмотреть иерархию классов:\n\n```java\npublic abstract class Bird {\n    // Общие характеристики птиц\n}\n\npublic interface Flyable {\n    void fly();\n}\n\npublic class Sparrow extends Bird implements Flyable {\n    @Override\n    public void fly() {\n        // Логика полёта\n    }\n}\n\npublic class Penguin extends Bird {\n    // Логика для пингвинов без полёта\n}\n```\n\nТеперь `Penguin` не наследует метод `fly`, что соответствует его реальному поведению.\n\n---\n\n### 4. Принцип разделения интерфейса (Interface Segregation Principle, ISP)\n\n**Суть:** **Клиенты не должны зависеть от интерфейсов, которые они не используют.** Это означает, что интерфейсы должны быть специализированными и содержать только те методы, которые необходимы для конкретных клиентов.\n\n**Преимущества:**\n- Уменьшение связности между компонентами.\n- Повышение гибкости и удобства использования интерфейсов.\n- Улучшение читабельности кода.\n\n**Пример:**\nРассмотрим интерфейс `Worker`, который содержит методы `work()` и `eat()`.\n\n```java\npublic interface Worker {\n    void work();\n    void eat();\n}\n```\n\nЕсли создать класс `Robot`, реализующий интерфейс `Worker`, то он будет вынужден реализовывать метод `eat()`, который ему не нужен.\n\nПравильнее разделить интерфейс:\n\n```java\npublic interface Workable {\n    void work();\n}\n\npublic interface Eatable {\n    void eat();\n}\n\npublic class Human implements Workable, Eatable {\n    @Override\n    public void work() {\n        // Работа\n    }\n\n    @Override\n    public void eat() {\n        // Еда\n    }\n}\n\npublic class Robot implements Workable {\n    @Override\n    public void work() {\n        // Работа\n    }\n}\n```\n\n---\n\n### 5. Принцип инверсии зависимостей (Dependency Inversion Principle, DIP)\n\n**Суть:** **Высокоуровневые модули не должны зависеть от низкоуровневых модулей. Оба должны зависеть от абстракций.** Кроме того, **абстракции не должны зависеть от деталей, а детали — от абстракций**.\n\n**Преимущества:**\n- Снижение связности между компонентами системы.\n- Упрощение тестирования и внедрения зависимостей.\n- Повышение гибкости и масштабируемости системы.\n\n**Пример:**\nРассмотрим высокоуровневый класс `OrderService`, который напрямую зависит от низкоуровневого класса `EmailService`.\n\n```java\npublic class OrderService {\n    private EmailService emailService = new EmailService();\n\n    public void placeOrder(Order order) {\n        // Логика размещения заказа\n        emailService.sendEmail(order);\n    }\n}\n```\n\nЭто нарушает DIP. Правильнее внедрять зависимость через интерфейс:\n\n```java\npublic interface NotificationService {\n    void send(Order order);\n}\n\npublic class EmailService implements NotificationService {\n    @Override\n    public void send(Order order) {\n        // Отправка email\n    }\n}\n\npublic class OrderService {\n    private NotificationService notificationService;\n\n    public OrderService(NotificationService notificationService) {\n        this.notificationService = notificationService;\n    }\n\n    public void placeOrder(Order order) {\n        // Логика размещения заказа\n        notificationService.send(order);\n    }\n}\n```\n\nТеперь `OrderService` зависит от абстракции `NotificationService`, а не от конкретной реализации `EmailService`. Это позволяет легко подменять различные способы уведомления, например, SMS или push-уведомления.\n\n---\n\n**Заключение:**\n\nПринципы SOLID играют ключевую роль в создании качественного и устойчивого кода. Их соблюдение способствует лучшей организации системы, упрощает поддержание и расширение функциональности, а также повышает общую надежность программного обеспечения. Рекомендуется разработчикам интегрировать эти принципы в свои практики программирования для достижения наилучших результатов.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Составление профессионального резюме — важный шаг на пути к успешному трудоустройству. Ниже приведены основные рекомендации и структура, которые помогут создать эффективное резюме.\n\n### 1. **Выбор формата резюме**\n\nСуществует несколько основных форматов резюме:\n\n- **Хронологическое**: перечисляет опыт работы в обратном хронологическом порядке. Подходит для кандидатов с устойчивой трудовой историей.\n- **Функциональное**: акцентирует внимание на навыках и достижениях, а не на прошлом опыте работы. Обычно подходит для тех, кто меняет сферу деятельности или имеет пробелы в трудовой деятельности.\n- **Комбинированное**: сочетает элементы хронологического и функционального форматов. Подходит для большинства кандидатов.\n\n### 2. **Структура резюме**\n\n1. **Контактная информация**\n   - Полное имя\n   - Телефон\n   - Электронная почта\n   - Профиль в LinkedIn или другие профессиональные сети (по желанию)\n   - Адрес (необязательно, можно указать город)\n\n2. **Цель или профессиональный профиль**\n   - Краткое заявление (2-3 предложения) о ваших карьерных целях и том, что вы можете предложить работодателю.\n   - Например: *\"Опытный маркетолог с 5-летним стажем в цифровых стратегиях, готовый внести вклад в рост вашей компании.\"*\n\n3. **Опыт работы**\n   - Название должности\n   - Название компании, город\n   - Период работы (месяц и год начала и окончания)\n   - Краткое описание обязанностей и достижений (используйте маркеры для удобства чтения)\n   - Старайтесь использовать активные глаголы и количественные показатели (например, \"увеличил продажи на 20% за год\").\n\n4. **Образование**\n   - Название учебного заведения, город\n   - Степень, специальность\n   - Годы обучения\n   - Дополнительные достижения (например, стипендии, награды)\n\n5. **Навыки**\n   - Перечислите ключевые навыки, релевантные для позиции, на которую вы претендуете (например, знание языков программирования, владение иностранными языками, коммуникационные навыки).\n\n6. **Дополнительная информация** (по необходимости)\n   - Сертификаты и курсы\n   - Публикации\n   - Волонтерский опыт\n   - Участие в проектах\n\n7. **Рекомендации** (по запросу)\n   - Обычно указывают, что рекомендации предоставляются по запросу.\n\n### 3. **Дополнительные рекомендации**\n\n- **Краткость и ясность**: Рекомендуется, чтобы резюме занимало не более одной-двух страниц.\n- **Адаптация под вакансию**: Подчеркните те навыки и опыт, которые наиболее релевантны для конкретной позиции.\n- **Использование ключевых слов**: Ознакомьтесь с описанием вакансии и включите в резюме соответствующие ключевые слова, чтобы пройти автоматические системы отбора.\n- **Отсутствие ошибок**: Проверьте резюме на наличие грамматических и орфографических ошибок. Попросите кого-то еще его прочитать.\n- **Дизайн и форматирование**: Резюме должно выглядеть аккуратно и профессионально. Используйте читабельные шрифты, разделы и отступы для удобства восприятия.\n- **Искренность**: Не преувеличивайте свои достижения и опыт. Ложная информация может негативно сказаться на вашей репутации.\n\n### 4. **Пример структуры резюме**\n\n```\nИванов Иван Иванович\nТелефон: +7 (999) 123-45-67\nEmail: ivanov@example.com\nLinkedIn: linkedin.com/in/ivanov\n\nПРОФЕССИОНАЛЬНЫЙ ПРОФИЛЬ\nМаркетолог с 5-летним опытом разработки и реализации цифровых стратегий, направленных на увеличение продаж и повышение узнаваемости бренда.\n\nОПЫТ РАБОТЫ\nМаркетолог, ООО «Рекламные Решения», Москва\nИюль 2019 — настоящее время\n- Разработал и внедрил контент-стратегию, что привело к увеличению трафика на сайт на 30%.\n- Управлял рекламными кампаниями в социальных сетях с бюджетом $50,000.\n- Анализировал рыночные тенденции и конкурентоспособность, предлагая улучшения.\n\nАБИТУД\nБакалавр маркетинга, Московский государственный университет, Москва\nСентябрь 2014 — Июнь 2018\n\nНАВЫКИ\n- Цифровой маркетинг\n- SEO/SEM\n- Аналитика данных (Google Analytics)\n- Управление проектами\n- Владение английским языком (свободно)\n\nСЕРТИФИКАТЫ\n- Сертифицированный специалист по контекстной рекламе, Google (2020)\n```\n\n### 5. **Заключительные советы**\n\n- **Обновляйте регулярно**: Убедитесь, что ваше резюме всегда актуально и отражает ваш текущий опыт и достижения.\n- **Используйте активные глаголы**: Такие как \"разработал\", \"управлял\", \"увеличил\", \"оптимизировал\".\n- **Персонализируйте сопроводительное письмо**: Вместе с резюме часто требуется отправить сопроводительное письмо, которое должно быть адаптировано под конкретную вакансию.\n\nСледуя этим рекомендациям, вы сможете создать резюме, которое привлечет внимание работодателей и повысит ваши шансы на успешное трудоустройство.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Внедрение практик DevOps в компании может значительно повысить эффективность разработки и эксплуатации программных продуктов. Вот несколько ключевых советов для успешной реализации DevOps:\n\n1. **Формирование культуры сотрудничества**\n   - **Снятие барьеров между командами**: Разработчики, операционные сотрудники и другие заинтересованные стороны должны работать как единая команда.\n   - **Общее видение и цели**: Определите общие цели, такие как скорость выпуска продукта, качество и надежность, чтобы все участники стремились к их достижению.\n\n2. **Автоматизация процессов**\n   - **Непрерывная интеграция (CI)**: Автоматизируйте процесс объединения кода из разных веток, чтобы быстро выявлять и исправлять ошибки.\n   - **Непрерывная доставка (CD)**: Автоматизируйте развертывание приложений в различные среды, обеспечивая быстрый и надежный выпуск новых версий.\n\n3. **Использование современных инструментов DevOps**\n   - **Системы контроля версий**: Git, GitLab, GitHub.\n   - **Инструменты автоматизации**: Jenkins, GitLab CI/CD, CircleCI.\n   - **Контейнеризация и оркестрация**: Docker, Kubernetes.\n   - **Инфраструктура как код**: Terraform, Ansible, Puppet, Chef.\n\n4. **Инфраструктура как код (IaC)**\n   - **Управление конфигурацией**: Автоматизируйте создание и управление инфраструктурой с помощью кода, что обеспечивает воспроизводимость и масштабируемость.\n   - **Версионирование инфраструктуры**: Храните конфигурационные файлы в системах контроля версий для отслеживания изменений.\n\n5. **Контейнеризация и оркестрация**\n   - **Использование контейнеров**: Docker позволяет изолировать приложения и их зависимости, облегчая развёртывание.\n   - **Оркестрация контейнеров**: Kubernetes помогает управлять масштабированием, обновлениями и балансировкой нагрузки.\n\n6. **Мониторинг и обратная связь**\n   - **Системы мониторинга**: Внедрите инструменты, такие как Prometheus, Grafana, ELK Stack для отслеживания состояния систем и производительности приложений.\n   - **Сбор метрик и логов**: Анализируйте данные для быстрого выявления и устранения проблем.\n\n7. **Обеспечение безопасности (DevSecOps)**\n   - **Интеграция безопасности в процессы DevOps**: Автоматизируйте проверку безопасности на всех этапах разработки и развертывания.\n   - **Проведение регулярных аудиторов**: Обеспечьте соответствие стандартам безопасности и своевременно исправляйте уязвимости.\n\n8. **Постоянное обучение и развитие**\n   - **Обучение сотрудников**: Организуйте тренинги и семинары по DevOps-инструментам и практикам.\n   - **Обмен знаниями**: Поощряйте обмен опытом внутри команды через регулярные встречи, ретроспективы и документацию.\n\n9. **Постепенное внедрение**\n   - **Начало с пилотных проектов**: Выберите небольшой проект для начала внедрения DevOps, чтобы протестировать процессы и инструменты.\n   - **Масштабирование**: После успешного пилота расширяйте практики DevOps на остальные проекты и команды.\n\n10. **Измерение и улучшение**\n    - **Определение ключевых показателей эффективности (KPI)**: Такие как время развертывания, частота релизов, время восстановления после сбоев.\n    - **Анализ и адаптация**: Регулярно оценивайте результаты и вносите необходимые изменения для оптимизации процессов.\n\nВнедрение DevOps требует времени и усилий, но при правильном подходе оно может привести к значительному улучшению качества продуктов, ускорению процессов разработки и повышению удовлетворенности клиентов.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Искусственный интеллект (ИИ) в медицинской диагностике представляет собой применение современных технологий обработки данных для улучшения и автоматизации процессов диагностики заболеваний. Принципы использования ИИ в этой области базируются на нескольких ключевых компонентах и подходах:\n\n### 1. **Сбор и подготовка данных**\n- **Медицинские данные**: В медицинской диагностике используются различные типы данных, включая электронные медицинские карты, результаты лабораторных исследований, медицинские изображения (рентген, МРТ, КТ), геномные данные и другие.\n- **Аннотирование данных**: Для обучения моделей ИИ необходимы размеченные данные, где экспертами диагностированы и классифицированы случаи заболеваний. Качество и объем этих данных напрямую влияют на эффективность модели.\n- **Предобработка**: Данные очищаются от шума, недостающих значений и аномалий. Процесс может включать нормализацию, масштабирование и другие методы подготовки данных для повышения их пригодности для обучения моделей.\n\n### 2. **Методы и алгоритмы ИИ**\n- **Машинное обучение (Machine Learning)**: Использует алгоритмы, которые обучаются на существующих данных для выявления закономерностей и принятия решений без явного программирования. Примеры включают классификацию заболеваний, прогнозирование развития болезни и т.д.\n- **Глубокое обучение (Deep Learning)**: Ветвь машинного обучения, использующая искусственные нейронные сети с множеством слоев для обработки больших объемов данных, особенно эффективна в анализе медицинских изображений и распознавании сложных паттернов.\n- **Обработка естественного языка (NLP)**: Применяется для анализа неструктурированных текстовых данных, таких как медицинские отчеты, истории болезней и научные статьи.\n\n### 3. **Обучение моделей**\n- **Обучение с учителем (Supervised Learning)**: Модели обучаются на размеченных данных, где каждому примеру соответствует правильный ответ (диагноз). Это наиболее распространенный подход в медицинской диагностике.\n- **Обучение без учителя (Unsupervised Learning)**: Используется для выявления скрытых структур и паттернов в данных без предварительной разметки, что полезно для обнаружения новых типов заболеваний или подгрупп пациентов.\n- **Обучение с подкреплением (Reinforcement Learning)**: Применяется для разработки систем поддержки принятия решений, где модель учится оптимизировать действия на основе обратной связи от среды.\n\n### 4. **Валидация и оценка моделей**\n- **Разделение данных**: Данные делятся на обучающую, валидационную и тестовую выборки для объективной оценки производительности моделей.\n- **Метрики оценки**: Используются такие показатели, как точность (accuracy), полнота (recall), точность (precision), F1-меры и площадь под ROC-кривой (AUC) для оценки эффективности моделей.\n- **Кросс-валидация**: Метод для повышения надежности оценки моделей путем многократного обучения и тестирования на различных подвыборках данных.\n\n### 5. **Интерпретируемость и объяснимость**\n- **Прозрачность моделей**: В медицинской диагностике важно понимать, как и почему модель пришла к определенному заключению. Это необходимо для доверия медицинских специалистов и пациентов.\n- **Методы объяснимого ИИ (Explainable AI)**: Инструменты и методы, позволяющие интерпретировать решения моделей, такие как карты активизации, LIME (Local Interpretable Model-agnostic Explanations) и SHAP (SHapley Additive exPlanations).\n\n### 6. **Интеграция в клинические процессы**\n- **Поддержка принятия решений**: ИИ-системы используются как помощники врачей, предоставляя рекомендации на основе анализа данных, что ускоряет и повышает точность диагностики.\n- **Автоматизация рутинных задач**: Системы ИИ могут автоматизировать процессы, такие как анализ медицинских изображений, что позволяет врачам сосредоточиться на более сложных аспектах ухода за пациентами.\n\n### 7. **Соблюдение нормативных требований и этика**\n- **Регуляторные стандарты**: ИИ-системы в медицине должны соответствовать требованиям органов здравоохранения, таких как FDA, EMA и другие, что включает прохождение клинических испытаний и сертификацию.\n- **Этические аспекты**: Включают защиту персональных данных пациентов, обеспечение непредвзятости моделей и ответственность за принятие решений на основе ИИ.\n\n### 8. **Преимущества и вызовы**\n- **Преимущества**:\n  - Повышение точности и скорости диагностики.\n  - Возможность обработки больших объемов данных.\n  - Поддержка врачей в принятии решений.\n- **Вызовы**:\n  - Качество и доступность медицинских данных.\n  - Интерпретируемость моделей.\n  - Интеграция в существующие клинические процессы.\n  - Юридические и этические вопросы.\n\n### Примеры применения ИИ в медицинской диагностике\n- **Радиология**: Автоматический анализ рентгеновских снимков, МРТ и КТ для выявления патологий, таких как опухоли или переломы.\n- **Кардиология**: Анализ электрокардиограмм (ЭКГ) для обнаружения аритмий и других заболеваний сердца.\n- **Онкология**: Выявление и классификация различных типов рака на основе медицинских изображений и геномных данных.\n- **Патология**: Автоматизированный анализ образцов тканей для диагностики заболеваний на клеточном уровне.\n\n### Заключение\nИспользование искусственного интеллекта в медицинской диагностике представляет собой перспективное направление, способное значительно улучшить качество и доступность медицинских услуг. Однако для успешной реализации этих технологий необходимо преодолеть ряд технических, этических и регуляторных барьеров, а также обеспечить тесное взаимодействие между разработчиками ИИ и медицинскими специалистами.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Микропластик, представляющий собой пластиковые частицы размером менее 5 мм, играет значительную роль в загрязнении океанов. Его влияние проявляется в нескольких ключевых аспектах:\n\n1. **Источники микропластика**:\n   - **Первичные микропластики**: Производятся специально для использования в косметических средствах, чистящих средствах и текстильной промышленности (например, микросферы в скрабах или полиэстеровые волокна из одежды).\n   - **Вторичные микропластики**: Возникают в результате разложения более крупных пластиковых изделий под воздействием солнечного света, механического трения и других факторов окружающей среды.\n\n2. **Распространение и накопление**:\n   - Микропластик широко распространен в различных морских экосистемах, начиная от поверхностных вод до глубоководных слоев.\n   - Он накапливается в пищевых цепях, поскольку многие морские организмы, включая планктон, рыб и моллюсков, случайно потребляют микропластик, принимая его за пищу.\n\n3. **Экологическое воздействие**:\n   - **Вред для морских организмов**: Микропластик может вызывать физические повреждения, заторы пищеварительной системы и снижение потребления питательных веществ у морских животных.\n   - **Токсичность**: Пластиковые частицы часто содержат опасные химические вещества, такие как фталаты и бисфенол А, которые могут выделяться в окружающую среду и накапливаться в организмах, вызывая гормональные нарушения и другие проблемы со здоровьем.\n\n4. **Воздействие на человека**:\n   - Поскольку микропластик попадает в пищевые цепи, он может завершить свой путь на тарелках людей через потребление морепродуктов.\n   - Долгосрочные последствия для здоровья человека пока изучаются, но существует обеспокоенность возможным воздействием накопленных токсинов.\n\n5. **Трудности в очистке и предотвращении**:\n   - Из-за небольшого размера микропластика традиционные методы очистки водоемов оказываются неэффективными.\n   - Предотвращение дальнейшего загрязнения требует уменьшения использования пластика, улучшения систем сбора и переработки отходов, а также разработки альтернативных материалов.\n\nВ целом, микропластик представляет собой серьезную угрозу для морской экосистемы и здоровья человека, требуя комплексных усилий для снижения его распространения и минимизации негативных последствий.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Озоновый слой Земли играет критически важную роль в защите жизни на нашей планете, поглощая основную часть вредного ультрафиолетового (УФ) излучения Солнца. В последние десятилетия наблюдаются значительные изменения в состоянии этого слоя, связанные как с антропогенными, так и с естественными факторами.\n\n### Изменения в озоновом слое\n\n1. **Историческое истощение**: В 1980-х годах учёные обнаружили озоновую дырку над Антарктидой, что было связано с выбросами хлорфторуглеродов (CFCs) и других озоноразрушающих веществ. Эти химические соединения высвобождают атомы хлора и брома в стратосфере, которые катализируют разрушение озона (O₃).\n\n2. **Международные меры**: В ответ на эту проблему в 1987 году был подписан Монреальский протокол, который запрещает производство и использование многих озоноразрушающих веществ. Благодаря этим мерам наблюдается постепенное восстановление озонового слоя.\n\n3. **Текущая динамика**:\n    - **Восстановление**: Согласно последним исследованиям по состоянию на 2023 год, озоновый слой демонстрирует признаки восстановления. Ожидается, что при соблюдении Монреальского протокола озоновый слой полностью восстановится к середине XXI века.\n    - **Озоновая дыра**: Несмотря на общие положительные тенденции, озоновые дыры всё ещё регулярно формируются каждую весну над Антарктидой и в меньшей степени над Арктикой. Однако их размеры и интенсивность постепенно уменьшаются благодаря сокращению выбросов озоноразрушающих веществ.\n    - **Воздействие новых химических веществ**: Некоторые новые промышленные химикаты, такие как гидрофторуглероды (HFCs), не разрушают озон, но являются мощными парниковыми газами, усугубляющими проблему глобального потепления. Это требует дальнейшего регулирования и поиска экологически безопасных альтернатив.\n\n### Почему это важно\n\n1. **Защита от ультрафиолетового излучения**: Озоновый слой эффективно поглощает большую часть УФ-С и УФ-В излучения. Повышение уровня УФ-излучения на поверхности Земли может привести к увеличению случаев рака кожи, катаракты и других заболеваний у людей, а также негативно сказаться на экосистемах, включая снижение численности планктонных организмов, что влияет на всю пищевую цепочку океанов.\n\n2. **Экологические последствия**: Изменения в озоновом слое могут привести к стрессу для растений, повышенной уязвимости сельскохозяйственных культур и нарушению баланса экосистем. Увеличение УФ-излучения также влияет на морские экосистемы, включая коралловые рифы, которые являются важными биологическими резервуарами.\n\n3. **Экономические затраты**: Заболевания, связанные с повышенным УФ-излучением, приводят к увеличению затрат на здравоохранение. Кроме того, повреждения урожая и ухудшение состояния экосистем могут негативно сказываться на экономике.\n\n### Будущие перспективы\n\nПродолжение соблюдения международных соглашений, таких как Монреальский протокол, а также разработка новых технологий, не влияющих негативно на озоновый слой, являются ключевыми факторами для его полного восстановления. Кроме того, интеграция усилий по борьбе с изменением климата и охраной озонового слоя позволит обеспечить устойчивое будущее для планеты.\n\nВ заключение, изменения в озоновом слое Земли представляют собой важный индикатор состояния нашей планеты и демонстрируют, как глобальные усилия по регулированию выбросов могут привести к положительным экологическим изменениям. Однако постоянный мониторинг и адаптация мер остаются необходимыми для полного восстановления и сохранения этой жизненно важной защитной оболочки нашей планеты.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор подходящей интегрированной среды разработки (IDE) для Python зависит от ваших потребностей, уровня опыта и предпочтений. Вот несколько советов, которые помогут сделать осознанный выбор:\n\n### 1. Определите свои требования\n\n- **Уровень опыта**: Новичкам может подойти более простая и интуитивно понятная среда, тогда как опытным разработчикам могут потребоваться расширенные функции.\n- **Тип проектов**: Разработка веб-приложений, научных вычислений, автоматизация или работа с данными могут требовать разных инструментов и расширений.\n- **Платформенность**: Убедитесь, что IDE поддерживает вашу операционную систему (Windows, macOS, Linux).\n\n### 2. Рассмотрите популярные IDE для Python\n\n#### **PyCharm**\n- **Плюсы**:\n  - Мощные инструменты для отладки и тестирования.\n  - Поддержка фреймворков Django, Flask и других.\n  - Интеллектуальное автодополнение кода.\n  - Система управления версиями.\n- **Минусы**:\n  - Требовательность к ресурсам.\n  - Платная версия (Professional) необходима для некоторых функций.\n\n#### **Visual Studio Code (VS Code)**\n- **Плюсы**:\n  - Легковесный и быстрый.\n  - Большое количество расширений, включая популярное расширение Python от Microsoft.\n  - Интеграция с Git и другими системами контроля версий.\n  - Кастомизация под свои нужды.\n- **Минусы**:\n  - Может требовать настройки под определённые задачи.\n  - Не все функции из коробки, требуется установка расширений.\n\n#### **Spyder**\n- **Плюсы**:\n  - Оптимизирован для научных вычислений и анализа данных.\n  - Интегрированный IPython-консоль.\n  - Поддержка библиотек NumPy, SciPy, Matplotlib.\n- **Минусы**:\n  - Менее универсален для общих проектов.\n  - Интерфейс может показаться устаревшим.\n\n#### **Jupyter Notebook**\n- **Плюсы**:\n  - Идеален для интерактивного анализа данных и машинного обучения.\n  - Возможность визуализации прямо в документе.\n  - Поддержка Markdown для документации.\n- **Минусы**:\n  - Не подходит для разработки полноценных приложений.\n  - Ограниченные возможности по сравнению с полноценными IDE.\n\n#### **Atom**\n- **Плюсы**:\n  - Гибкость и высокая настраиваемость.\n  - Хорошая поддержка плагинов.\n  - Интеграция с GitHub.\n- **Минусы**:\n  - Может работать медленнее по сравнению с другими редакторами.\n  - Требует установки дополнительных пакетов для полной функциональности Python.\n\n### 3. Оцените функциональность и удобство\n\n- **Отладка**: Наличие встроенного отладчика позволяет выявлять и исправлять ошибки эффективно.\n- **Автодополнение и подсветка синтаксиса**: Улучшают скорость написания кода и снижают вероятность синтаксических ошибок.\n- **Интеграция с системами контроля версий**: Полезно для управления изменениями в проектах.\n- **Поддержка виртуальных окружений**: Важно для изоляции зависимостей проектов.\n- **Плагины и расширения**: Способность расширять функциональность IDE под конкретные задачи.\n\n### 4. Попробуйте несколько вариантов\n\nСамый лучший способ выбрать подходящую IDE — попробовать несколько популярных вариантов и оценить, какой из них наиболее соответствует вашим потребностям и привычкам. Многие IDE имеют бесплатные версии или пробные периоды.\n\n### 5. Сообщество и поддержка\n\nIDE с большим сообществом обеспечивают доступ к многочисленным ресурсам, таким как документация, учебные материалы и форумы поддержки. Это может существенно помочь, особенно если вы только начинаете.\n\n### Итог\n\nНет универсального ответа на вопрос, какая IDE лучше для Python. Ваш выбор должен основываться на специфических требованиях вашего проекта, личных предпочтениях и удобстве работы. Популярные варианты, такие как **PyCharm** и **VS Code**, часто рекомендуются из-за их богатого функционала и гибкости, но не стоит исключать и другие среды, которые могут лучше подойти под ваши задачи.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Искусственный интеллект (ИИ) играет всё возрастающую роль в медицинской диагностике, улучшая точность, скорость и эффективность диагностики заболеваний. Основные принципы применения ИИ в медицинской диагностике включают следующие аспекты:\n\n### 1. Машинное обучение и глубинное обучение\n- **Машинное обучение (Machine Learning, ML):** Подразумевает использование алгоритмов, которые обучаются на исторических данных для выявления закономерностей и принятия решений без явного программирования.\n- **Глубинное обучение (Deep Learning, DL):** Подвид машинного обучения, использующий нейронные сети с множеством слоев для обработки сложных данных, таких как медицинские изображения. Глубинное обучение особенно эффективно в распознавании образов и классификации.\n\n### 2. Обработка и анализ медицинских данных\n- **Медицинские изображения:** ИИ применяется для анализа рентгеновских снимков, МРТ, КТ, УЗИ и других видов изображений. Алгоритмы могут выявлять аномалии, такие как опухоли, переломы или заболевания органов, с высокой точностью.\n- **Электронные медицинские записи (ЭМР):** ИИ обрабатывает большие объемы текстовых данных для выявления паттернов, прогнозирования заболеваний и поддержки принятия клинических решений.\n\n### 3. Распознавание образов и паттернов\nИИ использует алгоритмы распознавания образов для идентификации специфических признаков заболеваний. Например, в дерматологии ИИ может анализировать фотографии кожных поражений для диагностики кожных заболеваний, включая рак кожи.\n\n### 4. Прогнозная аналитика\nИИ помогает предсказывать развитие заболеваний на основе анализа текущих данных пациента и исторических данных. Это позволяет раннее вмешательство и персонализированное лечение.\n\n### 5. Обработка естественного языка (Natural Language Processing, NLP)\nТехнологии NLP позволяют ИИ интерпретировать и анализировать текстовую информацию из медицинских записей, научных публикаций и других источников, что способствует улучшению диагностики и исследованиям.\n\n### 6. Интеграция с медицинскими системами\nИИ-инструменты интегрируются с существующими медицинскими системами, такими как системы управления пациентами, лабораторные информационные системы и радиологические информационные системы, обеспечивая бесшовный доступ к данным и поддержку клинических решений.\n\n### Применение ИИ в различных областях диагностики:\n- **Радиология:** Автоматический анализ изображений для обнаружения опухолей, переломов, аномалий сосудов и других патологий.\n- **Кардиология:** Оценка ЭКГ, эхокардиограмм и других тестов для диагностики сердечных заболеваний.\n- **Онкология:** Выявление и классификация раковых клеток, определение стадий заболевания.\n- **Офтальмология:** Диагностика заболеваний глаз, таких как диабетическая ретинопатия или глаукома, через анализ изображений сетчатки.\n- **Патология:** Автоматический анализ образцов тканей для обнаружения рака и других заболеваний.\n\n### Преимущества использования ИИ в медицинской диагностике:\n- **Повышение точности диагностики:** Снижение количества ошибок и улучшение раннего обнаружения заболеваний.\n- **Скорость анализа данных:** Быстрая обработка больших объемов информации, что сокращает время ожидания результатов.\n- **Поддержка врачей:** Предоставление дополнительных данных и рекомендаций для принятия обоснованных клинических решений.\n- **Доступность:** Улучшение доступа к качественной диагностике в удаленных или недостаточно обеспеченных медицинских учреждениях.\n\n### Вызовы и ограничения:\n- **Качество данных:** Необходимость наличия больших, чистых и репрезентативных наборов данных для обучения моделей ИИ.\n- **Интерпретируемость:** Многие модели ИИ, особенно глубинные нейронные сети, являются \"черными ящиками\", что затрудняет понимание механизмов принятия решений.\n- **Этические вопросы:** Конфиденциальность данных пациентов, согласие на использование данных и потенциальные предвзятости в алгоритмах.\n- **Регулирование и стандартизация:** Необходимость разработки стандартов и нормативных актов для безопасного и эффективного использования ИИ в медицине.\n- **Взаимодействие с медицинскими специалистами:** Обучение врачей и медицинского персонала работе с ИИ-системами и интеграция их в клинические процессы.\n\n### Заключение\nПрименение искусственного интеллекта в медицинской диагностике предоставляет значительные возможности для улучшения качества и доступности медицинских услуг. Однако для достижения полной эффективности необходимо преодолеть технические, этические и регуляторные вызовы, обеспечивая при этом тесное сотрудничество между разработчиками технологий и медицинскими специалистами.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**REST API (Representational State Transfer Application Programming Interface)** — это архитектурный стиль для создания веб-сервисов, который использует стандартные возможности протокола HTTP. Основные принципы работы с REST API включают следующие аспекты:\n\n1. **Клиент-Серверная Архитектура:**\n   - **Разделение ответственности:** Клиент (например, браузер или мобильное приложение) отвечает за пользовательский интерфейс и пользовательский опыт, тогда как сервер обрабатывает данные и бизнес-логику.\n   - **Независимость:** Изменения на клиентской или серверной стороне минимально влияют друг на друга, обеспечивая легкую масштабируемость и развитие.\n\n2. **Беспорядочная (Stateless) Взаимодействие:**\n   - **Отсутствие состояния:** Каждый запрос от клиента к серверу должен содержать всю необходимую информацию для его обработки. Сервер не хранит информацию о предыдущих запросах.\n   - **Упрощение масштабирования:** Поскольку серверы не хранят состояние клиента, их легче масштабировать горизонтально.\n\n3. **Унифицированный Интерфейс:**\n   - **Использование стандартных HTTP-методов:**\n     - **GET:** Получение ресурса.\n     - **POST:** Создание нового ресурса.\n     - **PUT:** Полное обновление существующего ресурса.\n     - **PATCH:** Частичное обновление ресурса.\n     - **DELETE:** Удаление ресурса.\n   - **Идентификация ресурсов через URI:** Каждый ресурс идентифицируется уникальным URI (Uniform Resource Identifier).\n\n4. **Работа с Ресурсами и Представлениями:**\n   - **Ресурсы:** Абстрактные сущности, такие как пользователи, заказы, товары и т.д.\n   - **Представления:** Форматы данных, через которые ресурсы передаются клиенту, обычно это JSON или XML.\n\n5. **Безсерверные Сообщения (HATEOAS - Hypermedia As The Engine Of Application State):**\n   - **Навигация через гиперссылки:** Ответы сервера содержат ссылки на связанные ресурсы, что позволяет клиенту динамически взаимодействовать с API без предварительного знания его структуры.\n\n6. **Кэширование:**\n   - **Оптимизация производительности:** Сервер может указывать, какие ответы можно кэшировать, а какие нет, что снижает нагрузку и ускоряет взаимодействие.\n\n7. **Слои Системы:**\n   - **Многослойная архитектура:** Клиент не знает, через какие промежуточные серверы проходят запросы, что позволяет добавлять балансировщики нагрузки, прокси-серверы и другие компоненты без изменения клиентской части.\n\n8. **Типизированность Контента:**\n   - **Использование заголовков HTTP:** Определение типов содержимого (`Content-Type`) и форматов данных обеспечивает корректную обработку информации как клиентом, так и сервером.\n\n9. **Безопасность:**\n   - **Аутентификация и авторизация:** Использование стандартных протоколов безопасности, таких как OAuth 2.0, для защиты доступа к ресурсам.\n   - **Шифрование данных:** Применение HTTPS для обеспечения безопасности передачи данных.\n\n**Пример Запроса и Ответа:**\n\n*Запрос:*\n```\nGET https://api.example.com/users/123\nAccept: application/json\n```\n\n*Ответ:*\n```json\n{\n  \"id\": 123,\n  \"name\": \"Иван Иванов\",\n  \"email\": \"ivan@example.com\",\n  \"links\": {\n    \"orders\": \"https://api.example.com/users/123/orders\"\n  }\n}\n```\n\nВ данном примере клиент запрашивает информацию о пользователе с ID 123. Сервер отвечает в формате JSON, предоставляя данные пользователя и гиперссылку на связанные заказы.\n\n**Заключение:**\nРабота с REST API основывается на четких и стандартизированных принципах, которые обеспечивают гибкость, масштабируемость и совместимость веб-сервисов. Понимание этих принципов позволяет эффективно разрабатывать и интегрировать приложения, взаимодействующие с различными API.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация семейного бюджета — важный шаг к финансовой стабильности и достижению общих целей. Вот несколько советов, которые помогут эффективно управлять семейными финансами:\n\n1. **Анализ доходов и расходов**\n   - **Соберите информацию** о всех источниках дохода семьи.\n   - **Запишите все расходы**, включая регулярные платежи (жилье, транспорт, еда) и непредвиденные траты.\n   - **Категоризируйте расходы** для лучшего понимания, на что уходит больше всего денег.\n\n2. **Составьте бюджет**\n   - **Определите приоритеты**: распределите средства на обязательные нужды, сбережения и развлечения.\n   - **Установите лимиты** для каждой категории расходов, чтобы избежать перерасхода.\n   - **Используйте правило 50/30/20**: 50% на нужды, 30% на желания и 20% на сбережения или погашение долгов.\n\n3. **Установите финансовые цели**\n   - **Краткосрочные цели**: покупка техники, отпуск, обучение.\n   - **Долгосрочные цели**: покупка жилья, образование детей, пенсия.\n   - **Разработайте план** достижения каждой цели, определив необходимые суммы и сроки.\n\n4. **Сократите ненужные расходы**\n   - **Пересмотрите подписки и членства**, которыми вы не пользуетесь.\n   - **Ищите более дешевые альтернативы** для товаров и услуг.\n   - **Готовьте дома**, вместо частых походов в рестораны.\n\n5. **Создайте резервный фонд**\n   - **Откладывайте 3-6 месяцев дохода** на случай непредвиденных ситуаций, таких как потеря работы или медицинские расходы.\n   - **Храните резерв** на легко доступном счете.\n\n6. **Управляйте долгами**\n   - **Приоритизируйте погашение долгов** с высокими процентными ставками.\n   - **Избегайте новых долгов**, если это возможно.\n   - **Рефинансируйте кредиты**, чтобы снизить процентные ставки.\n\n7. **Вовлекайте всех членов семьи**\n   - **Обсуждайте бюджет и цели** с партнёром и детьми.\n   - **Разделите обязанности** по управлению финансами.\n   - **Обучайте детей** финансовой грамотности с раннего возраста.\n\n8. **Используйте инструменты для управления бюджетом**\n   - **Приложения**: Mint, YNAB (You Need A Budget), CoinKeeper и другие.\n   - **Таблицы**: Google Sheets или Excel для индивидуального подхода.\n   - **Банковские сервисы**: многие банки предлагают встроенные инструменты для отслеживания расходов.\n\n9. **Регулярно пересматривайте и корректируйте бюджет**\n   - **Проводите ежемесячные обзоры** бюджета, чтобы оценить прогресс.\n   - **Вносите изменения** в случае изменения доходов или расходов.\n   - **Будьте гибкими**, чтобы адаптироваться к жизненным изменениям.\n\n10. **Инвестируйте в финансовое образование**\n    - **Читайте книги и статьи** по управлению финансами.\n    - **Посещайте семинары и вебинары**, посвященные финансовому планированию.\n    - **Консультируйтесь с финансовыми консультантами**, если требуется профессиональная помощь.\n\nСледуя этим рекомендациям, вы сможете создать устойчивую и эффективную систему управления семейными финансами, которая поможет достичь финансовых целей и обеспечить стабильность вашей семьи.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация системы мониторинга серверов и сервисов является критически важной задачей для обеспечения стабильной и бесперебойной работы IT-инфраструктуры. Ниже приведён пошаговый план по созданию эффективной системы мониторинга:\n\n### 1. Определение целей и требований мониторинга\n\n**Цели мониторинга могут включать:**\n- Обеспечение высокой доступности сервисов.\n- Быстрое обнаружение и устранение сбоев.\n- Оптимизация производительности системы.\n- Сбор данных для анализа и планирования масштабирования.\n\n**Требования могут включать:**\n- Типы серверов и сервисов, которые будут мониториться (веб-серверы, базы данных, приложения и т.д.).\n- Необходимость в реальном времени или с определённой задержкой.\n- Масштабируемость решения.\n- Бюджет и ресурсы для реализации и поддержки.\n\n### 2. Выбор инструментов мониторинга\n\nСуществует множество инструментов для мониторинга, каждый из которых имеет свои преимущества. Популярные варианты:\n\n- **Prometheus**: Отлично подходит для мониторинга метрик, интегрируется с Grafana для визуализации.\n- **Zabbix**: Полнофункциональная система мониторинга с поддержкой широкого спектра агентов и шаблонов.\n- **Nagios**: Надёжный инструмент для мониторинга доступности сервисов и серверов.\n- **Grafana**: Платформа для визуализации и аналитики, часто используется в паре с Prometheus.\n- **Datadog, New Relic**: Облачные сервисы мониторинга с широким набором функций.\n\nВыбор инструментов зависит от требований, бюджета и предпочтений команды.\n\n### 3. Определение метрик и параметров для мониторинга\n\n**Основные категории метрик:**\n\n- **Производительность системы:**\n  - Использование CPU, памяти, дискового пространства.\n  - Сетевой трафик.\n  \n- **Доступность сервисов:**\n  - Время отклика веб-серверов.\n  - Статусы сервисов (работают/не работают).\n  \n- **Ошибки и логи:**\n  - Количество ошибок приложения.\n  - Логи системы и приложений для анализа.\n  \n- **Бизнес-метрики:**\n  - Количество транзакций, пользователей и другие специфичные для бизнеса показатели.\n\n### 4. Установка и настройка мониторингового ПО\n\n**Этапы установки:**\n\n1. **Развертывание агентов мониторинга** на всех целевых серверах и сервисах.\n2. **Настройка сбора данных**: определение, какие метрики собирать и в каком интервале.\n3. **Интеграция с визуализацией**: настройка Grafana или другого инструмента для создания панелей мониторинга.\n4. **Настройка хранения данных**: определение объёма хранимых данных и периода хранения.\n\n### 5. Настройка системы оповещений\n\n**Ключевые моменты:**\n\n- **Определение пороговых значений**: укажите, при каких условиях должны срабатывать оповещения (например, использование CPU выше 90% более 5 минут).\n- **Выбор каналов оповещений**: email, SMS, мессенджеры (Slack, Microsoft Teams), системы тикетов.\n- **Настройка уровней приоритетности**: критические, предупреждения и информационные уведомления.\n- **Избежание ложных срабатываний**: настройте фильтры и условия для минимизации фальшивых тревог.\n\n### 6. Создание дашбордов и визуализаций\n\n**Лучшие практики:**\n\n- **Персонализированные панели** для разных команд (DevOps, разработчики, администраторы).\n- **Использование графиков и диаграмм** для наглядного представления данных.\n- **Агрегация метрик** для получения общего состояния системы.\n- **Возможность drill-down** для углублённого анализа при необходимости.\n\n### 7. Тестирование системы мониторинга\n\n**Необходимые действия:**\n\n- **Проверка сбора данных**: убедитесь, что все необходимые метрики собираются корректно.\n- **Тестирование оповещений**: инициируйте тестовые события для проверки работы уведомлений.\n- **Тестирование производительности** системы мониторинга, чтобы она не влияло негативно на основную инфраструктуру.\n\n### 8. Обучение персонала и документация\n\n**Важно:**\n\n- **Обучение пользователей** работе с инструментами мониторинга, созданию дашбордов и интерпретации данных.\n- **Документирование** всех настроек, процедур и политик мониторинга для облегчения поддержки и последующих расширений.\n\n### 9. Постоянное улучшение и адаптация\n\n**Рекомендации:**\n\n- **Регулярно пересматривайте метрики** и оповещения, чтобы они соответствовали текущим потребностям бизнеса и инфраструктуры.\n- **Внедряйте автоматизацию**, например, автоматическое масштабирование ресурсов на основе метрик.\n- **Анализируйте исторические данные** для выявления трендов и прогнозирования проблем.\n\n### Пример инструментального стека\n\n- **Сбор метрик**: Prometheus с экспортерами (node_exporter, blackbox_exporter и др.)\n- **Визуализация**: Grafana\n- **Оповещения**: Alertmanager (в составе Prometheus) с интеграцией в Slack и email\n- **Логирование**: ELK Stack (Elasticsearch, Logstash, Kibana) или Grafana Loki\n\n### Заключение\n\nОрганизация системы мониторинга требует тщательного планирования и последовательной реализации. Важно начать с чёткого понимания целей и требований, выбрать подходящие инструменты, определить ключевые метрики, настроить сбор данных и систему оповещений, а также обеспечить обучение команды и регулярное обновление системы в соответствии с изменяющимися потребностями. Эффективная система мониторинга позволит своевременно выявлять и устранять проблемы, обеспечивая стабильную работу серверов и сервисов.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор языка программирования для бэкенда является важным решением, которое может повлиять на успех вашего проекта. Вот несколько ключевых аспектов и советов, которые помогут вам сделать информированный выбор:\n\n1. **Требования проекта**\n   - **Функциональные требования**: Определите, какие функции должен выполнять ваш бэкенд. Некоторые языки лучше подходят для определённых типов приложений (например, Python отлично подходит для научных расчетов и машинного обучения).\n   - **Нефункциональные требования**: Рассмотрите требования к производительности, масштабируемости, безопасности и надежности.\n\n2. **Производительность и масштабируемость**\n   - Если проект требует высокой производительности и способности обрабатывать большое количество запросов, такие языки как **Go** или **Rust** могут быть отличным выбором.\n   - **Java** и **C#** также известны своей производительностью и масштабируемостью, особенно в крупных корпоративных приложениях.\n\n3. **Сообщество и поддержка**\n   - Языки с большим и активным сообществом, такими как **JavaScript (Node.js)**, **Python** или **Ruby**, обеспечивают доступ к множеству библиотек, фреймворков и ресурсов поддержки.\n   - Активное сообщество также означает большее количество обучающих материалов и готовую помощь при возникновении проблем.\n\n4. **Экосистема и библиотеки**\n   - Оцените наличие необходимых библиотек и фреймворков для ускорения разработки. Например, **Django** и **Flask** для Python, **Express** для Node.js, **Spring** для Java.\n   - Наличие интеграций с базами данных, системами обработки очередей и другими сервисами может существенно упростить разработку.\n\n5. **Простота изучения и доступность разработчиков**\n   - Если вы или ваша команда уже владеете определёнными языками, логично выбрать их для сокращения времени обучения.\n   - Популярные языки, такие как **JavaScript**, **Python** и **Java**, обеспечивают широкий выбор квалифицированных разработчиков на рынке труда.\n\n6. **Совместимость с другими технологиями**\n   - Убедитесь, что выбранный язык хорошо взаимодействует с другими компонентами вашей технологической стек.\n   - Например, если вы используете определённую базу данных или облачные сервисы, проверьте поддержку языка в этих инструментах.\n\n7. **Безопасность**\n   - Некоторые языки предлагают встроенные механизмы безопасности или имеют фреймворки, облегчающие создание защищённых приложений.\n   - Рассмотрите аспекты управления памятью, обработки ошибок и защиты от распространённых уязвимостей.\n\n8. **Стоимость и лицензирование**\n   - Проверьте лицензии используемых языков и библиотек, особенно если вы разрабатываете коммерческий продукт.\n   - Некоторые технологии могут иметь ограничения или дополнительные затраты на использование.\n\n9. **Личные предпочтения и культура команды**\n   - Удовлетворение от работы с выбранным языком может повысить продуктивность и снизить текучесть разработчиков.\n   - Важно учитывать мнение команды и их опыт с различными технологиями.\n\n**Популярные языки для бэкенда и их особенности:**\n\n- **JavaScript (Node.js)**: Идеален для тех, кто хочет использовать один язык для фронтенда и бэкенда. Отличается высокой скоростью разработки и большим сообществом.\n- **Python**: Подходит для быстрого прототипирования, научных расчетов, машинного обучения. Имеет простой синтаксис и множество библиотек.\n- **Java**: Надежен и масштабируем для крупных корпоративных приложений. Обладает стабильной производительностью и широким спектром инструментов.\n- **Ruby**: Известен благодаря фреймворку **Ruby on Rails**, который ускоряет разработку веб-приложений.\n- **Go**: Отличается высокой производительностью и простотой, подходит для микросервисной архитектуры.\n- **C# (.NET)**: Хорошо интегрируется с экосистемой Microsoft, подходит для построения различных типов приложений, от веб до десктопных.\n- **PHP**: Широко используется для веб-разработки, особенно с популярными системами управления контентом (например, WordPress).\n\n**Заключение**\n\nВыбор языка программирования для бэкенда зависит от множества факторов, включая требования проекта, опыт команды и долгосрочные цели. Рекомендуется провести тщательный анализ всех аспектов и, возможно, протестировать несколько технологий на этапе прототипирования, чтобы определить наилучшее соответствие для вашего конкретного случая.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**Serverless-архитектура** (или безсерверная архитектура) — это модель разработки и развертывания приложений, при которой разработчикам не нужно управлять серверами или инфраструктурой. Несмотря на название, серверы всё же используются, но их управление полностью берется на себя облачными провайдерами, такими как AWS Lambda, Google Cloud Functions, Microsoft Azure Functions и другие.\n\n### Основные характеристики Serverless-архитектуры:\n\n1. **Автоматическое масштабирование:** Функции автоматически масштабируются в зависимости от нагрузки. Если запросов много, система автоматически увеличивает количество экземпляров функции.\n\n2. **Оплата за использование:** Вы платите только за фактическое время выполнения функций и потребленные ресурсы, а не за постоянно работающие серверы.\n\n3. **Быстрое развертывание:** Разработчики могут быстро развертывать и обновлять функции без необходимости настройки серверов или инфраструктуры.\n\n4. **Фокус на бизнес-логике:** Разработчики могут сосредоточиться на написании кода и бизнес-логики, не беспокоясь о управлении серверами, обновлениях ОС или обеспечении безопасности инфраструктуры.\n\n### Преимущества Serverless-архитектуры:\n\n- **Снижение затрат:** Оплата только за потребленные ресурсы снижает расходы, особенно для приложений с переменной нагрузкой.\n- **Ускорение разработки:** Быстрое развертывание и упрощенное управление инфраструктурой позволяют быстрее выпускать новые функции.\n- **Масштабируемость:** Автоматическое масштабирование обеспечивает высокую доступность и устойчивость к нагрузкам.\n- **Упрощение управления:** Отсутствие необходимости управлять серверами снижает операционные сложности.\n\n### Ограничения и недостатки:\n\n- **Холодный старт:** При первом вызове функции или после периода бездействия может возникать задержка, связанная с инициализацией среды выполнения.\n- **Ограничения по времени выполнения:** Некоторые провайдеры накладывают ограничения на максимальное время выполнения функции.\n- **Провайдерская привязка:** Использование специфических функций облачного провайдера может затруднить перенос приложения на другую платформу.\n- **Архитектурная сложность:** Разработка сложных приложений с большим количеством функций может вызывать сложности в управлении и оркестровке.\n\n### Где использовать Serverless-архитектуру:\n\n1. **Веб-приложения и API:** Обработка HTTP-запросов, выполнение бизнес-логики, взаимодействие с базами данных.\n   \n2. **Микросервисы:** Реализация отдельных компонентов системы как независимых функций, что упрощает масштабирование и обновление.\n   \n3. **Обработка данных:** Трансформация, обработка и анализ больших объемов данных, включая обработку потоков данных в реальном времени.\n   \n4. **Автоматизация и интеграция:** Автоматизация задач, интеграция с различными сервисами и системами посредством вебхуков и событий.\n   \n5. **Интернет вещей (IoT):** Обработка и анализ данных с устройств IoT, управление событиями и триггерами.\n   \n6. **Чат-боты и голосовые ассистенты:** Реализация логики взаимодействия с пользователями без необходимости управлять инфраструктурой.\n\n7. **Задачи CI/CD:** Автоматизация процессов непрерывной интеграции и доставки, выполнение скриптов и тестов.\n\n### Примеры популярных облачных сервисов Serverless:\n\n- **AWS Lambda:** Предоставляет возможность запускать код на разных языках программирования в ответ на различные события.\n- **Google Cloud Functions:** Позволяет выполнять код в ответ на события из облачных сервисов Google.\n- **Azure Functions:** Интегрируется с различными сервисами Microsoft Azure и поддерживает множество языков программирования.\n- **IBM Cloud Functions:** Основан на Apache OpenWhisk и поддерживает масштабируемое выполнение функций.\n\n### Заключение\n\nServerless-архитектура позволяет разработчикам сосредоточиться на создании функционала и бизнес-логики, освобождая их от необходимости управления серверами и инфраструктурой. Она особенно эффективна для приложений с переменной нагрузкой, микросервисных архитектур, задач автоматизации и других сценариев, где требуется высокая масштабируемость и экономия затрат. Однако важно учитывать ограничения и выбирать подходящие случаи использования, чтобы максимально использовать преимущества безсерверных решений.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Эффективный процесс code review (проверки кода) играет ключевую роль в поддержании высокого качества программного обеспечения, улучшении читаемости кода и обмене знаниями внутри команды. Вот несколько советов, которые помогут сделать код ревью более продуктивным и конструктивным:\n\n### 1. **Устанавливайте четкие стандарты кодирования**\n- **Документируйте правила**: Определите и задокументируйте стандарты кодирования для вашего проекта или команды. Это включает стиль оформления, именование переменных, структурирование кода и т.д.\n- **Используйте линтеры и форматтеры**: Инструменты вроде ESLint, Prettier или аналогичные для других языков автоматизируют соблюдение стандартов и уменьшают количество мелких замечаний.\n\n### 2. **Делайте ревью регулярными и небольшими**\n- **Частота**: Регулярные небольшие ревью позволяют быстрее обнаруживать и исправлять ошибки, а также поддерживать непрерывность разработки.\n- **Размер изменений**: Ограничивайте объем изменений для каждого ревью. Большие пулл-реквесты усложняют процесс и увеличивают вероятность пропуска ошибок.\n\n### 3. **Фокусируйтесь на ключевых аспектах кода**\n- **Читаемость и ясность**: Код должен быть понятен другим разработчикам. Проверяйте, насколько легко читать и понимать логику.\n- **Архитектура и дизайн**: Убедитесь, что код соответствует архитектурным решениям и паттернам, принятным в проекте.\n- **Безопасность**: Ищите потенциальные уязвимости, такие как SQL-инъекции, XSS, неправильное управление сессиями и т.д.\n- **Производительность**: Оцените, нет ли неоптимальных алгоритмов или избыточных операций, которые могут замедлить приложение.\n- **Тестирование**: Проверьте наличие и качество автоматических тестов. Код должен быть покрыт тестами, а сами тесты должны быть надежными и понятными.\n- **Документация**: Убедитесь, что сложные участки кода хорошо документированы комментариями или сопровождаются соответствующей документацией.\n\n### 4. **Будьте конструктивны в отзывах**\n- **Позитивный тон**: Пользуйтесь вежливыми и поддерживающими выражениями. Избегайте обвинений или сарказма.\n- **Конкретика**: Указывайте конкретные места и объясняйте, почему предлагаете изменения. Вместо \"Этот код плохой\" скажите \"Можно улучшить читаемость этой функции, используя более осмысленные имена переменных\".\n- **Предлагайте решения**: Если нашли проблему, предложите возможный способ ее исправления. Это облегчает понимание и внедрение изменений.\n\n### 5. **Используйте специализированные инструменты**\n- **Платформы для ревью**: GitHub Pull Requests, GitLab Merge Requests, Bitbucket, Gerrit и другие инструменты облегчают процесс проверки кода, дают возможность комментировать конкретные строки и отслеживать статус ревью.\n- **Интеграция с CI/CD**: Автоматические проверки (тесты, линтинг, сборка) интегрированные в процесс ревью позволяют выявлять проблемы еще до начала ручной проверки.\n\n### 6. **Поощряйте обучение и обмен знаниями**\n- **Обсуждение лучших практик**: Используйте ревью для распространения знаний о лучших практиках и новых технологиях.\n- **Обратная связь**: Предоставляйте не только советы по улучшению кода, но и делитесь положительными моментами, чтобы мотивировать команду.\n\n### 7. **Устанавливайте разумные сроки**\n- **Оперативность**: Проводите ревью в разумные сроки, чтобы не задерживать процесс разработки и не создавать узких мест.\n- **Приоритеты**: Определяйте критичность изменений и ставьте приоритеты в соответствии с этим.\n\n### 8. **Избегайте излишней критики**\n- **Фокус на улучшении**: Цель ревью — улучшение кода, а не оценка личных качеств разработчика.\n- **Баланс**: Признавайте хорошо выполненные части кода и достижения коллег, чтобы поддерживать позитивную атмосферу.\n\n### 9. **Понимайте контекст изменений**\n- **Запросите описание**: Четкое описание того, что изменено и зачем, помогает лучше понять цели изменений.\n- **Обсуждайте функциональность**: Понимание общей функциональности и бизнес-логики помогает эффективнее проводить ревью.\n\n### 10. **Следите за масштабом и сложностью**\n- **Простота решений**: Стремитесь к простым и понятным решениям. Излишняя сложность может привести к ошибкам и усложнить поддержку кода.\n- **Рефакторинг**: Если заметили, что код можно упростить или улучшить, предлагайте варианты рефакторинга.\n\n### 11. **Учитывайте производственные аспекты**\n- **Совместимость**: Проверьте, как изменения влияют на существующие модули и системы.\n- **Развертывание**: Убедитесь, что код легко деплоится и не вызывает проблем при интеграции.\n\n### 12. **Не забывайте про тестирование**\n- **Покрытие тестами**: Убедитесь, что новые функции покрыты тестами, а старые тесты обновлены при изменениях.\n- **Качество тестов**: Оценивайте, насколько тесты надежны и отражают реальные сценарии использования.\n\n### 13. **Используйте метрики для оценки качества кода**\n- **Статический анализ**: Инструменты вроде SonarQube, ESLint, Pylint помогают автоматически выявлять потенциальные проблемы.\n- **Кодовые метрики**: Измеряйте сложности функций, дублирование кода и другие показатели, которые могут влиять на качество.\n\n### 14. **Поощряйте открытый диалог**\n- **Обсуждение**: Стимулируйте обсуждение предложенных изменений и альтернативных решений.\n- **Уважение мнений**: Уважайте точки зрения коллег и будьте готовы к компромиссам.\n\n### 15. **Фокусируйтесь на общей цели**\n- **Качество продукта**: Помните, что основной целью ревью является улучшение качества конечного продукта.\n- **Командная работа**: Рассматривайте процесс как совместное улучшение, а не как проверку друг друга.\n\nСледуя этим советам, вы сможете сделать процесс code review более эффективным, повысить качество кода и создать благоприятную атмосферу для сотрудничества внутри команды. Помните, что ключевыми аспектами являются конструктивность, уважение и стремление к постоянному совершенствованию.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация детской комнаты требует внимания к функциональности, безопасности и эстетике. Вот несколько советов, которые помогут создать комфортное и практичное пространство для вашего ребенка:\n\n### 1. **Планирование пространства**\n- **Определите зоны:** Разделите комнату на отдельные зоны для сна, обучения, игр и хранения. Это поможет эффективно использовать пространство и поддерживать порядок.\n- **Используйте вертикальное пространство:** Полки на стенах, настенные органайзеры и высокие шкафы позволят максимально использовать площадь, не занимая при этом много места.\n\n### 2. **Выбор мебели**\n- **Функциональная мебель:** Избирайте мебель с несколькими функциями, например, кровать с подъемным механизмом для хранения вещей или стол для занятий, который можно регулировать по высоте.\n- **Безопасность:** Убедитесь, что мебель без острых углов и сделана из нетоксичных материалов. Крепления к стенам помогут предотвратить опрокидывание мебели.\n\n### 3. **Организация хранения**\n- **Коробки и контейнеры:** Используйте прозрачные контейнеры или маркированные коробки для хранения игрушек, книг и других вещей. Это упростит поиск и уборку.\n- **Шкафы и комоды:** Разместите шкафы и комоды на доступной для ребенка высоте, чтобы он мог самостоятельно убирать свои вещи.\n- **Регулярная ревизия:** Периодически проходите по вещам ребенка и избавляйтесь от того, что больше не нужно.\n\n### 4. **Освещение**\n- **Естественный свет:** Максимально используйте естественное освещение, размещая рабочие места и кровать ближе к окнам.\n- **Дополнительное освещение:** Добавьте настольные лампы для учебы и ночники для комфортного засыпания.\n\n### 5. **Цветовая гамма и декор**\n- **Спокойные цвета:** Выбирайте светлые и нейтральные тона для стен, которые способствуют спокойствию и концентрации. Акцентные цвета можно использовать в аксессуарах.\n- **Тематика:** Если ребенок предпочитает определенную тему (например, космос, природа или любимые персонажи), используйте это для создания индивидуального стиля комнаты.\n- **Персонализация:** Позвольте ребенку участвовать в декорировании комнаты, это повысит его привязанность к пространству и ответственность за порядок.\n\n### 6. **Комфорт и безопасность**\n- **Мягкие элементы:** Добавьте ковры, подушки и удобные кресла для создания уютной атмосферы.\n- **Безопасность окна:** Установите замки или решетки на окнах, чтобы предотвратить падение.\n- **Проверьте электроприборы:** Все розетки должны быть защищены, кабели аккуратно спрятаны.\n\n### 7. **Гибкость и адаптивность**\n- **Модульная мебель:** Используйте модульные системы, которые можно легко переставлять по мере роста ребенка и изменения его потребностей.\n- **Регулируемая мебель:** Столы и стулья с возможностью регулировки высоты будут полезны на разных этапах развития.\n\n### 8. **Поддержание порядка**\n- **Правила уборки:** Вводите простые правила по уборке и приведению комнаты в порядок. Сделайте уборку частью ежедневного распорядка.\n- **Привычки:** Научите ребенка сразу убирать игрушки и вещи на свои места после использования.\n\n### 9. **Технологии**\n- **Минимизация гаджетов:** Ограничьте количество электронных устройств в комнате, чтобы избежать отвлекающих факторов и способствовать развитию творческих навыков.\n- **Образовательные технологии:** Если используете гаджеты для обучения, организуйте их таким образом, чтобы они не загромождали пространство и были легко доступны для использования.\n\n### 10. **Учет интересов ребенка**\n- **Возрастные особенности:** Учитывайте возраст и интересы ребенка при выборе мебели и декора. Для малышей подойдут безопасные и яркие элементы, для подростков — более стильные и функциональные решения.\n- **Развитие:** Старайтесь, чтобы комната стимулировала развитие навыков и способностей ребенка, например, наличие уголка для чтения, места для творчества и т.д.\n\nОрганизованная детская комната не только станет уютным местом для вашего ребенка, но и поможет ему развиваться, учиться и весело проводить время. Планируйте пространство вместе с ребенком, учитывайте его потребности и предпочтения, и вы создадите идеальное пространство для роста и творчества.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Организация домашнего офиса играет ключевую роль в повышении продуктивности и создании комфортной рабочей среды. Вот несколько советов, которые помогут вам эффективно обустроить рабочее пространство дома:\n\n1. **Выберите подходящее место:**\n   - **Тихое и уединённое пространство:** Постарайтесь выбрать место, где вас не будут отвлекать шумы и посторонние люди.\n   - **Естественное освещение:** Если возможно, расположите стол возле окна, чтобы получать достаточное количество естественного света, что положительно влияет на настроение и здоровье.\n\n2. **Эргономичная мебель:**\n   - **Регулируемый стул:** Инвестируйте в качественный офисный стул с поддержкой позвоночника и возможностью регулировки высоты.\n   - **Стол подходящей высоты:** Рабочий стол должен позволять держать локти под углом 90 градусов и сохранять комфортную позу.\n\n3. **Оптимальное освещение:**\n   - **Общее освещение:** Убедитесь, что комната хорошо освещена, чтобы избежать напряжения глаз.\n   - **Дополнительное освещение:** Настольная лампа поможет в работе над мелкими деталями и обеспечит дополнительный свет в вечернее время.\n\n4. **Организация хранения:**\n   - **Полки и шкафы:** Используйте вертикальное пространство для хранения документов и канцелярии.\n   - **Органайзеры:** Поддерживайте порядок на столе с помощью органайзеров для ручек, бумаг и других мелочей.\n\n5. **Минимализм и порядок:**\n   - **Минимизируйте беспорядок:** Оставляйте на рабочем месте только необходимое, чтобы избежать отвлекающих факторов.\n   - **Регулярная уборка:** Периодически проводите ревизию и избавляйтесь от ненужных вещей.\n\n6. **Управление кабелями:**\n   - **Кабельные организаторы:** Используйте кабельные каналы или зажимы, чтобы спрятать провода и избежать спутывания.\n   - **Беспроводные устройства:** По возможности используйте беспроводные зарядные устройства и периферийные устройства для уменьшения количества кабелей.\n\n7. **Технологическое оснащение:**\n   - **Надёжное интернет-соединение:** Убедитесь, что у вас стабильный и быстрый доступ в интернет.\n   - **Дополнительные устройства:** Монитор, клавиатура и мышь хорошего качества могут значительно повысить комфорт работы.\n\n8. **Комфорт и личные акценты:**\n   - **Декор:** Добавьте несколько предметов, которые вдохновляют или радуют вас, например, растения, фотографии или картины.\n   - **Температура и вентиляция:** Поддерживайте комфортную температуру и обеспечьте хорошую вентиляцию в рабочем пространстве.\n\n9. **Звукоизоляция:**\n   - **Шумоизоляционные материалы:** Если в вашем доме шумно, рассмотрите использование звукопоглощающих панелей или ковров.\n   - **Наушники:** Используйте шумоподавляющие наушники для концентрации во время работы.\n\n10. **Разграничение работы и личной жизни:**\n    - **Чёткие границы:** Попытайтесь установить физическое и временное разделение между рабочим пространством и остальной частью дома, чтобы легче переключаться между работой и отдыхом.\n\nСледуя этим рекомендациям, вы сможете создать удобный и эффективный домашний офис, который будет способствовать вашей продуктивности и благополучию.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Скандинавская ходьба — это активный вид физической активности, который сочетает обычную ходьбу с использованием специальных палок. Этот вид спорта приобретает все большую популярность благодаря своим многочисленным преимуществам для здоровья и общего самочувствия. Ниже перечислены ключевые преимущества скандинавской ходьбы:\n\n1. **Увеличение физической нагрузки**:\n   - **Более высокая калорийная расхода**: Использование палок позволяет задействовать до 90% мышц тела, что приводит к более эффективному сжиганию калорий по сравнению с обычной ходьбой.\n   - **Укрепление мышц**: Работают мышцы верхней части тела, включая плечи, спину, руки и грудь, а также мышцы нижней части тела.\n\n2. **Улучшение сердечно-сосудистой системы**:\n   - Регулярные занятия способствуют укреплению сердца и сосудов, повышению выносливости и снижению риска сердечно-сосудистых заболеваний.\n\n3. **Снижение нагрузки на суставы**:\n   - Правильная техника скандинавской ходьбы помогает распределить нагрузку равномерно, уменьшая давление на колени и поясницу, что делает этот вид активности подходящим для людей с избыточным весом или проблемами с суставах.\n\n4. **Повышение общей выносливости и гибкости**:\n   - Комбинация движения верхней и нижней части тела способствует развитию общей координации, гибкости и баланса.\n\n5. **Психологические преимущества**:\n   - Физическая активность способствует выработке эндорфинов, что улучшает настроение, снижает уровень стресса и повышает общее самочувствие.\n\n6. **Социальный аспект**:\n   - Скандинавская ходьба часто осуществляется в группах, что способствует социализации, обмену опытом и поддержке единомышленников, что может мотивировать к регулярным занятиям.\n\n7. **Доступность и простота**:\n   - Для занятий не требуется специальное оборудование или сложная подготовка. Подходящей парой палок и удобной обувью можно начать заниматься практически в любом месте и в любое время.\n\n8. **Профилактика заболеваний**:\n   - Регулярные занятия скандинавской ходьбой помогают снизить риск развития ожирения, диабета 2 типа, остеопороза и других хронических заболеваний.\n\n9. **Подходит для всех возрастов**:\n   - Этот вид активности может быть адаптирован под различные уровни физической подготовки и возрастные категории, что делает его универсальным выбором для широкого круга людей.\n\n10. **Улучшение дыхательной системы**:\n    - Активное вовлечение мышц помогает улучшить вентиляцию лёгких и увеличить объём вдоха, что способствует лучшему насыщению организма кислородом.\n\nСкандинавская ходьба является эффективным и комфортным способом поддерживать физическую форму, укреплять здоровье и улучшать качество жизни. Регулярные занятия этим видом активности могут принести значительные положительные изменения как для тела, так и для ума.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Чтение книг обладает множеством преимуществ:\n\n1. **Расширение кругозора и знаний**: Позволяет узнавать новое о различных культурах, науках и областях человеческой деятельности.\n2. **Улучшение когнитивных способностей**: Стимулирует мышление, развивает критическое мышление и аналитические навыки.\n3. **Обогащение словарного запаса и улучшение грамматики**: Чтение способствует ознакомлению с разнообразными словами и структурами предложений.\n4. **Снижение уровня стресса**: Погружение в книгу помогает расслабиться и отвлечься от повседневных забот.\n5. **Развитие воображения и креативности**: Виртуальные миры и персонажи способствуют творческому мышлению.\n6. **Усиление эмпатии**: Понимание переживаний и эмоций героев книг помогает лучше понимать других людей.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**Тёмная материя** — это форма материи, которая не излучает, не поглощает и не отражает электромагнитное излучение, что делает её невидимой для прямых наблюдений с помощью телескопов. Однако её существование было предположено учёными на основе гравитационных воздействий, которые она оказывает на видимую материю, излучение и структуру Вселенной в целом. Тёмная материя составляет примерно 27% общей массы и энергии Вселенной, в то время как обычная видимая материя составляет лишь около 5%.\n\n### Основные характеристики тёмной материи:\n- **Гравитационное воздействие**: Тёмная материя влияет на движение галактик, образование галактических скоплений и распределение галактик в крупных масштабах.\n- **Невзаимодействие с электромагнитным излучением**: Она не участвует в взаимодействиях, связанных с электромагнитными силами, что делает её невидимой для всех видов электромагнитного излучения (видимого света, радио, рентгеновских лучей и т.д.).\n- **Холодная и невязкая**: Большинство моделей предполагают, что тёмная материя состоит из медленно движущихся частиц (холодная темная материя), что способствует формированию структур во Вселенной, таких как галактики и их скопления.\n\n### Методы обнаружения тёмной материи:\n\n1. **Прямое обнаружение**:\n    - **Детекторы под землёй**: Устанавливаются в глубоких подземных лабораториях для минимизации фонового излучения. Эти детекторы пытаются зарегистрировать взаимодействия частиц тёмной материи с атомами вещества детектора.\n    - **Типы детекторов**: Используются различные технологии, включая криогенные детекторы, детекторы на основе жидкостных арсенидов и ксенона, а также полупроводниковые детекторы.\n\n2. **Косвенное обнаружение**:\n    - **Анализ продуктов аннигиляции или распада**: Предполагается, что тёмная материя может самоуничтожаться или распадаться, производя стандартные частицы (например, гамма-лучи, нейтрино или антиматерию), которые можно обнаружить с помощью специализированных обсерваторий.\n    - **Обсерватории и телескопы**: Инструменты, такие как телескопы Fermi Gamma-ray Space Telescope, ищут избыточные сигналы гамма-лучей из областей с высокой плотностью тёмной материи, например, центра нашей галактики.\n\n3. **Производство в лабораториях**:\n    - **Большие адронные коллайдеры (БАК)**: Путём столкновений частиц на высоких энергиях учёные пытаются создать частиц тёмной материи. Если такие частицы образуются, они могут быть зарегистрированы как несоответствия в измерениях энергии и момента, указывающие на невидимые частицы.\n    - **Поиск новых частиц**: Исследования направлены на поиск кандидатов на тёмную материю, таких как гипотетические частицы WIMP (Weakly Interacting Massive Particles) или аксоны.\n\n4. **Астрономические и космологические наблюдения**:\n    - **Гравитационное линзирование**: Изучение искажений света от далеких объектов из-за гравитационного поля тёмной материи позволяет картировать её распределение.\n    - **Космическая микроволновая фон**: Анализ флуктуаций космического микроволнового фона помогает понять распределение тёмной материи на ранних стадиях Вселенной.\n    - **Динамика галактик и галактических скоплений**: Изучение скоростей звёзд и газа в галактиках позволяет оценить количество и распределение тёмной материи.\n\n### Современные вызовы и перспективы:\nНесмотря на многочисленные попытки, тёмная материя до сих пор не была напрямую обнаружена. Учёные продолжают разрабатывать более чувствительные детекторы и улучшать существующие методы наблюдения. Также исследуются альтернативные теории, такие как модификации закона гравитации, которые могут объяснить наблюдаемые аномалии без обращения к тёмной материи. Однако большинство космологических данных лучше согласуются с гипотезой наличия тёмной материи, поэтому поиск её природы остаётся одной из главных задач современной физики и космологии.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Правильное дыхание играет важную роль в нашем физическом и психическом благополучии. Оно влияет на множество аспектов здоровья, от уровня энергии до эмоционального состояния. Рассмотрим основные причины, почему правильное дыхание так важно:\n\n### 1. Эффективное кислородоснабжение организма\nПравильное глубокое дыхание обеспечивает оптимальное поступление кислорода в кровь, что необходимо для всех клеток и органов. Это способствует улучшению обмена веществ, повышению уровня энергии и общей выносливости.\n\n### 2. Регуляция нервной системы\nГлубокое и осознанное дыхание активирует парасимпатическую нервную систему, способствуя расслаблению и снижению уровня стресса. Это помогает уменьшить тревогу, улучшить настроение и повысить устойчивость к стрессовым ситуациям.\n\n### 3. Улучшение работы сердечно-сосудистой системы\nПравильное дыхание способствует снижению артериального давления, улучшению кровообращения и укреплению сердечной мышцы. Это снижает риск развития сердечно-сосудистых заболеваний, таких как гипертония и ишемическая болезнь сердца.\n\n### 4. Поддержка иммунной системы\nОптимальное дыхание улучшает функцию легких и повышает способность организма бороться с инфекциями и болезнями. Хорошо насыщенная кислородом кровь способствует более эффективной работе иммунных клеток.\n\n### 5. Повышение концентрации и ясности ума\nОсознанное дыхание увеличивает приток кислорода к мозгу, что улучшает когнитивные функции, повышает концентрацию и способствует ясному мышлению. Это особенно полезно при выполнении умственных задач и учебе.\n\n### 6. Улучшение качества сна\nПрактики правильного дыхания, такие как медитация и дыхательные упражнения, помогают расслабиться перед сном, уменьшить беспокойство и способствуют более глубокому и спокойному сну.\n\n### 7. Поддержка правильной осанки\nДыхательные упражнения, вовлекающие диафрагму, помогают поддерживать правильную осанку, уменьшая напряжение в спине и шею. Это особенно важно для людей, проводящих много времени в сидячем положении.\n\n### 8. Управление болевыми ощущениями\nГлубокое дыхание и техники релаксации могут помочь снизить восприятие боли, улучшить эмоциональное состояние и способствовать более эффективному управлению хроническими болевыми состояниями.\n\n### Рекомендации для улучшения дыхания:\n\n- **Дышите через нос:** Носовые проходы фильтруют и согревают воздух, а также помогают лучше контролировать ритм дыхания.\n- **Используйте диафрагму:** Глубокое дыхание с использованием диафрагмы обеспечивает больший объем воздуха и лучшее насыщение крови кислородом.\n- **Практикуйте осознанное дыхание:** Уделяйте внимание каждому вдоху и выдоху, что помогает повысить осознанность и снизить уровень стресса.\n- **Регулярные упражнения:** Включите дыхательные упражнения в свою ежедневную рутину, такие как медитация, йога или простые дыхательные техники.\n- **Избегайте поверхностного дыхания:** Старайтесь дышать глубоко и полно, избегая частых и поверхностных вдохов, которые могут привести к напряжению и усталости.\n\n### Заключение\n\nПравильное дыхание — это простой, но мощный инструмент для улучшения здоровья и качества жизни. Включение дыхательных практик в ежедневную рутину может привести к значительным положительным изменениям как физического, так и психического состояния. Осознанное дыхание помогает справляться со стрессом, повышает уровень энергии, улучшает концентрацию и поддерживает общее благополучие.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно, помимо Docker существует множество других технологий контейнеризации, каждая из которых имеет свои особенности и применяется в различных сценариях. Вот некоторые из наиболее популярных альтернатив Docker:\n\n### 1. **Podman**\nPodman (Pod Manager) — это инструмент для управления контейнерами, разработанный компанией Red Hat. Его основные особенности:\n- **Бездемонный**: Podman не требует постоянного фона-демона для работы, что повышает безопасность.\n- **Совместимость с Docker**: CLI-команды Podman схожи с Docker, что облегчает переход.\n- **Поддержка корневых и безпривилегированных контейнеров**: Повышает безопасность при запуске контейнеров от непользовательских учетных записей.\n\n### 2. **LXC/LXD**\n- **LXC (Linux Containers)**: Предоставляет низкоуровневый механизм для создания изолированных сред. Подходит для создания легких виртуальных машин.\n- **LXD**: Расширение LXC с улучшенными возможностями управления, поддержкой контейнерных образов и сетевых функций. Идеален для масштабируемых инфраструктур.\n\n### 3. **containerd**\ncontainerd — это низкоуровневый runtime для контейнеров, разработанный как часть проекта Docker, но выделенный в самостоятельный проект под руководством CNCF (Cloud Native Computing Foundation). Характеристики:\n- **Используется в Kubernetes**: containerd часто применяется как контейнерный runtime в Kubernetes-кластерах.\n- **Фокус на важные функции**: Управление жизненным циклом контейнеров, распространение образов и т.д.\n\n### 4. **CRI-O**\nCRI-O — это контейнерный runtime, разработанный специально для Kubernetes. Основные особенности:\n- **Интеграция с Kubernetes**: Оптимизирован для работы с Kubernetes через интерфейс CRI (Container Runtime Interface).\n- **Легковесность**: Минималистичный подход без избыточных функций, что снижает потенциальные уязвимости и повышает производительность.\n\n### 5. **Singularity (ныне Apptainer)**\nSingularity изначально была разработана для научных вычислений и HPC (High-Performance Computing). Основные моменты:\n- **Фокус на переносимости**: Позволяет создавать контейнеры, которые могут выполняться в высокопроизводительных вычислительных средах.\n- **Поддержка различных форматов**: Совместима с Docker-образами, но также поддерживает свои собственные форматы.\n\n### 6. **Buildah**\nBuildah — инструмент для сборки контейнерных образов, разработанный компанией Red Hat. Отличия и особенности:\n- **Бездемонный**: Подобно Podman, не требует постоянного демона.\n- **Гибкость**: Позволяет создавать образы с нуля или модифицировать существующие, используя скрипты и команды.\n\n### 7. **Kata Containers**\nKata Containers объединяет преимущества контейнеров и виртуальных машин. Основные характеристики:\n- **Изоляция на уровне гипервизора**: Предоставляет высокий уровень безопасности за счет использования микро-VM.\n- **Производительность**: Стремится к минимизации накладных расходов, сохраняя при этом изоляцию.\n\n### 8. **OpenVZ**\nOpenVZ — это виртуализационная технология для Linux, которая позволяет создавать изолированные контейнеры (VPS) на базе единого ядра. Особенности:\n- **Высокая плотность**: Позволяет запускать множество контейнеров на одном физическом сервере.\n- **Управление ресурсами**: Гранулированное управление CPU, памятью и другими ресурсами для каждого контейнера.\n\n### 9. **Rkt (Rocket)**\nRkt был разработан компанией CoreOS как альтернатива Docker. Однако стоит отметить, что проект был прекращен и больше не поддерживается. Тем не менее, он был важен для развития экосистемы контейнеризации.\n\n### 10. **Flatpak и Snap**\nХотя они больше ориентированы на распространение приложений для десктопов, Flatpak и Snap используют контейнеризацию для изоляции приложений и их зависимостей.\n\n### Заключение\n\nВыбор технологии контейнеризации зависит от конкретных требований проекта, таких как безопасность, производительность, интеграция с оркестраторами (например, Kubernetes), удобство использования и другие факторы. Docker остаётся одной из самых популярных и широко используемых платформ, но альтернативы, такие как Podman, LXC/LXD, containerd и CRI-O, предоставляют расширенные возможности и могут лучше подходить для определённых сценариев использования.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Магнитное поле Земли играет ключевую роль в поддержании условий, благоприятных для жизни на нашей планете. Рассмотрим, как оно формируется и почему является важным.\n\n### Формирование магнитного поля Земли\n\n**1. Строение Земли:**\n- **Ядро:** Земля состоит из нескольких слоев. В центре находится внутреннее ядро, которое твердое и преимущественно состоит из железа и никеля. Вокруг него располагается жидкое наружное ядро, также богатое железом и никелем.\n- **Мантия и кора:** Над ядром находятся мантия и кора, представляющие собой твердые слои, хотя мантия обладает пластическими свойствами.\n\n**2. Геодинамо:**\nМагнитное поле Земли создается благодаря **геодинамо**, процессу, происходящему в жидком наружном ядре. Основные факторы геодинамо:\n\n- **Конвективные течения:** Высокие температуры в ядре вызывают конвекцию – движение жидких металлов вверх и вниз.\n- **Вращение Земли:** Вращение планеты вокруг своей оси приводит к эффекту Кориолиса, который организует потоки жидкости в спиралевидные структуры, способствуя формированию устойчивого магнитного поля.\n- **Электрический ток:** Движение ионов железа и никеля в жидком ядре создают электрические токи, которые генерируют магнитное поле согласно законам электромагнетизма (например, по уравнениям Максвелла).\n\n**3. Поддержание поля:**\nМагнитное поле само поддерживается благодаря непрерывным конвективным движениям в жидком ядре. Это аналогично работе генератора, где движение проводника в магнитном поле индуцирует электрический ток.\n\n### Важность магнитного поля Земли\n\n**1. Защита от космической радиации:**\nМагнитное поле действует как щит, защищая Землю от вредоносной солнечной и космической радиации, включая солнечный ветер – поток заряженных частиц от Солнца. Без магнитного поля атмосфера Земли могла бы постепенно размываться под воздействием этих частиц, что негативно сказалось бы на жизни.\n\n**2. Формирование и сохранение атмосферы:**\nЗащита от солнечного ветра способствует сохранению атмосферы, обеспечивая стабильные климатические условия и защищая живые организмы от ультрафиолетового излучения.\n\n**3. Навигация:**\nМагнитное поле Земли определяет направление полюсов и используется навигационными системами. Компасы, которые ориентируются по магнитному полю, позволяют людям ориентироваться на местности и путешествовать по морям и в воздухе.\n\n**4. Биология:**\nНекоторые виды животных, например, птицы и морские черепахи, используют магнитное поле для навигации во время миграций. Это помогает им ориентироваться и возвращаться к своим местам гнездования или кормления.\n\n**5. Геологические и климатические исследования:**\nИзучение магнитного поля Земли помогает ученым понять процессы, происходящие в недрах планеты, историю геологических событий, таких как обращение магнитных полюсов, а также изменения климата и геодинамику.\n\n### Заключение\n\nМагнитное поле Земли — это результат сложных процессов в глубинах нашей планеты, связанных с движением жидких металлов в наружном ядре и вращением Земли. Оно играет жизненно важную роль в защите атмосферы, поддержании условий для жизни, обеспечении навигации и воздействует на различные биологические и геологические процессы. Понимание его формирования и функционирования помогает научному сообществу лучше осознавать динамику нашей планеты и ее взаимодействие с космической средой.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Конечно! Вот несколько полезных советов по выбору качественных продуктов:\n\n1. **Проверяйте свежесть**:\n   - **Фрукты и овощи**: Обращайте внимание на яркий цвет, упругую текстуру и отсутствие следов гниения или плесени.\n   - **Мясо и рыба**: Свежие продукты имеют приятный запах, яркий цвет и упругую текстуру. Избегайте изделий с тусклым цветом или слизью.\n\n2. **Читайте этикетки**:\n   - **Состав**: Чем короче список ингредиентов, тем лучше. Избегайте продуктов с искусственными добавками, консервантами и ароматизаторами.\n   - **Срок годности**: Проверяйте дату изготовления и срок годности, особенно для скоропортящихся продуктов.\n\n3. **Обращайте внимание на упаковку**:\n   - Упаковка должна быть целой, без повреждений и вздутия, что может указывать на порчу продукта.\n   - Предпочитайте продукты в минимально обработанной упаковке, избегая избыточного пластика.\n\n4. **Выбирайте сезонные продукты**:\n   - Сезонные фрукты и овощи обычно свежее, вкуснее и дешевле. Они лучше сохраняют свои питательные свойства.\n\n5. **Покупайте у проверенных продавцов**:\n   - Выбирайте магазины с хорошей репутацией, проверенные фермерские рынки или специализированные магазины, где качество контролируется.\n\n6. **Обратите внимание на сертификаты качества**:\n   - Продукты с сертификатами, такими как \"Экокласс\", \"Био\", \"Organic\" подтверждают соответствие определённым стандартам качества и безопасности.\n\n7. **Изучайте происхождение продукта**:\n   - Предпочитайте продукты местного производства. Они чаще свежее и поддерживают местных производителей.\n\n8. **Оценивайте цену**:\n   - Слишком низкая цена может свидетельствовать о низком качестве. Сравнивайте цены и выбирайте оптимальное соотношение цены и качества.\n\n9. **Пробуйте перед покупкой**:\n   - В некоторых магазинах предлагаются дегустации. Это отличный способ оценить вкус и качество продукта перед покупкой.\n\n10. **Читайте отзывы**:\n    - Ознакомьтесь с мнениями других покупателей о продукте или бренде. Отзывы могут дать дополнительную информацию о качестве.\n\n11. **Изучайте характеристики продукта**:\n    - Например, в молочных продуктах обращайте внимание на содержание жира, в хлебе — на состав муки и отсутствие консервантов.\n\n12. **Учитывайте способ хранения**:\n    - Некоторые продукты требуют определённых условий хранения. Убедитесь, что сможете правильно хранить продукт дома, чтобы сохранить его качество надолго.\n\nСледуя этим советам, вы сможете значительно повысить вероятность выбора качественных и полезных продуктов для себя и своей семьи.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Концентрация внимания — важный навык, который позволяет эффективно выполнять задачи, учиться и достигать поставленных целей. Вот несколько проверенных способов улучшить концентрацию:\n\n1. **Организация рабочего пространства**:\n   - **Удалите лишние предметы**: Минимизируйте количество отвлекающих элементов на рабочем месте.\n   - **Создайте комфортные условия**: Обеспечьте хорошее освещение, удобную мебель и поддерживайте порядок.\n\n2. **Планирование и постановка целей**:\n   - **Составляйте списки дел**: Записывайте задачи на день, неделю и месяц.\n   - **Устанавливайте приоритеты**: Фокусируйтесь на наиболее важных задачах сначала.\n\n3. **Тайм-менеджмент**:\n   - **Метод Помодоро**: Работайте 25 минут, затем делайте 5-минутный перерыв. После четырёх циклов — длинный перерыв.\n   - **Блокировка времени**: Выделяйте конкретные временные блоки для выполнения определённых задач.\n\n4. **Снижение отвлекающих факторов**:\n   - **Отключите уведомления**: Выключите ненужные уведомления на телефоне и компьютере.\n   - **Создайте тихую обстановку**: Используйте наушники с шумоподавлением или фоновой музыкой без слов.\n\n5. **Практика осознанности и медитация**:\n   - **Медитация**: Регулярные сеансы медитации помогают улучшить внимание и снизить уровень стресса.\n   - **Упражнения на осознанность**: Фокусируйтесь на настоящем моменте, обращая внимание на дыхание и телесные ощущения.\n\n6. **Физическая активность**:\n   - **Регулярные тренировки**: Умеренные упражнения, такие как прогулки, йога или бег, улучшают кровообращение и повышают уровень энергии.\n   - **Короткие физические паузы**: В течение рабочего дня делайте небольшие упражнения для разминки.\n\n7. **Правильное питание и гидратация**:\n   - **Сбалансированный рацион**: Включайте в питание продукты, богатые омега-3 жирными кислотами, антиоксидантами и витаминами.\n   - **Достаточное потребление воды**: Обезвоживание может негативно сказаться на когнитивных функциях.\n\n8. **Достаточный сон**:\n   - **Регулярный режим сна**: Старайтесь ложиться и вставать в одно и то же время каждый день.\n   - **Качественный сон**: Обеспечьте комфортные условия для сна, избегайте использования гаджетов перед сном.\n\n9. **Управление стрессом**:\n   - **Техники релаксации**: Практикуйте глубокое дыхание, медитацию или йогу.\n   - **Хобби и отдых**: Найдите время для занятий, которые приносят радость и расслабление.\n\n10. **Развитие когнитивных навыков**:\n    - **Игры для мозга**: Пазлы, шахматы и другие интеллектуальные игры способствуют улучшению внимания и мышления.\n    - **Чтение и обучение**: Постоянное обучение и чтение стимулируют умственную активность.\n\n11. **Установка четких целей и мотивация**:\n    - **Конкретные цели**: Четко определенные цели помогают сосредоточиться на их достижении.\n    - **Награды за достижения**: Поощряйте себя за завершенные задачи, это повышает мотивацию.\n\n12. **Регулярные перерывы**:\n    - **Перерывы для отдыха**: Короткие паузы между рабочими сессиями помогают восстановить концентрацию.\n    - **Изменение деятельности**: Переключение на другую задачу или активность помогает избежать переутомления.\n\n13. **Минимизация многозадачности**:\n    - **Фокус на одной задаче**: Сосредоточьтесь на выполнении одной задачи за раз для лучшей эффективности.\n    - **Избегайте постоянного переключения**: Частое переключение между задачами снижает общую продуктивность и концентрацию.\n\nКаждый человек уникален, поэтому важно экспериментировать с различными методами и находить те, которые наиболее эффективно работают именно для вас. Регулярная практика и дисциплина помогут значительно повысить способность к концентрации внимания.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор спортивной секции — важный шаг, особенно если речь идет о детях или о начале нового спортивного пути для себя. Вот несколько советов, которые помогут сделать правильный выбор:\n\n1. **Определите свои цели и интересы:**\n   - Выясните, какой вид спорта вас или вашего ребенка привлекает. Это может быть как командный вид спорта (футбол, волейбол), так и индивидуальный (теннис, плавание).\n   - Подумайте о целях: улучшение физической формы, развитие навыков, участие в соревнованиях или просто активное времяпрепровождение.\n\n2. **Изучите доступные варианты:**\n   - Составьте список доступных спортивных секций в вашем регионе.\n   - Посетите несколько секций, чтобы ознакомиться с атмосферой, тренировочным процессом и общей организацией.\n\n3. **Квалификация тренеров:**\n   - Узнайте о квалификации и опыте тренерского состава.\n   - Хороший тренер не только обучит техникам, но и будет мотивировать, обеспечит безопасность и поддержит развитие.\n\n4. **Инфраструктура и оборудование:**\n   - Оцените качество спортивных залов, площадок, бассейнов и другого оборудования.\n   - Убедитесь, что условия тренировок соответствуют стандартам и безопасны для занятий.\n\n5. **Расположение и время тренировок:**\n   - Выберите секцию, расположенную удобно по отношению к дому или месту учебы/работы, чтобы сократить время на дорогу.\n   - Проверьте расписание тренировок и убедитесь, что оно согласуется с вашим графиком.\n\n6. **Стоимость и форма оплаты:**\n   - Сравните стоимость абонементов и дополнительных расходов (например, экипировка, участие в соревнованиях).\n   - Узнайте о возможных скидках, рассрочках или бесплатных пробных занятиях.\n\n7. **Отзывы и репутация:**\n   - Почитайте отзывы других участников или их родителей.\n   - Спросите рекомендации у знакомых или обратитесь к местным сообществам в социальных сетях.\n\n8. **Программа тренировок и развитие:**\n   - Узнайте, как структурированы тренировки, какие методики используются.\n   - Посмотрите, есть ли возможность прогрессировать, участвовать в соревнованиях или получать сертификаты.\n\n9. **Атмосфера и коллектив:**\n   - Важно, чтобы в секции была дружелюбная и поддерживающая атмосфера.\n   - Хороший коллектив поможет сохранять мотивацию и получать удовольствие от занятий.\n\n10. **Безопасность и медицинское сопровождение:**\n    - Убедитесь, что секция соблюдает правила безопасности и имеет меры первой помощи.\n    - Узнайте, есть ли доступ к медицинскому обслуживанию в случае травм.\n\n11. **Гибкость и возможность смены секции:**\n    - Проверьте условия расторжения контракта или перехода в другую секцию, если выбранная не подойдет.\n\n12. **Личные ощущения:**\n    - Важно, чтобы вы или ваш ребенок чувствовали себя комфортно и рады посещать тренировки.\n\nПомните, что выбор спортивной секции должен быть осознанным и учитывать как физические, так и психологические аспекты. Постарайтесь провести время на пробных занятиях, чтобы лучше понять, подходит ли выбранная секция вашим ожиданиям и потребностям.\n\nУдачи в поиске и спортивных достижений!",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**GraphQL** — это современный язык запросов для API, разработанный компанией Facebook в 2012 году и открытый для сообщества в 2015 году. Он предоставляет эффективный, мощный и гибкий подход к взаимодействию между клиентом и сервером, позволяя запрашивать именно те данные, которые необходимы, и ничего лишнего.\n\n### Основные особенности GraphQL:\n\n1. **Запросы по необходимости**: Клиент может точно указать, какие поля и связанные данные ему нужны, что предотвращает переизбыточную передачу данных.\n2. **Типизация**: Схема GraphQL описывает типы данных и отношения между ними, обеспечивая строгую типизацию и автодокументирование API.\n3. **Единая точка входа**: Все запросы отправляются на один конечный URL-адрес, в отличие от REST, где может быть множество конечных точек.\n4. **Поддержка реальных времени**: Через подписки (subscriptions) можно получать обновления данных в реальном времени.\n5. **Инструменты разработки**: Существует множество инструментов, таких как GraphiQL и Apollo Studio, которые облегчают разработку и тестирование.\n\n### Сравнение GraphQL и REST:\n\n**REST (Representational State Transfer)** — архитектурный стиль для создания сетевых приложений. В REST API ресурсы представлены URI, и взаимодействие происходит через стандартные HTTP методы (GET, POST, PUT, DELETE и т.д.).\n\n| Характеристика        | REST                                               | GraphQL                                         |\n|-----------------------|----------------------------------------------------|-------------------------------------------------|\n| **Структура запросов**| Множество конечных точек для разных ресурсов       | Единая конечная точка с возможностью детализированных запросов |\n| **Переизбыточность**  | Возможны запросы лишних данных или необходимость нескольких запросов | Запрашиваются только нужные поля, минимизируется объем передаваемых данных |\n| **Версионирование**   | Часто требует версионирования API при изменениях    | Гибкость схемы позволяет эволюцию без версий    |\n| **Типизация**        | Нет встроенной типизации                           | Строгая типизация через схему                   |\n| **Инструменты**       | Ограниченные возможности автодокументации и тестирования | Богатый набор инструментов для разработки и тестирования |\n\n### Когда GraphQL лучше REST:\n\n1. **Комплексные запросы к данным**: Если клиенту необходимо получить связанные данные из разных источников, GraphQL позволяет сделать это в одном запросе, тогда как в REST может потребоваться несколько запросов к разным конечным точкам.\n2. **Оптимизация производительности**: Благодаря возможности запрашивать только необходимые поля, снижается объем передаваемых данных, что особенно важно для мобильных приложений с ограниченной пропускной способностью.\n3. **Частые изменения требований**: Если API постоянно развивается и требования к данным меняются, GraphQL предоставляет большую гибкость, позволяя клиентам адаптироваться без необходимости обновления версий API.\n4. **Разработка с большим количеством клиентов**: Когда API обслуживает различные типы клиентов (веб, мобильные, IoT и т.д.), каждый из которых имеет свои уникальные потребности в данных, GraphQL позволяет каждому клиенту запрашивать именно то, что ему нужно.\n5. **Реальные время и подписки**: Если требуется поддержка обновлений данных в реальном времени, GraphQL с подписками предоставляет встроенные механизмы для этого.\n\n### Заключение\n\nGraphQL представляет собой мощную альтернативу REST, особенно в сценариях, требующих гибкости, эффективности и сложных выборок данных. Однако выбор между GraphQL и REST зависит от конкретных потребностей проекта, его сложности и команды разработки. В некоторых случаях сочетание обоих подходов может быть наиболее эффективным.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Травяные чаи издавна ценятся за свои вкусовые качества и многочисленные полезные свойства. Вот некоторые из основных преимуществ употребления травяных чаев:\n\n1. **Успокаивающий эффект**:\n   - **Ромашка** снижает уровень стресса и помогает при бессоннице.\n   - **Мята перечная** обладает расслабляющим действием и облегчает головные боли.\n\n2. **Улучшение пищеварения**:\n   - **Имбирь** способствует улучшению пищеварения и уменьшению тошноты.\n   - **Фенхель** помогает при вздутии живота и дискомфорте в желудке.\n\n3. **Антиоксидантные свойства**:\n   - **Зеленый чай** богат антиоксидантами, которые борются с вредными свободными радикалами и могут замедлять процесс старения.\n   - **Тёмные травы**, такие как шиповник, также содержат много антиоксидантов.\n\n4. **Поддержка иммунной системы**:\n   - **Эхинацея** способствует укреплению иммунитета и помогает в борьбе с инфекциями.\n   - **Календула** обладает противовоспалительными свойствами.\n\n5. **Помощь в снижении веса**:\n   - **Зеленый чай** ускоряет метаболизм и может помочь в контроле веса.\n   - **Мате** часто используется для повышения энергии и снижения аппетита.\n\n6. **Улучшение состояния кожи**:\n   - **Крапива** помогает очищать кровь и улучшать состояние кожи.\n   - **Лаванда** обладает антисептическими свойствами и помогает при акне.\n\n7. **Облегчение менструальных симптомов**:\n   - **Имбирь** и **лаванда** могут уменьшать болевые ощущения и спазмы.\n   - **Мята перечная** помогает уменьшить вздутие и дискомфорт.\n\n8. **Поддержка сердечно-сосудистой системы**:\n   - **Женьшень** может улучшать кровообращение и снижать уровень холестерина.\n   - **Гибискус** помогает снижать артериальное давление.\n\n**Важно помнить**:\nХотя травяные чаи обладают множеством полезных свойств, они не являются заменой медицинским препаратам и лечению. Перед началом регулярного употребления определенных трав, особенно если у вас есть хронические заболевания или вы принимаете лекарства, рекомендуется проконсультироваться с врачом.\n\n**Заключение**:\nТравяные чаи — это вкусный и натуральный способ поддержать своё здоровье. Разнообразие трав позволяет выбрать напиток на любой вкус и под конкретные нужды организма. Включение травяных чаев в ежедневный рацион может способствовать улучшению общего самочувствия и стимулировать естественные защитные механизмы организма.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Выбор языка программирования для бэкенда — важное решение, которое может существенно повлиять на успех вашего проекта. Вот несколько советов, которые помогут вам сделать обоснованный выбор:\n\n### 1. **Анализ требований проекта**\n   - **Тип приложения**: Например, для высоконагруженных систем лучше подойдут языки с высокой производительностью, такие как **Go** или **Java**.\n   - **Функциональные особенности**: Если проект требует интенсивной обработки данных или машинного обучения, **Python** будет отличным выбором благодаря широкому спектру библиотек.\n\n### 2. **Производительность и масштабируемость**\n   - **Go**: Отличается высокой производительностью и легкостью масштабирования, что делает его подходящим для микросервисов и высоконагруженных систем.\n   - **Java**: Надежен для крупных корпоративных приложений с высокой нагрузкой.\n   - **Node.js (JavaScript)**: Хорош для приложений с большим количеством параллельных соединений, например, реального времени.\n\n### 3. **Экосистема и наличие библиотек**\n   - **Python**: Широкий выбор библиотек для различных задач, что ускоряет разработку.\n   - **Ruby**: Фреймворк **Ruby on Rails** облегчает создание веб-приложений.\n   - **C# (.NET)**: Богатый набор инструментов и библиотек от Microsoft, особенно подходит для интеграции с другими продуктами этой компании.\n\n### 4. **Сообщество и поддержка**\n   - **JavaScript/Node.js**: Огромное сообщество и множество ресурсов для обучения и решения проблем.\n   - **PHP**: Длительное присутствие на рынке и обширная база готовых решений, особенно для веб-разработки.\n\n### 5. **Опыт команды**\n   - Выбор языка, с которым ваша команда уже знакома, может значительно сократить время разработки и снизить количество ошибок.\n   - Если планируется расширение команды, стоит обратить внимание на языки с большим сообществом и доступными специалистами, такие как **JavaScript**, **Python** или **Java**.\n\n### 6. **Безопасность**\n   - Некоторые языки и фреймворки предоставляют встроенные механизмы безопасности, что облегчает защиту приложения от распространенных угроз.\n   - Например, **Java** и **C#** имеют сильные типизированные системы и встроенные меры безопасности.\n\n### 7. **Будущее и поддержка**\n   - Выбирайте языки, которые активно развиваются и имеют перспективы на будущее. Это гарантирует поддержку новых технологий и стандартов.\n   - Популярные языки, такие как **Python**, **JavaScript**, **Go** и **Java**, продолжают активно развиваться и использоваться в индустрии.\n\n### **Популярные языки для бэкенда и их особенности**\n\n- **Python**: Прост в изучении, богат экосистемой, подходит для веб-разработки (Django, Flask), научных исследований и автоматизации.\n- **JavaScript (Node.js)**: Позволяет использовать один язык как на фронтенде, так и на бэкенде, имеет большое количество модулей.\n- **Java**: Надежен, подходит для крупных корпоративных приложений, имеет мощные фреймворки (Spring).\n- **Ruby**: Быстрая разработка веб-приложений с использованием Ruby on Rails, удобно для стартапов.\n- **Go**: Высокая производительность, простота, подходит для микросервисной архитектуры.\n- **C# (.NET)**: Подходит для разработки на платформе Windows, интеграция с другими продуктами Microsoft, хорош для корпоративного ПО.\n- **PHP**: Широко используется для веб-сайтов и систем управления контентом (WordPress, Laravel).\n\n### **Заключение**\n\nВыбор языка программирования для бэкенда зависит от множества факторов, включая требования проекта, опыт команды, необходимую производительность и экосистему. Рекомендуется тщательно оценить все аспекты и, возможно, протестировать несколько вариантов перед окончательным решением. Важно также учитывать долгосрочную поддержку и развитие выбранного языка, чтобы обеспечить устойчивость и масштабируемость вашего приложения в будущем.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Ежедневная физическая активность приносит множество преимуществ для здоровья и общего благополучия. Вот основные из них:\n\n1. **Улучшение сердечно-сосудистой системы:**\n   - Повышает выносливость сердца и легких.\n   - Снижает риск развития гипертонии, инсульта и сердечных заболеваний.\n   - Способствует нормализации уровня холестерина и артериального давления.\n\n2. **Контроль и поддержание веса:**\n   - Помогает сжигать калории, что способствует снижению веса или его поддержанию.\n   - Ускоряет обмен веществ, улучшая способность организма использовать энергию.\n\n3. **Укрепление мышц и костей:**\n   - Повышает мышечную массу и силу.\n   - Укрепляет кости, снижая риск остеопороза и переломов.\n   - Улучшает гибкость и подвижность суставов.\n\n4. **Психологическое здоровье:**\n   - Снижает уровень стресса, тревоги и симптомов депрессии благодаря выработке эндорфинов.\n   - Улучшает настроение и общее эмоциональное состояние.\n   - Способствует лучшему самочувствию и уверенности в себе.\n\n5. **Улучшение когнитивных функций:**\n   - Повышает концентрацию внимания и память.\n   - Стимулирует рост новых нейронных связей в мозге.\n   - Снижает риск развития когнитивных нарушений и заболеваний, таких как деменция.\n\n6. **Повышение уровня энергии и выносливости:**\n   - Улучшает общую физическую форму, что позволяет выполнять повседневные задачи с меньшими усилиями.\n   - Увеличивает общий уровень энергии и снижает чувство усталости.\n\n7. **Качественный сон:**\n   - Способствует более глубокому и качественному сну.\n   - Помогает регулировать циркадные ритмы, что облегчает засыпание и пробуждение.\n\n8. **Профилактика хронических заболеваний:**\n   - Снижает риск развития диабета 2 типа, некоторых видов рака и других хронических заболеваний.\n   - Поддерживает иммунную систему, помогая организму эффективнее бороться с инфекциями.\n\n9. **Социальные преимущества:**\n   - Возможность завести новых друзей и расширить социальные связи при занятиях в группах или спортивных клубах.\n   - Улучшает командные навыки и сотрудничество.\n\n10. **Улучшение качества жизни и долголетие:**\n    - Способствует более активному и независимому старению.\n    - Увеличивает продолжительность жизни за счет предотвращения ряда заболеваний и улучшения общего состояния здоровья.\n\nВключение физической активности в ежедневный распорядок способствует не только физическому, но и эмоциональному и социальному благополучию, делая жизнь более полноценной и здоровой.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Тестирование мобильных приложений на разных платформах является важным этапом разработки, обеспечивающим корректную работу приложения на различных устройствах и операционных системах. Вот подробное руководство по тестированию мобильных приложений на разных платформах:\n\n### 1. **Определение Целей и Платформ**\n\nПрежде чем начать тестирование, необходимо определить, на каких платформах будет работать ваше приложение. Чаще всего это:\n- **iOS** (устройства Apple)\n- **Android** (устройства различных производителей)\n- **Другие платформы** (например, Windows Phone, если актуально)\n\n### 2. **Виды Тестирования**\n\nДля обеспечения качества приложения следует провести следующие виды тестирования:\n\n- **Функциональное тестирование**: Проверка всех функций приложения на соответствие требованиям.\n- **Юзабилити-тестирование**: Оценка удобства использования интерфейса.\n- **Тестирование производительности**: Измерение скорости работы, потребления ресурсов и стабильности приложения.\n- **Тестирование совместимости**: Проверка работы приложения на разных устройствах, операционных системах, версиях ОС и конфигурациях.\n- **Тестирование безопасности**: Обеспечение защиты данных и предотвращение потенциальных уязвимостей.\n- **Регрессионное тестирование**: Проверка, что новые изменения или исправления не нарушили уже работающие функции.\n- **Тестирование интерфейса (UI/UX)**: Проверка визуальных элементов и пользовательского опыта.\n\n### 3. **Стратегии Тестирования на Разных Платформах**\n\n- **Использование эмуляторов и симуляторов**: Позволяет быстро тестировать приложение без необходимости использования физических устройств. Однако, для окончательной проверки рекомендуется тестировать на реальных устройствах.\n  \n- **Тестирование на реальных устройствах**: Обеспечивает наиболее точные результаты, учитывая реальные условия эксплуатации, такие как различия в аппаратном обеспечении и сенсорах.\n\n- **Автоматизированное vs. Ручное тестирование**:\n  - **Автоматизированное тестирование** подходит для повторяющихся задач, регрессионного тестирования и повышения эффективности.\n  - **Ручное тестирование** необходимо для оценки пользовательского опыта, обнаружения визуальных дефектов и ситуаций, которые сложно автоматизировать.\n\n### 4. **Инструменты для Кроссплатформенного Тестирования**\n\n- **Appium**: Популярный инструмент с открытым исходным кодом для автоматизированного тестирования мобильных приложений на iOS и Android.\n- **Selenium**: Хотя в основном предназначен для веб-приложений, его можно использовать вместе с Appium для мобильных приложений.\n- **Xamarin Test Cloud (сейчас часть Microsoft App Center)**: Предоставляет облачную инфраструктуру для тестирования на реальных устройствах.\n- **TestFairy**: Инструмент для тестирования, позволяющий отслеживать сессии пользователей и получать подробные отчеты о багах.\n- **Firebase Test Lab**: Облачный сервис от Google для тестирования Android и iOS приложений на различных устройствах.\n- **BrowserStack/App Live**: Предоставляет доступ к большому количеству реальных устройств для тестирования через облако.\n\n### 5. **Учет Особенностей Платформ**\n\n- **Различия в UI/UX**: iOS и Android имеют разные руководства по дизайну (Human Interface Guidelines и Material Design соответственно). Важно обеспечить соответствие приложения стандартам каждой платформы.\n  \n- **Различия в функциональности API**: Некоторые функции могут реализовываться по-разному или быть доступными только на одной платформе.\n  \n- **Различия в производительности и управлении ресурсами**: Оптимизация под конкретную платформу может потребоваться для обеспечения лучшей производительности.\n\n### 6. **Поддержка Разных Версий Операционных Систем**\n\nУбедитесь, что приложение корректно работает не только на последних версиях ОС, но и на старых версиях, которые все еще используются пользователями. Это расширяет охват аудитории и повышает удовлетворенность пользователей.\n\n### 7. **Тестирование Разных Разрешений и Размеров Экранов**\n\nМобильные устройства имеют различные размеры экранов и разрешения. Проверьте, как интерфейс приложения адаптируется и отображается на устройствах с маленькими и большими экранами, а также с различной плотностью пикселей.\n\n### 8. **Автоматизация Тестирования**\n\nАвтоматизация позволяет сократить время на тестирование и повысить его эффективность. Интеграция автоматизированных тестов в CI/CD (Continuous Integration/Continuous Deployment) процессы обеспечивает постоянную проверку качества при внесении изменений в код.\n\n### 9. **Лучшие Практики**\n\n- **Ранняя интеграция тестирования**: Начинайте тестирование на ранних этапах разработки, чтобы выявлять и исправлять дефекты своевременно.\n  \n- **Постоянное обновление тестовых сценариев**: Обновляйте тест-кейсы в соответствии с изменениями требований и функциональности приложения.\n  \n- **Использование комбинации автоматизированных и ручных тестов**: Это обеспечивает максимальное покрытие и качество тестирования.\n  \n- **Регулярный мониторинг и анализ результатов тестирования**: Помогает выявлять повторяющиеся проблемы и улучшать процессы разработки и тестирования.\n\n### 10. **Заключение**\n\nТестирование мобильных приложений на разных платформах требует тщательного планирования и использования разнообразных подходов и инструментов. Следуя приведённым рекомендациям и лучшим практикам, вы сможете обеспечить высокое качество своего приложения, удовлетворяющее потребностям пользователей на различных устройствах и операционных системах.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Искусственный интеллект (ИИ) становится все более важным инструментом в медицинской диагностике, улучшая точность, скорость и эффективность диагностики различных заболеваний. Основные принципы применения ИИ в этой области включают следующие аспекты:\n\n### 1. **Машинное обучение и глубокое обучение**\n- **Машинное обучение (ML)**: Подходы ML позволяют системам обучаться на исторических медицинских данных, выявлять закономерности и делать прогнозы или классификации. Это включает алгоритмы регрессии, деревья решений, случайные леса и другие.\n- **Глубокое обучение (Deep Learning)**: Подвид ML, использующий нейронные сети с большим количеством слоев (глубокие нейронные сети). Особенно эффективны в обработке сложных данных, таких как медицинские изображения (рентген, МРТ, КТ).\n\n### 2. **Обработка и анализ медицинских данных**\n- **Медицинские изображения**: ИИ может автоматически распознавать аномалии на изображениях, такие как опухоли, повреждения тканей или другие патологические изменения.\n- **Электронные медицинские записи (ЭМЗ)**: Анализ структурированных и неструктурированных данных из ЭМЗ для выявления паттернов, риска заболеваний или предсказания исходов лечения.\n- **Геномные данные**: Использование ИИ для анализа генетической информации с целью идентификации генетических маркеров заболеваний и персонализации лечения.\n\n### 3. **Диагностические алгоритмы**\nИИ-системы разрабатываются для поддержки врачей в постановке диагнозов путем предоставления рекомендаций на основе анализа большого объема данных. Примеры включают:\n- **Рентгенологические системы**: Автоматическое обнаружение переломов, опухолей или других аномалий.\n- **Кардиологические системы**: Анализ ЭКГ для выявления аритмий или других сердечных заболеваний.\n- **Онкологические системы**: Определение стадии рака, прогнозирование ответа на терапию.\n\n### 4. **Персонализированная медицина**\nИИ помогает разрабатывать индивидуализированные планы лечения, учитывая уникальные характеристики пациента, включая генетические данные, историю болезни и образ жизни.\n\n### 5. **Предиктивная аналитика**\nПрименение ИИ для прогнозирования вероятности развития определенных заболеваний на основе текущих данных пациента, что позволяет проводить профилактические меры и раннее вмешательство.\n\n### 6. **Обработка естественного языка (NLP)**\nИИ используется для анализа медицинских текстов, таких как записи врачей, научные статьи и клинические рекомендации, что облегчает доступ к важной информации и поддерживает принятие решений.\n\n### **Преимущества применения ИИ в медицинской диагностике:**\n- **Повышенная точность**: Снижение числа ошибок диагностики за счет анализа больших объемов данных.\n- **Скорость обработки**: Быстрая обработка и анализ данных, что ускоряет постановку диагноза.\n- **Доступность**: Возможность предоставления качественной диагностики в отдаленных или недостаточно обеспеченных медицинских учреждениях.\n\n### **Вызовы и ограничения:**\n- **Качество данных**: Необходимость в высококачественных и репрезентативных данных для обучения моделей.\n- **Конфиденциальность и безопасность**: Защита личных медицинских данных пациентов.\n- **Прозрачность алгоритмов**: Обеспечение понимания и объяснимости решений, принимаемых ИИ-системами.\n- **Этические вопросы**: Вопросы ответственности, справедливости и возможного смещения (bias) в алгоритмах.\n\n### **Примеры успешного применения ИИ:**\n- **IBM Watson Health**: Помогает в онкологической диагностике и выборе оптимальных методов лечения.\n- **Google DeepMind**: Разрабатывает системы для анализа глазных изображений и диагностики заболеваний сетчатки.\n- **PathAI**: Использует ИИ для анализа патологических слайдов и улучшения точности диагнозов рака.\n\n### **Заключение**\nПрименение искусственного интеллекта в медицинской диагностике открывает новые горизонты для улучшения качества здравоохранения. Несмотря на существующие вызовы, продолжающиеся исследования и разработки способствуют интеграции ИИ в клиническую практику, обеспечивая более точные, своевременные и персонализированные медицинские услуги.\n\nЕсли у вас есть дополнительные вопросы или требуется более подробная информация по конкретным аспектам использования ИИ в медицине, пожалуйста, дайте знать!",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "**Serverless-архитектура**, или безсерверная архитектура, представляет собой модель облачных вычислений, при которой разработчикам не требуется управлять серверами или инфраструктурой. Несмотря на название, серверы всё же используются, однако их настройка, управление и масштабирование полностью возлагаются на облачного провайдера, такого как AWS, Azure или Google Cloud. Разработчики могут сосредоточиться исключительно на написании кода и бизнес-логике приложения.\n\n### Основные характеристики Serverless-архитектуры:\n\n1. **Автоматическое масштабирование**: Облачный провайдер автоматически масштабирует ресурсы в зависимости от текущей нагрузки, обеспечивая высокую производительность без необходимости ручного вмешательства.\n\n2. **Оплата за использование**: Вы оплачиваете только фактическое время выполнения функций и использованные ресурсы, что может привести к снижению затрат по сравнению с традиционными моделями.\n\n3. **Событийно-ориентированная модель**: Функции обычно запускаются в ответ на определённые события, такие как HTTP-запросы, изменения в базе данных, загрузка файлов и другие.\n\n4. **Быстрое развёртывание**: Возможность быстро внедрять и обновлять отдельные функции или сервисы без необходимости развертывания всего приложения.\n\n### Где использовать Serverless-архитектуру:\n\n1. **API и микросервисы**: Создание и управление отдельными сервисами, которые выполняют специфические функции и могут взаимодействовать между собой через API.\n\n2. **Обработка данных в реальном времени**: Анализ и обработка потоковых данных, таких как логи, события из IoT-устройств или данные из социальных сетей.\n\n3. **Автоматизация и бэкграунд-задачи**: Выполнение периодических задач, например, резервное копирование данных, отправка уведомлений, обработка файлов и др.\n\n4. **Веб-приложения**: Реализация бэкенда для веб-приложений, включая аутентификацию пользователей, управление сессиями и обработку запросов.\n\n5. **Чат-боты и голосовые помощники**: Обработка пользовательских запросов и выполнение соответствующих действий на основе взаимодействия.\n\n6. **Интернет вещей (IoT)**: Управление и обработка данных от большого количества подключённых устройств без необходимости масштабирования серверной инфраструктуры вручную.\n\n### Преимущества Serverless-архитектуры:\n\n- **Снижение затрат**: Оплата только за использованные ресурсы и время выполнения функций.\n- **Упрощение разработки**: Фокус на бизнес-логике без необходимости управлять инфраструктурой.\n- **Масштабируемость**: Автоматическое масштабирование в зависимости от нагрузки.\n- **Быстрое развёртывание и обновление**: Возможность быстро внедрять новые функции и исправления.\n\n### Ограничения и особенности:\n\n- **Холодные старты**: Время инициализации функций при первом запуске может быть выше, что влияет на время отклика.\n- **Ограничения по времени выполнения**: Многие услуги serverless имеют ограничения на максимальное время выполнения функции.\n- **Провайдерская привязка**: Возможная зависимость от специфических функций и сервисов конкретного облачного провайдера.\n- **Мониторинг и отладка**: Более сложные процессы мониторинга и отладки распределённых функций по сравнению с традиционными серверами.\n\n### Заключение\n\nServerless-архитектура подходит для проектов, требующих гибкого масштабирования, быстрого развёртывания и оптимизации затрат. Особенно эффективна в случаях непредсказуемой нагрузки, длительных циклов разработки и необходимости сосредоточиться на бизнес-логике без отвлечения на управление серверной инфраструктурой. Однако перед выбором данной архитектуры важно учитывать её ограничения и особенности, чтобы обеспечить соответствие требованиям проекта.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Чай — один из самых популярных напитков в мире, известный своим разнообразием вкусов и полезными свойствами. Различные виды чая обладают уникальными преимуществами для здоровья благодаря содержанию различных биологически активных веществ. Рассмотрим основные виды чая и их пользу:\n\n### 1. Зеленый чай (Зелень)\n**Польза:**\n- **Антиоксиданты:** Богат полифенолами, такими как катехины, которые помогают бороться со свободными радикалами и защищают клетки от повреждений.\n- **Ускорение метаболизма:** Может способствовать повышению сжигания калорий и поддержке потери веса.\n- **Поддержка сердечно-сосудистой системы:** Снижает уровень плохого холестерина (LDL) и улучшает функции сосудов.\n- **Улучшение мозговой активности:** Содержит кофеин и L-теанин, которые способствуют повышению концентрации и улучшению когнитивных функций.\n\n### 2. Черный чай (Чёрный)\n**Польза:**\n- **Здоровье сердца:** Помогает снижать риск сердечно-сосудистых заболеваний за счет улучшения уровня холестерина и снижению артериального давления.\n- **Поддержка пищеварения:** Обладает пробиотическими свойствами, что способствует здоровой микрофлоре кишечника.\n- **Антиоксидантная защита:** Содержит теафлавины и теарубигины, которые защищают клетки от оксидативного стресса.\n- **Повышение энергетики:** Высокое содержание кофеина помогает бороться с усталостью и улучшает бодрость.\n\n### 3. Улун (Оолонг)\n**Польза:**\n- **Контроль веса:** Способствует ускорению обмена веществ и уменьшению жировых отложений.\n- **Здоровье костей:** Может повышать плотность костной ткани и снижать риск остеопороза.\n- **Детоксикация организма:** Помогает выводить токсины и поддерживает здоровье печени.\n- **Стабилизация уровня сахара:** Способствует регулированию уровня глюкозы в крови, что полезно для профилактики диабета.\n\n### 4. Белый чай (Белый)\n**Польза:**\n- **Высокое содержание антиоксидантов:** Содержит катехины и другие антиоксиданты, способствующие замедлению процессов старения.\n- **Здоровье кожи:** Помогает в борьбе с признаками старения, поддерживает упругость и эластичность кожи.\n- **Низкое содержание кофеина:** Подходит для людей, чувствительных к кофеину, способствует релаксации без излишней стимуляции.\n- **Поддержка иммунной системы:** Обладает антисептическими свойствами и помогает укрепить иммунитет.\n\n### 5. Травяные чаи (Травяной настой)\n**Польза:**\n- **Ромашковый чай:** Обладает успокаивающим эффектом, помогает при бессоннице и стрессах.\n- **Мятный чай:** Улучшает пищеварение, снимает тошноту и облегчает симптомы простуды.\n- **Имбирный чай:** Обладает противовоспалительными свойствами, помогает при головных болях и облегчает пищеварение.\n- **Чай с гибискусом:** Поддерживает здоровье сердечно-сосудистой системы, снижает артериальное давление.\n\n### 6. Пуэр (Пуэр)\n**Польза:**\n- **Пищеварение:** Способствует улучшению пищеварения и облегчает расстройства желудка после тяжёлой пищи.\n- **Снижение уровня холестерина:** Помогает уменьшить уровень холестерина в крови.\n- **Детоксикация:** Помогает выводить токсины и поддерживать здоровье печени.\n- **Контроль веса:** Способствует ускорению обмена веществ и снижению жировых отложений.\n\n### Общие рекомендации:\n- **Умеренность:** Несмотря на многочисленные полезные свойства, важно не превышать рекомендуемую норму потребления, чтобы избежать негативных эффектов из-за чрезмерного потребления кофеина или других компонентов.\n- **Качество чая:** Выбирайте качественные сорта чая без добавок и консервантов для максимальной пользы.\n- **Индивидуальные особенности:** Учитывайте свои индивидуальные особенности и возможные противопоказания, например, аллергии или хронические заболевания. При необходимости консультируйтесь с врачом.\n\nЧай может стать отличным дополнением к здоровому образу жизни, помогая поддерживать физическое и психическое благополучие. Выбор конкретного вида чая зависит от ваших предпочтений и целей, которые вы хотите достичь.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      },
      {
        "text": "Система контроля версий Git занимает ключевое место в современном программировании и управлении проектами по ряду причин. Рассмотрим основные аспекты её важности:\n\n1. **Отслеживание изменений:** Git позволяет фиксировать все изменения в коде или других файлах проекта. Это дает возможность видеть историю развития проекта, понимать, какие изменения были внесены кем и когда, а также отслеживать причины внесения тех или иных изменений.\n\n2. **Совместная работа:** Git облегчает совместную работу нескольких разработчиков над одним проектом. Благодаря распределенной архитектуре каждый участник может работать автономно, а затем интегрировать свои изменения с работой коллег, минимизируя конфликты и дублирование усилий.\n\n3. **Ветвление и слияние:** В Git легко создавать ветки для разработки новых фич, экспериментов или исправления ошибок. Это позволяет изолировать работы над разными задачами, не влияя на основную кодовую базу. После завершения работы ветки можно объединить обратно, сохраняя при этом чистую и упорядоченную историю изменений.\n\n4. **Безопасность и восстановление:** Git хранит полную историю изменений, что позволяет при необходимости откатиться к предыдущим версиям проекта. Это особенно важно при обнаружении ошибок или при необходимости восстановить предыдущие состояния системы.\n\n5. **Интеграция с инструментами разработки:** Git интегрируется с множеством систем непрерывной интеграции и доставки (CI/CD), системами отслеживания задач и другими инструментами, что значительно упрощает процесс разработки и развертывания приложений.\n\n6. **Децентрализованность:** В отличие от централизованных систем контроля версий, каждая копия репозитория Git содержит полную историю проекта. Это повышает надежность и позволяет работать офлайн, что особенно важно в условиях ограниченного доступа к сети.\n\n7. **Популярность и поддержка сообщества:** Git является одной из самых популярных систем контроля версий, что гарантирует обширную поддержку со стороны сообществ разработчиков, наличие множества учебных материалов, инструментов и интеграций.\n\n8. **Управление релизами и версиями:** Git облегчает управление выпусками продукта, позволяя маркировать стабильные версии, создавать релизные ветки и отслеживать изменения между версиями.\n\n9. **Автоматизация процессов:** С помощью Git можно автоматизировать различные аспекты разработки, такие как тестирование, сборка и развёртывание приложений, что повышает эффективность и снижает вероятность ошибок.\n\nВ совокупности эти преимущества делают Git незаменимым инструментом для разработки программного обеспечения, управления проектами и обеспечения высокого качества и стабильности создаваемых продуктов. Его гибкость, мощные возможности и широкая поддержка делают Git стандартом де-факто в индустрии разработки.",
        "dataset": "chatGPT o1-mini",
        "pred": 1,
        "class": 1
      }
    ],
    "false_positives": [
      {
        "text": "Испанские власти объявили об аресте четырех человек, связанных с подпольной сетью по переброске нелегальных мигрантов в Европу, использовавшейся террористической группировкой «Исламское государство» (ИГ, запрещена в России). Об этом сообщается на сайте МВД страны. Как говорится в специальном заявлении, спецслужбы установили, что подозреваемые осуществляли свою деятельность на так называемом балканском маршруте (из Турции в Грецию и страны Восточной Европы). Именно этот коридор использовался для переброски в Европу боевиков, совершивших теракты в Париже в ноябре 2015 года, в результате которых погибли 130 человек. В настоящее время следователи пытаются установить связь между деятельностью арестованных и проникновением в страны Европы террористов. Всего, по данным испанского МВД, фигуранты дела причастны к нелегальной переброске около 200 беженцев. 9 ноября этого года сообщалось, что испанские власти задержали четверых вербовщиков ИГ, которые привлекали на строну экстремистов молодых людей и детей через социальные сети. В Испании действуют повышенные меры безопасности, введенные после терактов во французской столице в ноябре прошлого года. С этого момента и по настоящее время правоохранительные органы арестовали 168 человек по подозрению в связях с террористами.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Отель для нудистов на острове Родос в Греции начал набирать новую команду сотрудников. Об этом сообщается на сайте 24.RU. Как отмечает издание, гостинице требуются горничная, три официанта, повар и помощница на кухню. При этом работодатель уточняет, что всем сотрудникам строго запрещается заниматься сексом с постояльцами. Кроме того, они должны постоянно находиться одетыми. В качестве бонусов им предлагается бесплатное питание и проживание, а также медицинская страховка. В мае в Париже открылась первая в городе выставка для посетителей-нудистов. Музей Palais de Tokyo предложил туристам прогуляться по залам галереи без одежды в специально отведенные часы. На необычном мероприятии побывали около 160 человек.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Глава администрации Ялты Андрей Ростенко заявил, что в результате аварии на распределительном газопроводе жители шести крымских поселков, таких как Виноградное, Гаспра, Кореиз, Ливадия, Ореанда и Стройгородок, а также части Ялты остались без газа. Об этом он сообщил в ходе заседания комиссии по предупреждению и ликвидации чрезвычайных ситуаций и обеспечению пожарной безопасности, отмечается на сайте ялтинского управления газового хозяйства. «Ведутся ремонтные работы. Ориентировочно газоснабжение будет восстановлено завтра, 27 ноября, к 10-00. В целом же ситуация в городе под контролем», — отметил Ростенко. По словам председателя городского совета Валерия Косарева, местные депутаты и представители общественных организаций провели обход жителей. «Мы начали оказывать помощь малоимущим гражданам, информировать население о сложившейся ситуации, проводить разъяснительную работу», — сказал Косарев. Ялтинское управление газового хозяйства просит жителей региона не оставлять без присмотра газовые приборы, а уходя из квартир, перекрыть запорные краны. 25 ноября премьер-министр Украины Арсений Яценюк заявил, что кабинет министров запретил «Нафтогазу» импортировать газ из России, а также полеты российских авиакомпаний над территорией страны, включая транзитные перевозки. «А то они (Россия — прим. «Ленты.ру») перепутали: это не они нам перестали поставлять газ, это мы прекратили закупки», — отметил украинский премьер. Он добавил, что это сделано, поскольку ценовые позиции европейских партнеров намного лучше российских. Ранее, 25 ноября, глава «Газпрома» Алексей Миллер объявил о прекращении поставок российского газа на Украину до поступления новых платежей. По его словам, 25 ноября, по состоянию на 10:00 мск «Нафтогаз Украины» выбрал ранее предоплаченные объемы российского газа. Новой предоплаты от украинской компании не поступало. При этом Миллер добавил, что уже сейчас, до наступления серьезных холодов, Украина начала активный отбор газа из подземных хранилищ (ПХГ), которые и так недостаточно заполнены. Крым вошел в состав России в марте 2014 года после референдума, на котором подавляющее большинство проголосовавших жителей региона поддержали это решение. Киев по-прежнему считает полуостров украинской территорией. В Москве в ответ подчеркивают, что процедура присоединения Крыма к России соответствовала международному праву.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "На месте крушения Boeing 737 MAX 8 авиакомпании Ethiopian Airlines в Эфиопии обнаружили необычный обломок. Об этом сообщает Reuters со ссылкой на два источника. По их информации, следователи нашли кусок стабилизатора — части хвостового оперения самолета. Как оказалось, триммер на нем стоял в необычном положении, причем оно было аналогично тому, которое было у разбившегося осенью 2018-го «Боинга» компании Lion Air. Отмечается, что положение триммера горизонтального стабилизатора может помочь определить, «клевал» ли самолет носом перед катастрофой. Агентство пишет, что ранее Федеральное авиационное управление США сообщало, что новые данные о катастрофе в Эфиопии указывают на некоторое сходство двух крушений. Подробностей в ведомстве не приводили. При этом Bloomberg отмечает, что привод триммера указывает на то, что самолет был настроен на пикирование. 15 марта эксперты во Франции начали изучать черные ящики разбившегося в Африке Boeing 737 MAX 8. В страну также прибыла группа следователей из Эфиопии. Ранее стало известно, что компания Boeing приостановила поставки самолетов модели 737 MAX. Также сообщалось, что с октября 2017 года пилоты по всему миру зарегистрировали 23 случая возникновения неполадок с этими самолетами. За последние полгода в мире зафиксированы две авиакатастрофы с участием Boeing 737 MAX. Последнее крушение произошло 10 марта в Эфиопии. Все 157 человек, находившихся на борту, погибли. Среди жертв авиакатастрофы — граждане 33 стран, в том числе трое россиян. Еще один такой же авиалайнер потерпел крушение в Индонезии 29 октября 2018 года. Самолет разбился через 13 минут после взлета, погибли 189 человек. Сообщалось, что после взлета от системы начали поступать разные показатели скорости, а затем и неверные данные одного из сенсоров угла наклона носа судна, в итоге пилоты потеряли управление.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Диссидента Владимира Буковского ввели в состояние искусственной комы после операции на сердце. Об этом русской службе «Би-би-си» рассказал помощник писателя Павел Стройлов. Буковский был прооперирован в частной клинике в Германии, где ему заменили два сердечных клапана. По словам врачей, после хирургического вмешательства состояние писателя больше не является критическим, однако угроза его жизни все еще сохраняется. 5 мая Буковский был госпитализирован в клинику в Мюнхене в тяжелом состоянии. Инфекцию, давшую осложнения на сердце, медики диагностировали у него в прошлом году. Из-за операции Буковский не смог явиться в суд на рассмотрение дела, в рамках которого он обвиняется в хранении и изготовлении детской порнографии. Заседание должно было пройти в английском графстве Кембриджшир, его перенесли на 22 мая. Сам писатель отрицает причастность к производству непристойных изображений. «Эти шокирующие обвинения застигли меня в период тяжелой болезни, и шансы на выздоровление у меня совершенно неопределенные. Тем не менее я намерен со всей энергией защищать себя от всех предъявленных мне обвинений», — подчеркнул он. Буковский — один из основателей диссидентского движения в СССР. В общей сложности он провел более 12 лет в лагерях и психиатрических клиниках на принудительном лечении. В 1976 году писателя обменяли на лидера чилийских коммунистов Луиса Корвалана, после чего советский диссидент поселился в Британии. В 2008-м Буковский пытался зарегистрироваться кандидатом на выборах президента России, однако Центризбирком отказал ему в этом.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Сотрудники ФСБ и МВД по Забайкальскому краю задержали местного жителя, у которого нашли около 500 медвежьих лап и 37 частей голов лосей для незаконного вывоза в Китай. Об этом в четверг, 28 декабря, сообщили РИА Новости в пресс-службе регионального управления Федеральной службы безопасности. Как отметили в пресс-службе, это самая крупная партия дериватов животных, изъятая за последние годы. Вывезти ее пытался житель Красночикойского района. «В салоне его личного автомобиля были обнаружены 468 медвежьих лап и 37 лицевых частей лосиных голов. Документов, подтверждающих законность добычи, у задержанного не оказалось. Предполагается, что изъятое предназначалось для перепродажи гражданам КНР и контрабандного вывоза в Китай», — пояснили там. Дериваты общим весом более 800 килограммов были упакованы в мешки из синтетического материала. Чтобы добыть такое количество медвежьих лап и голов лосей, браконьеры должны были убить более 150 животных. В настоящее время решается вопрос о привлечении владельца изъятых предметов к уголовной ответственности по статье «Незаконные добыча и оборот особо ценных диких животных».",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Начальник столичной милиции Владимир Колокольцев отправил в отставку заместителя начальника УВД Центрального административного округа по тыловому обеспечению Юрия Муравьева. Об этом сообщается в пресс-релизе, поступившем в редакцию \"Ленты.Ру\". Причиной для увольнения полковника Муравьева стала жалоба сотрудников патрульно-постовой службы УВД по Центральному округу столицы. Милиционеры сообщили, что в результате эксперимента по переподчинению сотрудников руководителям территориальных ОВД в коллективе появилась психологическая напряженность и нервозность, значительно ухудшились условия службы. Колокольцев лично отправился с проверкой в ОВД по району \"Таганский\" и обнаружил, что в комнате, где переодевались сотрудники полка, созданы \"абсолютно неприемлемые, антисанитарные условия\". \"Генерал Колокольцев отметил, что от нерадивых надо избавляться, достойных - поддерживать. Раз мы требуем от личного состава максимальной отдачи на службе, то, просто обязаны обеспечить их элементарными вещами\", - заявила пресс-секретарь главы московской милиции Жанна Ожимина. Владимир Колокольцев занял пост главы ГУВД Москвы 7 сентября 2009 года, сменив отправленного в отставку Владимира Пронина. Вскоре после его прихода президент РФ Дмитрий Медведев объявил о начале реформы МВД. Колокольцев уже сделал ряд заявлений по поводу реформы, пообещав обойтись без массовых сокращений в московской милиции, а также пообещал увеличить милиционерам зарплату и в целом улучшить условия их службы.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Итальянского шеф-повара и ресторатора Джанфранко Виссани (Gianfranco Vissani) раскритиковали в социальных сетях за его высказывания, касающиеся веганства. Во время кулинарной передачи In Onda он сравнил людей, которые не употребляют в пищу продукты животного происхождения, со свидетелями Иеговы, а само веганство назвал сектой. Об этом в понедельник, 22 августа, сообщает The Independent. Давидэ Олдани (Davide Oldani), другой повар, также участвовавший в съемках шоу, попросил Виссани не говорить ерунды, однако тот отказался менять свою точку зрения. «Это правда, и я имею в виду веганов, а не вегетарианцев. Что бы я сделал с веганами? Я хочу убить их всех», — заявил в ответ Виссани. Поддерживающие веганство пользователи соцсетей негативно отреагировали на провокационное высказывание шеф-повара. В частности, один из них заявил, что Виссани — это «живое доказательство того, что мясо вредно для человека».  Тем не менее у повара нашлись сторонники, которые начали писать комментарии в его поддержку, несмотря на множество негативных отзывов. Веганство — форма вегетарианства, приверженцы которой полностью исключают из своего рациона продукты животного происхождения.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Биржа ММВБ-РТС рассматривает возможность увеличения продолжительности торгов до 23 часов по московскому времени. Об этом заявил президент биржи Рубен Аганбегян, сообщает РИА Новости. Он добавил, что этот вопрос можно решить за счет дополнительной смены в Новосибирске. Через филиал ММВБ-РТС в Новосибирске работает большое число брокеров. Разница во времени между Новосибирском и Москвой составляет три часа, так что по местному времени они будут заканчиваться в два часа ночи. Аганбегян при этом отметил, что окончательного решения по данному вопросу еще не принято. Перспективы продления торгов будут обсуждаться с участниками рынка. Сейчас на основной сессии фондового рынка и на рынке Classica сессия заканчивается в 18:45 по московскому времени, за исключением секции FORTS, где она длится до 23:50. В 2008 году торги на ММВБ и РТС заканчивались в 18:00, но затем сессия была продлена на 45 минут. Торги ежедневно начинаются в 10:00. До объединения с РТС ММВБ начинала торговать в 10:30, но перед слиянием перенесла начало сессии на полчаса раньше.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Правительство Новой Зеландии приняло закон, сильно повышающий доступность медицинской марихуаны. Об этом сообщило агентство Associated Press. По новому закону тяжело больных пациентов не будут наказывать за нелегальное приобретение и употребление марихуаны вне специальных аптек. Ранее вещество было доступно для больных только в рамках строгой регуляции. Кроме того, новый закон даст предпринимателям возможность производить медицинские продукты из каннабиса на территории Новой Зеландии как для внутреннего рынка, так и на экспорт. Эти меры были приняты в преддверии общенационального референдума по вопросу рекреационного употребления марихуаны. По данным агентства, он пройдет в течение ближайших двух лет. Министр здравоохранения страны Дэвид Кларк отметил, что решение законодателей позволит облегчить страдания более 25 тысяч неизлечимо больных людей, которые живут с хронической болью. «Люди, жизнь которых близится к концу, не должны переживать из-за того, что их могут арестовать за попытку справиться со своей болью», — заявил он. 17 октября закон о легализации использования марихуаны в рекреационных целях вступил в силу в Канаде. В ноябре запрет на употребление марихуаны сняли в Грузии.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "В реку Темза, протекающую через Лондон, заплыла белуха — белый кит, распространенный в Арктике. Об этом сообщает Reuters. Во вторник, 25 сентября, ее заметили на юге устья Темзы. На следующий день животное видели в окрестностях британской столицы. Судя по относительно небольшим размерам, это самка или молодой самец. Остается неясным, каким образом животное оказалось в реке. Белухи не появлялись у берегов Великобритании с 2015 года, когда несколько особей видели в Северном море в районе графства Нортумберленд на северо-востоке Англии. «Наиболее вероятный сценарий, который мы не сможем подтвердить, пока не узнаем об этом животном больше, заключается в том, что его навигационная система повреждена», — говорит Люси Бейби (Lucy Babey), заведующая научными и природоохранными вопросами в благотворительной организации ORCA, которая занимается защитой китов и дельфинов. «Мы удивлены и немного опечалены, что кит появился опять, — прокомментировала она новые сообщения о белухе. — Мы надеялись, что он добрался до более глубокой воды и уплыл туда, где ему место». Белухи вырастают до 5,5 метра в длину. Они встречаются в Арктике возле Аляски, Канады, Гренландии и на севере России в Белом, Беринговом и Охотском морях. В 2001 году сообщалось, что заблудившийся в Северном море дельфин приплыл в Темзу. Речная полиция Лондона обнаружила его под мостом Блэкфрайерс, где он весело резвился на глазах у изумленных горожан.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Россия создаст в США некоммерческую организацию, которая будет следить за условиями жизни усыновленных американцами детей из РФ, пишет «Коммерсантъ». По словам пресс-секретаря российского посольства в Штатах Евгения Хоришко, пока созданию НКО мешают «чисто технические сложности». «Пока не решено, кто и как будет финансировать подобную организацию», — заявил он. Уполномоченный МИД России по вопросам прав человека, демократии и верховенства права Константин Долгов заявлял, что «случаи издевательств над малолетними приемными россиянами в американских семьях в последнее время приобрели регулярный характер». 30 января Следственный комитет РФ заявил о возбуждении уголовного дела против гражданина США Шеда ЛаВерна Трэйлора, которого заподозрили в домогательствах к его приемному сыну Максиму Бабаеву. Трэйлор уже привлекался к ответственности за применение физического насилия к сыну: американский суд приговорил его к пяти годам условно. Тема усыновления детей стала одной из ключевых в отношениях России и США после того, как президент РФ Владимир Путин запретил американцам усыновлять российских детей. Соответствующий закон был принят в ответ на «акт Магнитского», который запрещает въезд на территорию Штатов ряду российских должностных лиц. Американские парламентарии просили Владимира Путина позволить усыновить детей тем американцам, которые уже познакомились с сиротами. Кроме того, члены Конгресса обратились к президенту Бараку Обаме с просьбой сделать тему усыновления ключевой в переговорах с Россией.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Жительница девятиэтажного дома на улице Федора Полетаева в Москве устроила в своей квартире свалку. Из помещения исходит ужасный запах, но на претензии соседей женщина не реагирует. Более того, она пишет о жалобщиках гадости на стенах подъезда. Об этом сообщает «Вечерняя Москва». Как рассказал изданию один из жителей дома, москвичка приносит в свою квартиру мусор с помойки. Из-за этого во всем подъезде плохо пахнет. Здание оккупировали мухи, тараканы и мыши. Соседи жаловались на женщину в префектуру, столичный департамент имущества и в полицию, но недвижимость оформлена в ее собственность, поэтому выселить гражданку нельзя. Все жалобы женщина игнорирует, на контакт с соседями не идет — хотя те не раз просили ее выкинуть хлам и провести генеральную уборку квартиры. В ответ она написала негативные отзывы о жителях дома на стенах подъезда. Юристы рекомендовали соседям обратиться с иском в суд — он может вынести решение о принудительной санитарной обработке квартиры. В декабре 2017-го в Новгороде из муниципальной квартиры выселили женщину, превратившую свое жилище в свалку. На протяжении длительного периода времени она собирала выброшенные вещи в квартире, в итоге отходов скопилось столько, что они почти доставали до потолка. Между завалами женщина передвигалась по специальным проходам.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Следствие установило предполагаемого организатора нападения на Баксанскую ГЭС в Кабардино-Балкарии. Об этом сообщает РИА Новости со ссылкой на источники в силовых структурах. По данным оперативников ФСБ, организатором теракта стал один из главарей боевиков. Исполнители теракта также установлены. Имена организатора и исполнителей нападения не называются в интересах следствия. Теракт на Баксанской ГЭС произошел утром 21 июля. Группа из четырех или пяти человек (по другим данным, нападавших могло быть от 2 до 12) проникла на территорию станции. Нападавшие убили двоих охранников и забрали у них оружие. После этого преступники взорвали в машинном зале несколько самодельных бомб и скрылись. В результате взрывов вышли из строя два из трех гидроагрегатов, что привело к остановке работы станции. Разработка плана по восстановлению ГЭС была поручена вице-премьеру Игорю Сечину. Ему также поручено принять экстренные меры по перенаправлению энергопотоков, чтобы выход станции из строя не затронул энергопотребителей. Первый замглавы МВД России Михаил Суходольский распорядился проверить в связи с терактом действия кабардино-балкарской милиции.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "США рассматривают возможность введения экономических санкций в отношении России из-за якобы допущенных российской стороной нарушений договора о ликвидации ракет средней и меньшей дальности (РСМД). Об этом заявила заместитель госсекретаря США по контролю над вооружениями и международной безопасности Роуз Гетемюллер на слушаниях в палате представителей Конгресса США. Ее слова в среду, 2 декабря, приводит РИА Новости. «Мы продолжаем рассматривать экономические меры в связи с договором РСМД, но на данный момент мы не приняли решения», — сказала Гетемюллер. В этом контексте она назвала «невероятно эффективными» санкции против России из-за ситуации на Украине. О возможности применения мер к России за нарушения договора неоднократно заявляли американские политики и должностные лица. Последние несколько лет Россия и США взаимно обвиняют друг друга в нарушениях положений договора РСМД. США имеет претензии к крылатым ракетам Р-500 наземного комплекса «Искандер-М», а также считают новую стратегическую ракету РС-26 («Рубеж») ракетой средней дальности, запрещенной договором. Москва с конца 1990-х годов неоднократно указывала на создание в США «ракет-мишеней для испытаний систем ПРО», представляющих собой полноценные ракеты средней дальности без боевого оснащения. Также в последние годы вопросы вызывает постройка в Румынии пусковых установок для противоракет Standard SM-3, позволяющих запускать стратегические крылатые ракеты Tomahawk. В начале июня Вашингтон заявил о возможности размещения в Европе крылатых и баллистических ракет наземного базирования с ядерным оснащением. Идею положительно оценил МИД Британии. 9 июня заместитель министра обороны России Анатолий Антонов в ответ предупредил, что подобное поведение США в отношении договора РСМД влечет за собой крайне опасные последствия для международной безопасности и стабильности. 11 июня МИД России также высказал свои претензии Вашингтону по поводу размещения в Европе американских ядерных ракет.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Катастрофа вертолета Ми-8 авиакомпании \"Газпромавиа\", разбившегося в Волгоградской области в июле 2009 года, стала следствием сочетания ряда факторов, одним из которых стал брак при изготовлении лопастей рулевого винта. Об этом говорится в отчете, размещенном на сайте Межгосударственного авиационного комитета (МАК). \"Катастрофа вертолета Ми-8АМТ RA-22968 явилась следствием разрушения лопасти рулевого винта в полете, что привело к грубому приземлению вертолета с вращением на посадочную площадку, подобранную с воздуха, опрокидыванию вертолета на правый борт и интенсивному пожару\", - свидетельствует отчет МАК. Брак в комплекте лопастей, в свою очередь, объясняется применением клеящей пленки с нестабильными физико-техническими характеристиками. При этом МАК отмечает, что о нестабильности характеристик пленочного клея было известно ранее. Поэтому одной из причин гибели людей стало \"непринятие действенных мер по исключению из эксплуатации лопастей, выпущенных в период с 22.08.2002 по 04.12.2003\". Катастрофа произошла 22 июля 2009 года у села Моисеево в Волгоградской области. При крушении вертолета погибли бортмеханик и пятеро пассажиров - высокопоставленные сотрудники ООО \"ЛУКОЙЛ-Волгограднефтегаз\". Командир экипажа и второй пилот остались живы.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Компания ANALYTIC BIOSURGICAL SOLUTIONS — Abiss (Франция) намерена локализовать производство в России при поддержке Корпорации МСП. Соответствующая «дорожная карта» была подписана в Москве 21 июня 2018 года, говорится в сообщении Корпорации МСП. Документ предусматривает реализацию мероприятий по локализации производства полимерных полипропилленовых сеток для урогинекологии Abiss на территории Российской Федерации (регион размещения будет определен позднее). Корпорация МСП окажет компании Abiss содействие в поиске российского партнера для запуска производственной линии и, при необходимости, предоставит необходимую поддержку в рамках реализуемых мер. Комплексное сопровождение выхода французского производителя на российский рынок будет осуществлять компания EASTMED International Development. Реализация основных мероприятий «дорожной карты» по локализации производства компании Abiss на территории России и встраивания в цепочки поставщиков компании российских субъектов МСП запланирована на период с июля 2018 года до конца 2020 года. Компания ANALYTIC BIOSURGICAL SOLUTIONS — Abiss основана во Франции, является производителем хирургических имплантов. Основными сферами деятельности компании являются хирургия мягких тканей и инновационная хирургия. EASTMED International Development — французская компания, которая оказывает услуги по развитию европейских медицинских компаний в странах Восточной Европы, включая исследование рынка, административные процедуры, связанные с регистрацией  в части регистрации и получения необходимых разрешений на ведение деятельности на рынке, создание дистрибьютерских сетей и обучение представителей, хирургов и медсестер, оценка продаж и так далее.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Следственное управление УМВД России по Ульяновску отказалось возбудить уголовного дело по заявлению координатора \"Левого фронта\" Сергея Удальцова, обвинившего местную жительницу Анну Позднякову в заведомо ложном доносе. Об этом сообщает РИА Новости со ссылкой на пресс-службу ведомства. 22 апреля Удальцов подал заявление в полицию, в котором обвинил 20-летнюю активистку МГЕР Позднякову в заведомо ложном доносе (статья 306 УК РФ). Девушка заявила полиции, что координатор \"Левого фронта\" ее ударил во время проходившего в Ульяновске антинатовского митинга, когда она задавала ему вопросы, представившись журналистом одного из местных СМИ. Сам Удальцов назвал инцидент провокацией. После того, как Позднякова обвинила Удальцова в побоях, координатора \"Левого фронта\" доставили в полицию в Ульяновске. Однако уголовное дело против него возбуждать не стали, хотя пресс-служба управления МВД РФ по Ульяновской области сообщала, что у заявившей на Удальцова девушки было диагностировано сотрясение мозга.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Бывший кандидат в президенты Южной Осетии Алла Джиоева поздним вечером в среду, 30 ноября, провела встречу с председателем КГБ республики Борисом Аттоевым. Как сообщает \"Интерфакс\", встреча прошла за закрытыми дверями. В ней также принял участие член избирательного штаба Джиоевой Анатолий Баранкевич. Сообщается также, что Алла Джиоева вышла к своим сторонникам, которые продолжают стоять у здания правительства в Цхинвали, и заявила, что начинает переговоры с властями Южной Осетии и представителями РФ. О каких представителях России идет речь, не уточняется. Ранее 30 ноября \"Интерфакс\" сообщал со ссылкой на неназванный источник в администрации президента Южной Осетии, что в Цхинвали приехал заместитель главы администрации президента РФ Сергей Винокуров. По словам собеседника агентства, чиновник \"прибыл в республиканский КГБ и начал переговоры с руководством спецслужбы по поводу урегулирования конфликта\". По данным РИА Новости, у Дома правительства в Цхинвали остается около 700 человек, которые собрались там в знак протеста против решения Верховного суда Южной Осетии, признавшего недействительными итоги второго тура президентских выборов. Джиоева с Баранкевичем также остаются на улице с протестующими. По данным РИА Новости, которое ссылается на слова действующего президента Эдуарда Кокойты, сотрудникам госохраны дано указание стрелять в воздух, если толпа попытается прорваться в здание правительства. Джиоева, как сообщает \"Интерфакс\", призывает своих сторонников воздержаться от насилия и разойтись. \"Я очень вас прошу спрятать любые радикальные мысли. Не поддавайтесь на призывы провокаторов о штурме, нам некого штурмовать. По эту сторону тоже стоят наши ребята\", - цитирует агентство экс-кандидата в президенты ЮО. Бывший министр образования Южной Осетии Алла Джиоева победила во втором туре выборов президента республики, которые прошли 27 ноября: согласно протоколу ЦИК, она набрала 56 процентов голосов, тогда как результат ее соперника, главы МЧС ЮО Анатолия Бибилова составил 40 процентов. Бибилов, однако, подал в Верховный суд Южной Осетии жалобу, в которой заявил о нарушениях, допущенных штабом Джиоевой. В результате суд признал результаты второго тура недействительными и постановил, что должны быть проведены новые выборы. Джиоева не согласилась с таким решением и 30 ноября подала в Верховный суд соответствующую жалобу.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Антропологи из Университета Пенсильвании обнаружили, что представители африканской народности хадза не проявляют экономически иррациональной привязанности к вещам, которая характерна для большинства представителей сложных цивилизованных обществ. Исследование принято к публикации в журнале American Economic Review, кратко о нем можно прочитать на сайте университета. Исследование касается так называемого эффекта вклада или обладания (Endowment Effect). Он сводится к тому, что человеку свойственно наделять материальный предмет дополнительной ценностью просто в результате самого факта обладания им. Классический эксперимент, в котором ярко проявляется этот эффект, проводится следующим образом. Исследователь дарит добровольцу один из двух предметов, например, печенье или конфету. После того, как участник эксперимента получит подарок, исследователь предлагает поменять его на другой предмет из пары. Поскольку один из двух подарков ученый выбирает случайно, то при любом соотношении ценности двух предметов вероятность обмена должна составлять около 50 процентов. В реальности вероятность обмена редко превышает 10 процентов. Экономисты объясняют низкий процент обмена тем, что уже полученный человеком предмет имеет для него ценность не только сам по себе. Он имеет дополнительную ценность из-за того, что уже принадлежит участнику эксперимента. В новом исследовании ученые показали, что этот «эффект обладания» не является универсальным свойством человеческой психики и не проявляется в обществах, где нет личной собственности. Авторы статьи изучали поведение представителей народности хадза, которые живут на севере Танзании. Племя разделено на несколько деревень, расположенных на разных берегах крупного озера. Население деревни владеет почти всем имуществом совместно. Причем одна часть племени контактирует с туристами и другим городским населением гораздо реже, чем другая. В качестве предметов обмена ученые использовали печенья нескольких вкусов и зажигалки, отличающиеся только внешним видом. Ученые выяснили, что те хадза, что были в минимальной степени затронуты влиянием цивилизации, в эксперименте по обмену действовали экономически рационально — они были склонны меняться в 50 процентах случаев. Их соплеменники с более густонаселенной стороны озера менялись гораздо реже — только в четверти случаев. Эту разницу, как показали авторы, нельзя объяснить разделением племени на более и менее склонных общаться с цивилизацией: все участники эксперимента были коренными жителями тех деревень, где побывали исследователи. По словам ученых, результаты эксперимента говорят о том, что эффект обладания является следствием устойчивого представления о частной собственности. При этом воспитывается ли он цивилизацией, или же является врожденным, и  подавляется у тех, кто живет в условиях обобществленной собственности, сказать пока нельзя.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Курсы доллара и евро снижаются, при этом фунт стерлингов восстанавливает свои позиции. Британская валюта растет в цене, отыгрывая результаты опроса по поводу возможного выхода Соединенного Королевства из ЕС (так называемый Brexit). Об этом свидетельствуют данные Лондонской биржи. В понедельник, 20 июня, фунт подорожал к американской валюте более чем на 1,5 процента и стоит 1,46 доллара (по сравнению с 1,44 доллара по итогам сессии 17 июня). Британская валюта также укрепилась относительно единой европейской — до 1,28 евро за фунт. Согласно данным последнего опроса, опубликованного 16 июня, 45 процентов респондентов выступают за сохранение Великобритании в составе Евросоюза. 42 процента высказались против (ранее соотношение было 43 и 48 процентов соответственно). 9 июня рейтинговое агентство S&P сообщило, что самыми уязвимыми к возможному выходу Великобритании из ЕС странами являются Ирландия, Мальта, Люксембург и Кипр. 6 июня премьер-министр Великобритании Дэвид Кэмерон выступил с резкой критикой данной инициативы. «Выход Великобритании из ЕС подложит бомбу под экономику. Хуже всего будет то, что мы сами приведем в действие детонатор под собой», — заявил он. Референдум о членстве Великобритании в ЕС состоится 23 июня. На голосование будет вынесен вопрос «Должно ли Соединенное Королевство остаться членом Европейского союза?».",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Три человека, подозреваемых в ограблении лотерейного клуба на юго-востоке Москвы, задержаны милицией. Как рассказал агентству \"Интерфакс\" источник в правоохранительных органах, утром в четверг, 7 октября, менеджер клуба, расположенного на Братиславской улице, заявила, что двое вооруженных пистолетами мужчин забрали выручку в сумме 200 тысяч рублей. Спустя некоторое время на Ленинградском проспекте были задержаны приезжие из Башкирии и Белоруссии, которые предположительно совершили ограбление. Также задержан оператор клуба, которого подозревают в содействии преступникам. В последние дни в Москве участились ограбления лотерейных клубов. Так, в ночь на 7 октября помимо заведения на Братиславской были ограблены клубы возле метро \"Домодедовская\" (юг Москвы) и у метро \"Профсоюзная\" (юго-запад столицы). Ущерб составил 224 тысячи и 144 тысячи рублей соответственно. Кроме того, утром 5 октября была совершена попытка ограбления лотерейного клуба, расположенного у метро \"Октябрьское поле\" (северо-запад Москвы). Преступникам не удалось осуществить задуманное, так как им оказали сопротивление охранники.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Издательство Electronic Arts опровергло появившиеся ранее сведения, что студия Maxis прекращает поддержку игры Darkspore. Как пишет VG24/7, представители компании заявили, что Maxis продолжит содержать сервера Darkspore и исправлять возникающие в игре ошибки. Компания также указала, что недавно ей удалось исправить ошибку, из-за которой пользователи не могли зайти в игру. Помимо этого представители EA заявили, что модератор форума Darkspore, который и объявил о прекращении поддержки, не имеет никакого отношения к издательству (а следовательно, не может делать заявления от его лица). EA удалила со страницы игры его запись и заменила ее собственным объявлением, в котором говорится о продолжении поддержки игры. Портал Kotaku также сообщает о том, что Electronic Arts в настоящее время ведет переговоры с сервисом Steam, с которого Darkspore ранее была удалена из-за большого количества ошибок в игре. Как отметили представители издательства, сервис должен вернуть ее в свой каталог в самое ближайшее время. Модератор форума Darkspore написал о том, что Maxis полностью прекращает поддержку игры, в конце июня. Он также сообщил, что студия не будет исправлять критические ошибки, присутствующие в игре, и посоветовал всем пострадавшим обратиться за возмещением к представителям EA. Darkspore, которая является своего рода продолжением игры Spore Уилла Райта, существует с 2011 года. Она представляет собой фантастическую экшн-RPG. В игре есть одиночная кампания, а также мультиплеер и PvP-режим. Игра требует постоянного подключения к интернету, что и является причиной многих проблем, связанных с Darkspore.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Президент России Владимир Путин рассказал о своем видении будущего страны. Таким образом он ответил на вопрос о мотивах своего выдвижения на новый срок, заданный журналисткой издания «Говорит Москва» в рамках большой пресс-конференции. «Я уже много раз говорил, какой бы я хотел видеть Россию. Еще раз скажу: она должна быть устремлена в будущее, политическая система должна быть гибкой, а экономика построена на современных технологиях», — заявил президент. По его словам, в приоритете будет развитие инфраструктуры, здравоохранения, образования, технологий, повышение производительности труда. «Все это должно быть нацелено на то, чтобы повысить доходы граждан», — подчеркнул он. При этом Путин решил не углубляться в детали своей предвыборной программы. «Про программу свою я говорить не буду, она уже почти есть, но презентовать ее сейчас неудобно», — сказал он. 6 декабря президент России Владимир Путин заявил на встрече с работниками завода ГАЗ, что намерен снова баллотироваться на пост главы государства. Избирательная кампания начнется в период с 7 по 17 декабря 2017 года, выборы состоятся 18 марта 2018 года. Большая пресс-конференция президента России проходит в четверг, 14 декабря, уже в 13-й раз. По официальным данным, на нее зарегистрировалось рекордное количество журналистов — 1640 человек. Больше важных новостей в Telegram-канале «Лента дня». Подписывайся!",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Версия Android 4.4 KitKat осталась самой популярной модификацией платформы среди пользователей Android-устройств через более чем три месяца после выхода версии 5.0 Lollipop. Об этом свидетельствуют данные Google. Платформа Android 4.4 KitKat была выпущена Google более 15 месяцев назад, однако на ней продолжают работать почти 40 процентов устройств, с которых пользователи заходят в магазин Google Play. Наиболее актуальная платформа Android 5.0 Lollipop, финальная версия которой вышла в середине октября 2014 года, установлена на 1,6 процента устройств. Для сравнения — до новой версии операционной системы iOS 8, которая вышла в сентябре прошлого года, обновились уже 69 процентов мобильных устройств Apple. На разных версиях более ранней Android Jelly Bean работают от 6,3 до 19,8 процента пользователей. Примечательно, что около 7,4 процента устройств по-прежнему работают на Android 2.3 Gingerbread. Это наглядно демонстрирует фрагментацию платформы, которая затрудняет разработку приложений для Android. Кроме того, устройства на старых версиях Android остаются более уязвимыми для вирусов и кражи данных из-за ошибок в коде, которые Google больше не исправляет. По данным аналитической компании Gartner, Android остается лидером среди мобильных платформ для смартфонов — на ней работали более 83 процентов всех смартфонов, отгруженных за третий квартал 2014 года.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Летчик-космонавт Владимир Аксенов представил книгу \"Дорогами испытаний\", в которой подробно описал обстоятельства гибели Юрия Гагарина, сообщает РИА Новости. По версии Аксенова причиной авиакатастрофы, в которой погиб первый космонавт, стало неожиданное попадание самолета в зону сплошной облачности. Летчик утверждает, что эту версию ему в первые дни после гибели Гагарина изложил член государственной комиссии по расследованию авиакатастрофы Сергей Анохин. Комиссия так и не назвала однозначных причин катастрофы, а доклад, подготовленный по итогам расследования, остался засекреченным. Аксенов в день катастрофы, 27 марта 1968 года, проходил медицинское обследование вместе с Юрием Гагариным, но летал на другом самолете. По его словам, верхний край сплошной облачности в тот день располагался на высоте около 4000 метров, а нижний - не более 600 метров. Юрий Гагарин и Владимир Серегин, находившиеся на борту самолета МиГ-15, закончили выполнять летное задание над верхним слоем облаков и приступили к интенсивному снижению в условиях высокой облачности, причем из-за неустойчивой работы приборов не могли ориентироваться по ним. После выхода из этой зоны самолет шел к земле на скорости 700 километров в час, что не оставляло достаточно времени для выхода из пикирования. Ранее в интервью и мемуарах современники Гагарина уже упоминали, что одной из причин катастрофы, очевидно, стали сложные погодные условия, недооцененные экипажем. В январе 2010 года в прессе появилась версия бывшего военного летчика Игоря Кузнецова и группы специалистов по авиации, которые объявили, что причиной аварии стала паническая атака, которую испытал Гагарин после разгерметизации кабины МиГ-15. После первого полета в космос, совершенного 12 апреля 1961 года, Юрий Гагарин приобрел всемирную известность. Он работал в Центре подготовки космонавтов и некоторое время не имел летной практики, но затем решил восстановить квалификацию и приступил к тренировочным полетам под руководством инструктора Владимира Серегина. Имя Гагарина было присвоено многим населенным пунктам и улицам городов СССР. Кроме того, его имя носит Центр подготовки космонавтов в Звездном городке.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Банк России с волнением наблюдает за развитием конфликта вокруг Ассоциации российских банков (АРБ), но не должен в него вмешиваться. Об этом в понедельник, 17 июля, заявил заместитель председателя ЦБ Василий Поздышев, передает ТАСС. «Регулятор как Центральный банк, не являющийся членом ни одной из ассоциаций по определению, не должен вмешиваться в такие жаркие дискуссии между банками и руководством ассоциаций. Более того — давать какие либо комментарии было бы, на мой взгляд, некорректно», — добавил он. Ранее 17 июля крупнейшие российские финансовые организации — Сбербанк, ВТБ, ВТБ 24, «Открытие», Россельхозбанк, Газпромбанк, Бинбанк и Альфа-банк — объявили о выходе из АРБ. В кредитных учреждениях отметили, что эффективность работы ассоциации снижается, а конструктивный диалог внутри банковского сообщества заменяется многочасовыми речами. Глава АРБ Гарегин Тосунян в отставку уходить не планирует. В конце марта ассоциация обвинила Банк России в том, что регулятор относится неодинаково к кредитным организациям с разным объемом капитала. В тот же день Альфа-банк заявил, что не согласен с тезисами АРБ и приостанавливает членство в объединении.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Мужчина, погибший в результате ДТП с участием автомобиля Министерства обороны в Москве, не имеет отношения к правоохранительным органам. Об этом сообщили радиостанции «Говорит Москва» в столичном главке МВД. «Это не соответствует действительности. Сотрудник полиции в данной аварии не участвовал», — рассказал собеседник радиостанции. Ранее в ряде СМИ появилась информация со ссылкой на очевидцев аварии о том, что сбитый на Кутузовском проспекте мужчина являлся сотрудником ГИБДД. ДТП на Кутузовском проспекте произошло в четверг, 21 июня. В Министерстве обороны пояснили, что подведомственный автомобиль BMW двигался по разделительной полосе с включенными проблесковыми маячками. Пешеход переходил дорогу в неположенном месте. После ДТП водитель оказал пострадавшему первую медицинскую помощь, а также вызвал на место происшествия скорую помощь и сотрудников ГИБДД.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Компания Intel планирует создать линейку процессоров, предназначенных исключительно для планшетов. Об этом со ссылкой на анонимные источники сообщает тайваньское издание DigiTimes. Официального подтверждения этой информации нет. Разработка планшетных чипов входит в планы Intel на 2012 год, указывает DigiTimes. На рынке чипы будут конкурировать с продукцией на архитектуре ARM. Одной из основных задач Intel видит обеспечение высокой производительности процессоров при минимальном энергопотреблении. Параллельно Intel будет развивать линейку процессоров для смартфонов под кодовым названием Medfield. Сообщения о чипах Medfield, которые якобы находятся в разработке, появлялись в прессе и ранее, но тогда предполагалось, что они будут использоваться как в смартфонах, так и в планшетах. Первые чипы Intel для смартфонов и планшетов будут выпускать по 32-нанометровому техпроцессу, но в ближайшие три года компания намерена освоить 22- и 14-нанометровую технологию.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Студия Red Thread Games, которая работает над продолжением серии The Longest Journey, решила выпустить ужастик. О том, что компания займется проектом под названием Draugen, сообщается на официальном сайте RTG. В описании игры говорится, что она представляет собой приключенческий хоррор с видом от первого лица, события которого разворачиваются в 20-х годах прошлого столетия. Действие игры развернется в Норвегии, а ее главным героем станет американский фотограф, который отправится туда снимать природу. Сюжет Draugen будет связан со скандинавской мифологией. Его подробности пока не разглашаются, однако известно, что герою нужно будет установить истину о трагическом происшествии, которое случилось в норвежской деревне. Представители студии пояснили, что второй проект, которым они планируют заняться, не повлияет на разработку игры Dreamfall Chapters. По их словам, созданием Draugen займется отдельная команда, и те сотрудники студии, которые уже заняты продолжением The Longest Journey, участвовать в разработке хоррора не будут. Как отметили представители RTG, они смогли заняться параллельным проектом потому, что получили грант на разработку игры от Норвежского института кино. Его размер составил 144 тысячи долларов. Будет ли студия позже привлекать дополнительное финансирование, пока неясно. Продолжение серии The Longest Journey, над которым сейчас работает студия, должно выйти в конце 2014 года. Игру, которую анонсировали еще в 2007 году, однако затем заморозили, в начале 2013 года решили воскресить. Средства на нее гейм-дизайнер Рагнар Торнквист и его новая студия RTG собрали с помощью сайта Kickstarter.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Космические войска России успешно испытали маневрирующий спутник, способный подлетать к другим орбитальным аппаратам, осматривать их и при необходимости перехватывать, сообщили «Известиям» в Минобороны. В ходе тестов спутник отстыковался от околоземной платформы «Космос-2519», запущенной 23 июня 2017 года. Аппарат, поменяв орбиту, вернулся к платформе и осмотрел ее. В результате испытаний по управлению маневрирующим военным спутником протестированы наземные и орбитальные средства связи, проверены методики баллистических расчетов и программное обеспечение. Также подтверждена возможность автоматической отстыковки спутника от платформы, дистанционного управления его полетом и использования бортового оборудования. Подобные спутники-убийцы, в перспективе предназначенные не только для наблюдения за другими аппаратами, но и их перехвата, станут важным элементом российской орбитальной группировки, выполняя, как отмечает издание, сдерживающую роль в космической военной гонке.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Во время тестирования самолета в городе Розуэлл (Roswell) в штате Нью-Мексико погибли четверо человек, сообщает местный телеканал KRQE News в субботу, 2 апреля. Инцидент произошел в аэропорту Roswell International Air Center, находящемся в 11 километрах от Розуэлла. Самолет Gulfstream G650 совершал испытательный полет. По неизвестным причинам, только поднявшись в воздух, судно приземлилось на взлетно-посадочную полосу и загорелось. На борту самолета находилось четверо человек; все они погибли. Полиция начала расследование инцидента. Аэропорт Розуэлла временно приостановил работу. О том, когда он начнет функционировать в нормальном режиме, не сообщается.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Более 23 миллиардов долларов российского происхождения были отмыты через коммерческие банки Молдавии. Об этом сообщил бывший замначальника службы по предупреждению и борьбе с отмыванием денег Национального центра по борьбе с коррупцией (НЦБК) Молдавии Михаил Гофман, передает «Интерфакс» со ссылкой на телеканал TV7. Бывший сотрудник НЦБК сказал, что в 2012-2014 годах через банковскую систему Молдавии «отмывались огромные деньги, в том числе из России». Руководству республики было хорошо известно, что за четыре года через молдавские банки прошли 23 миллиарда долларов, сказал Гофман. Он сообщил, что только за первую половину 2013 года сумма перечисленных в офшоры денег из Молдавии составила 92 миллиарда леев (около шести миллиардов долларов). Осенью 2014 года Кишинев зафиксировал масштабную схему вывода средств из России в Молдавию с использованием сфальсифицированных судебных постановлений. В схеме участвовал 21 российский банк.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Компания «ЦРТ-инновации», являющаяся  резидентом «Сколково», помогла банку ВТБ24 в пилотном внедрении бимодальной биометрии (голос+лицо) в мобильном приложении, говорится в пресс-релизе, поступившем в «Ленту.ру». Пилотный проект по внедрению биометрической аутентификации было решено проводить на платформе мобильного приложения банка, активная аудитория которого составляет более полутора миллиона активных пользователей. При этом транзакционная активность в мобильном банке постоянно растет,  она уже обогнала аналогичный показатель интернет-банка. В январе 2017 года ВТБ24 сформировал фокус-группу более чем из тысячи клиентов  — пользователей мобильного приложения банка.  К 1 апреля пилот планируется завершить и подвести итоги: насколько бимодальная биометрия эффективна, удобна, востребована как способ аутентификации в мобильном банке ВТБ24. «В прошлом году представители руководства и эксперты банка ВТБ во главе с заместителем президента-председателя правления банка Ольгой Дергуновой дважды — в июле и в декабре — приезжали в «Сколково» для знакомства с разработками наших резидентов в сфере финтеха. И вот уже сегодня некоторые из этих разработок, в том числе бимодальная биометрия от компании «ЦРТ-инновации», нашли применение в работе банка. Мы рады тому, что доказали эффективность нашего взаимодействия с Группой ВТБ и гордимся тем, что банк выбирает наши технологии для создания новых конкурентных преимуществ и сервисов для клиентов. Уверен, что уникальные разработки наших резидентов помогут ВТБ оставаться лидирующей финансовой группой страны», — рассказал вице-президент, исполнительный директор ИТ-кластера фонда «Сколково» Игорь Богачев. Мультифункциональная биометрическая платформа «ЦРТ-инновации» VoiceKey.Platform позволяет проводить биометрические операции по голосу и лицу в любых каналах дистанционного обслуживания. Она успешно используется в банках, НПФ, страховых компаниях и других финансовых организациях.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "На счетах в офшорных зонах по всему миру находятся около 500 миллиардов долларов, незаконно выведенных из Индии. Об этом, как сообщает The Economic Times, заявил глава Центрального бюро расследований (CBI) Амар Пратап Сингх (Amar Pratap Singh). По его словам, индийские граждане стали крупнейшими вкладчиками швейцарских банков. Сингх посетовал на трудности, с которыми сталкиваются следователи на международном уровне, пытаясь проследить путь выведенных миллиардов. Глава CBI отметил, что больше половины государств из числа наименее коррумпированных (в соответствии с Transparency International Index) являются офшорными зонами, где сосредотачиваются капиталы налоговых уклонистов и взяточников. В начале февраля в ходе крупнейшего в Индии антикоррупционного разбирательства суд постановил отозвать 122 лицензии на оказание услуг связи. Как подсчитали государственные аудиторы, в результате продажи радиочастот по заниженным ценам бюджет страны недосчитался почти 40 миллиардов долларов. Bank of Singapore подсчитал, что в связи с растущим уровнем коррупции индийский фондовый рынок сократился на 15 процентов с 2008 года. Об этом сообщает Bloomberg. По мнению аналитиков, взяточничество в чиновничьей среде стало основной причиной высокой инфляции, роста стоимости кредитов и оттока инвестиций.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "В связи со взрывом на территории телепроекта \"Дом-2\" возбуждено дело о незаконном обороте оружия и боеприпасов. Об этом 10 февраля сообщает агентство \"Интерфакс\". Собеседник агентства заявил, что после инцидента фрагменты взорвавшейся металлической фляги направили на экспертизу. Специалисты нашли на фрагментах остатки взрывчатых веществ. Флягу официально признали самодельным взрывным устройством, в связи с чем и возбуждено дело. Взрыв на территории телепроекта произошел 27 января. Бомба сработала, когда один из сотрудников телепроекта нашел флягу и попытался ее открыть. В результате получил ранения этот сотрудник и еще один его коллега. У одного из раненых оторваны кисти рук, у второго повреждены нога и брюшная полость. Журналистам стали известны имена пострадавших - это 23-летний Владимир Шахов и 20-летний Александр Тишков. Первоначально предполагалось, что в \"Доме-2\" взорвался газовый баллон. Информация о том, что на самом деле на территорию подложили самодельную бомбу, появилась достаточно быстро. Однако до сих пор эта информация расценивалась как предварительная.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Британский пес по кличке Рокки пригнал стадо овец прямо на кухню в дом своих хозяев. Жена фермера запечатлела инцидент на видео и поделилась роликом на своей странице в Facebook. Как рассказала владелица собаки The Telegraph, в тот день она занималась домашними делами на кухне и вдруг услышала странные звуки. Обернувшись, она увидела перед собой девять овец и довольного пса, который привел их. Оказалось, что задняя дверь в доме была открыта, и Рокки воспользовался этой возможностью, чтобы порадовать хозяев. В результате женщине пришлось самой выгонять животных на улицу и наводить в доме порядок после неожиданного нашествия. В марте итальянские фермеры из регионов, пострадавших от землетрясения, пришли на протест в Риме в компании овец. В руках земледельцы держали плакаты с лозунгами «Где же обещанные стойла?» и «Меньше болтовни, больше стойл!».",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      },
      {
        "text": "Столичные полицейские в ходе проведения оперативно-разыскных мероприятий задержали подозреваемого в нападении на преподавателя Московского государственного технического университета имени Н. Э. Баумана. Об этом агентству ТАСС сообщили в столичном главке МВД, Ранее 30 июня сообщалось, что в туалете вуза на четвертом этаже молодой человек набросился с ножом на ассистента кафедры медико-технических информационных технологий Александра Дмитриева. Один удар он нанес в живот, второй — в плечо. Педагог выбрался в коридор и позвал на помощь. В этот момент нападавший выбежал из туалета и скрылся. Возбуждено уголовное дело по статье «Умышленное причинение тяжкого вреда здоровью». Причина инцидента пока неизвестна. Преподаватель сообщил полицейским, что не знаком с нападавшим.",
        "dataset": "Lenta.ru news",
        "pred": 1,
        "class": 0
      }
    ],
    "true_negatives": [
      {
        "text": "Национальный переходный совет Ливии в Бенгази обратился к странам Запада с просьбой ликвидировать полковника Муаммара Каддафи, контролирующего запад страны, пишет газета The Guardian. Представитель Совета Мустафа Гериани заявил, что просьбу об уничтожении диктатора Франции и США должна была передать делегация из Бенгази в понедельник 14 марта. \"Мы пояснили западным странам, что хотим установления над Ливией зоны, запретной для полетов, тактических ударов по боевой технике Каддафи и уничтожения его резиденции\", - сказал Гериани. На уточняющий вопрос, хочет ли он смерти диктатора, представитель Совета ответил: \"Почему бы и нет? Если он умрет, никто и слезы не уронит\". Ни Франция, ни США пока высказывания Гериани не прокомментировали. Известно, что Париж и Лондон добиваются от партнеров по \"Большой восьмерке\" (G8) и Совету Безопасности ООН установления над Ливией зоны, закрытой для полетов. Однако пока в обоих объединениях консенсуса по этому поводу нет. Ранее сам Муаммар Каддафи назвал участников Совета в Бенгази \"предателями и шпионами\" и пообещал награду за голову их руководителя - Мустафы Абдель Джалиля. Противостояние между Триполи и Бенгази продолжается уже месяц. За это время в ходе боев и беспорядков по всей Ливии погибли от нескольких сотен до нескольких тысяч человек.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Ставшая женой принца Гарри бывшая актриса Меган Маркл начала носить одежду пастельных тонов, сообщает Independent. По словам королевских инсайдеров, герцогиня Сассекская сменила любимые черный и темно-синий цвета на кремовый и бледно-розовый из уважения к королеве Елизавете II. «Меган стала одеваться иначе. У нее был классический, но грубоватый стиль, — прокомментировала ведущая британского канала Sky Лиззи Зита. — Сейчас она носит нейтральные цвета. Это правильный выбор: так она не затмит королеву, которая любит яркие костюмы и шляпки в тон, чтобы люди сразу ее замечали». Зита добавила, что в будущем у Маркл еще будет возможность продемонстрировать свой собственный стиль во время неофициальных событий. В июне жена принца Гарри пришла на парад Trooping of the Colour в неподобающем виде. Согласно правилам королевского этикета, женщины не имеют права появляться на публике в одежде с открытыми плечами. Однако герцогиня Сассекская надела нежно-розовый костюм с вырезом лодочкой, изготовленный дизайнером Каролиной Эррерой.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "В Киргизии сторонники оппозиции перекрыли стратегическую автотрассу Бишкек-Ош, которая соединяет север и юг страны. Об этом сообщает \"Интерфакс\". Участники акции требуют освободить членов партии \"Ата Журт\" (\"Отечество\"), задержанных 4 октября по подозрению в попытке насильственного захвата власти. На проезжей части в настоящее время находятся около двухсот человек, большей частью женщины и дети. По данным АКИpress, поперек дороги митингующие поставили автомобиль КамАЗ. На трассе уже образовалась пробка по меньшей мере из двух тысяч машин. Перед тем, как перекрыть дорогу, оппозиционеры провели митинг в Джалал-Абаде в поддержку лидера партии \"Ата Журт\" (\"Отечество\") Камчибека Ташиева, главы парламентской фракции \"Ата Журт\" Садыра Жапарова и вице-спикера-парламента Таланта Мамытова. 3 октября они участвовали в митинге на центральной площади Бишкека, который завершился массовыми беспорядками. Участники акции вышли на площадь с требованием национализации золотоносного рудника \"Кумтор\", после чего попытались ворваться в здание Жогорку Кенеша (парламента страны). Они также закидывали камнями охранявших его милиционеров. В итоге митингующих разогнал спецназ, пострадали 12 человек. Как сообщалось, в ходе акции Ташиев и его соратники призвали захватить Белый дом, в котором располагаются как парламент, так и администрация президента страны. Эти факты сейчас проверяет Генпрокуратура республики. Ташиева, Жапарова и Мамытова решено было задержать на 48 часов.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Дэн Эйкройд заявил, что слухи о закрытии проекта \"Охотники за привидениями 3\" не соответствуют действительности. Заявление было сделано в интервью Vanity Fair. По словам Эйкройда, уже готов первый вариант сценария, причем он \"получился довольно сильным\". Вместе с тем он подчеркнул, что в продолжении картины появятся новые герои, так как он, например, уже стар, чтобы бегать за призраками с ускорителем за спиной. В настоящее время вокруг продолжения известной франшизы ходит большое количество слухов. Так, в декабре 2009 года исполнитель одной из главных ролей в оригинальной дилогии Гарольд Рэймис  заявлял, что съемки картины стартуют летом 2010 года. В марте 2010 Билл Мюррей, многократно отказывавшийся участвовать в возрождении \"Охотников\", заявил, что снимется в новой картине только при условии, что его героя убьют, а еще через два месяца объявил проект \"Охотники за привидениями 3\" мифом. Оригинальная картина \"Охотники за привидениями\" вышла на экраны в 1984 году. При бюджете в 30 миллионов долларов она собрала в мировом прокате около 300 миллионов. Сюжет фильма строился вокруг группы ученых-парапсихологов, которые организуют агентство по отлову привидений в современном Нью-Йорке. В картине снимались Билл Мюррей, Дэн Эйкройд, Гарольд Рэмис и Сигурни Уивер. Режиссером фильма выступал Айвен Райтман.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Проведение шумного ремонта в московских квартирах еще больше ограничат по времени. Об этом сообщил М24.ru председатель комиссии по законодательству столичного парламента Александр Семенников. По его словам, поправки в городской закон «О тишине», разработанные Мосжилинспекцией, будут внесены от лица мэра Москвы Сергея Собянина в Мосгордуму. После рассмотрения в комиссии по законодательству 28 апреля их представят парламентариям. Законопроектом запрещается шуметь в квартирах с 19:00 до 9:00. Также вводится тихий час — с 13:00 до 15:00. «Нарушителей планируют наказывать штрафами от одной до двух тысяч рублей — это наказание прописано в действующем законе \"О тишине\"», — пояснил депутат. По его словам, для должностных лиц штраф составит от четырех до восьми тысяч, для юридических — от 40 до 80 тысяч рублей. В настоящее время, согласно действующему с 2002 года закону «О тишине», проводить шумные работы нельзя с 23:00 до 7:00. Ранее на портале «Активный гражданин» проводился опрос о необходимости уменьшения разрешенных часов для шумных ремонтных работ. Как показали результаты исследования, 69 процентов москвичей считают, что шумные работы в домах должны вестись с 9:00 до 19:00, а не с 7:00 до 23:00, как сейчас. 47 процентов респондентов предложили прерывать работы в дневное время. Только 10 процентов опрошенных заявили, что ничего вообще менять не надо.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Мэр Москвы Сергей Собянин сообщил на странице во «ВКонтакте», что поручил Департаменту культуры уволить директора Парка Горького, где в новогоднюю ночь обрушился деревянный мост. На сайте парка указано, что  учреждением руководит Марина Люльчук. По мнению мэра, администрация парка допустила серьезную недоработку, что и привело к обрушению моста. Столичный градоначальник посетил пострадавших в больницах, там остаются 12 человек. Собянин уточнил, что им выплатят компенсации до 500 тысяч рублей, хотя большинство из них немосквичи. Обрушение моста произошло около полуночи. По информации властей, причиной обрушения стала техническая неисправность элементов конструкций. Погибших в результате инцидента нет.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Российский синхронист Александр Мальцев принял решение поменять партнершу. На чемпионате Европы в Лондоне (2-22 мая) он выступит с новой партнершей — 21-летней Михаелой Каланчой. Об этом сообщает «Татар-информ». «Мы искали партнершу, которая бы подходила Саше по морфологическим данным. Мы пробовали несколько спортсменок, но в конце концов остановились на Михаеле», — рассказала тренер микст-дуэта Гана Максимова. Ранее 20-летний Мальцев выступал в паре с 19-летней Дариной Валитовой. На чемпионате мира в Казани (июль-август 2015 года) спортсмены завоевали золотую медаль в произвольной программе микста и выиграли серебро в технической, уступив американцам Кристине Джонс и Биллу Мэю. До этого смешанные дуэты не принимали участие в крупных международных турнирах. Александр Мальцев — единственный в России мужчина, выступающий в соревнованиях по синхронному плаванию. Каланча — четырехкратная чемпионка мира в группе.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Депутат Госдумы Евгений Федоров предложил изменить российскую Конституцию. Как сообщил «Ленте.ру» сам парламентарий-единоросс, в четверг, 11 июня, накануне Дня России, он внес в нижнюю палату законопроект о порядке изменения преамбулы Основного закона (текст законопроекта размещен в официальной базе данных Госдумы). По мнению Федорова, в тексте преамбулы недостаточно отражена тысячелетняя государственность страны. «В преамбуле прямо сказано, что российский народ является частью какого-то там мирового, то есть иностранного сообщества, — рассуждает Федоров. — Непонятно какого, но явно там намек на американское сообщество, которому мы должны подчиняться». По словам парламентария, там же есть и «ссылка на то, что Россия возродила какую-то государственность и суверенитет». «Разве нашей стране не полторы тысячи лет, а всего лишь 25?», — недоумевает Федоров. По действующим нормам, депутаты Госдумы конституционным большинством могут вносить поправки в основную часть Конституции, но не в преамбулу. Порядок изменения преамбулы в самой Конституции вообще не прописан, заявил Федоров. В своем законопроекте парламентарий и его коллега по фракции Антон Романов предлагают распространить на первый абзац Конституции те же правила, что и на основную часть: поправки могут быть внесены группой из 90 депутатов и должны быть одобрены двумя третями голосов. После принятия этого механизма Федоров намерен инициировать собственно правку преамбулы, чтобы убрать оттуда положения, которые он считает намеками на «внешне управляемое положение России». За последние шесть лет Конституцию правили несколько раз. В 2008 году был увеличен срок полномочий президента — до шести лет, Госдумы — до пяти лет. В 2013 году были приняты изменения, согласно которым удалось объединить Верховный и Арбитражный суды. А в 2014 году главе государства дали право самостоятельно, без выборов, назначать в Совет Федерации 10 процентов сенаторов . Этим летом правка Конституции обсуждается в связи с возможным переносом парламентских выборов 2016 года с декабря на сентябрь. Фракция КПРФ настаивает на том, что это неконституционно, так как срок полномочий Думы — ровно пять лет, то есть для шестого созыва он истекает в декабре. Спикер Сергей Нарышкин заявил о том, что изменение Основного закона для переноса выборов не обязательно. Кроме того, ранее Нарышкин призвал с осторожностью относиться к любой инициативе по изменению Конституции.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Глава комитета Госдумы по физкультуре, спорту и делам молодежи Дмитрий Свищев считает решение Союза европейских футбольных ассоциаций (УЕФА) об условной дисквалификации национальной сборной на Евро-2016 и штрафе Российскому футбольному союзу излишне жестким. Об этом парламентарий во вторник, 14 июня, сообщил «Интерфаксу». «Мое мнение, что это излишне жесткое решение и по отношению ко всей нашей команде. Условная дисквалификация плюс штраф — это, конечно же, чрезмерно», — заметил он. Депутат не увидел в этом решении «политических казусов». «Мы должны исполнять решения УЕФА и будем исполнять их», — заверил Свищев. Ранее во вторник УЕФА условно дисквалифицировал сборную России до конца Евро-2016 из-за беспорядков после встречи с англичанами. В случае их повторения команда будет  отстранена от соревнований. Кроме того РФС оштрафован на 150 тысяч евро.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Премьер-министр Украины Арсений Яценюк поручил усилить контроль за перемещением российских самолетов через воздушное пространство страны в Сирию. Об этом в четверг, 10 сентября, сообщает РИА Новости. «Я сегодня утром дал поручение \"Украэроруху\" усилить контроль с \"Евроконтролем\" на предмет перемещения каких-либо российских самолетов в Сирию. Воздушное пространство для этих самолетов над территорией Украины вообще закрыто, воздушное пространство над нейтральными водами сейчас особенным образом контролируется», — сказал Яценюк на пресс-конференции в Братиславе. По данным РИА Новости, Россия с 2014 года не осуществляет транзитные авиаперевозки через территорию Украины. 9 сентября 2015 года разрешение на пролет российских самолетов с гуманитарной помощью для Сирии дал Иран. Пресс-атташе посольства России в Тегеране Максим Суслов сообщил, что «получены разрешения на все запрашиваемые пролеты российских самолетов, направляющихся в Сирию для отправки гуманитарной помощи», а российская дипмиссия находится в тесном контакте с иранскими властями по этому вопросу. 8 сентября о закрытии воздушного коридора в Сирию для российских самолетов заявила Болгария. Причина — опасения болгарской стороны, что поставляемые Россией в Сирию грузы на самом деле могут быть не гуманитарными. 7 сентября Афины уведомили Москву о том, что Вашингтон попросил Грецию закрыть ее воздушное пространство для российских самолетов с гуманитарной помощью для Сирии. Афины отказались от выполнения этого требования, однако в Афинах уточнили, что Россия выберет альтернативный восточный маршрут, так что в греческом воздушном коридоре не будет необходимости. Россия оказывает охваченной гражданской войной Сирии гуманитарную и военно-техническую помощь официальному Дамаску. В частности, Москва поставляла в страну оружие, снаряжение, боеприпасы, расходные материалы, а также отправляла военных советников и инструкторов. Гражданская война в Сирии началась в 2011 году. За это время погибло более 230 тысяч человек, число беженцев приближается к 11,5 миллиона. Повстанцы выступают за свержение президента Башара Асада.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Официальный представитель российского МИД Александр Лукашевич выступил с резкой критикой по поводу блокирования американским банком JP Morgan Chase расчетной операции посольства России в Казахстане. Речь идет о денежном переводе, который дипломатическое представительство пыталось осуществить в адрес страховой компании «СОГАЗ». Лукашевич подчеркнул, что Москва рассматривает это решение кредитной организации как «абсолютно неприемлемое, противозаконное и абсурдное». Как известно, Минфин США после присоединения Крыма к России ввел санкции в адрес некоторых политиков и крупных бизнесменов. В отношении «СОГАЗа» санкции не вводились, однако в «черном списке» министерства оказались акционеры страховой компании - банк «Россия» и бизнесмен Геннадий Тимченко. Более того, «СОГАЗ» подпадал под «правило 50%»: до недавнего времени 51% акций компании принадлежал ИК «Аброс», 100-процентной «дочке» банка «Россия», а действие санкций распространяется на организации, в которой фигурант перечня Минфина владеет от 50%. Однако уже после введения санкций «СОГАЗ» объявил, что доля «Аброса» снизилась до 48,5%, отмечает «Интерфакс». «Если американская финансовая структура рассчитывала таким образом «отличиться», заработав очки перед Белым домом, то явно переусердствовала. В Вашингтоне должны понимать: любые враждебные действия против российской дипмиссии не только представляют собой грубейшее нарушение международного права, но и чреваты ответными мерами, которые неизбежно скажутся на работе посольства и генконсульств США в России. В этом смысле JP Morgan Chase оказал американской администрации «медвежью услугу», - заявил Лукашевич.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Меган Маркл заметили в дешевых украшениях во время посещения общественного центра для семей военнослужащих и ветеранов Broom Farm в Лондоне. Об этом пишет Daly Mail. На размещенных в сети снимках видно, что герцогиня Сассекская выбрала для мероприятия две изящные подвески канадского бренда Suetables: персонализированный кулон Shirley Zodiac стоимостью 60 фунтов (около пяти тысяч рублей) и ожерелье из золота низкой пробы  Vanessa Coin Zodiac за 122 фунта (десять тысяч рублей). Отмечается, что оба украшения были дополнены изображением знаков зодиака ее супруга принца Гарри и сына Арчи — Девы и Тельца. Ранее Маркл уже замечали на публике в недорогих аксессуарах. 13 августа в Великобритании впервые опубликовали ее фотографии, сделанные в 2017 году в Ботсване. Тогда на указательном пальце женщины заметили кольцо, украшенное изображением символа-оберега. Было определено, что это украшение из золота турецкого бренда Kismet by Milka стоимостью 250 фунтов (около 20 тысяч рублей).",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "В украинском Чернигове мужчину привязали к столбу и повесили на него табличку «Я ватник». Видеотрансляция велась в социальной сети Facebook, детали инцидента раскрывает «Громадське». Мужчина, который вел прямой эфир с места, заявил, что привязанный разрушил памятник героям Небесной сотни в городе, а также является педофилом, за что отсидел в тюрьме. Позже в кадре появились патрульные полицейские, которые отвязали мужчину от столба и увели его в неизвестном направлении. Утверждается, что он ранее задерживался за хулиганство — после того, как 15 июля кидал бутылки в памятник героям Небесной сотни, а во время задержания он якобы кричал, что хочет «уехать в Россию». Кроме того, мужчина якобы провел 11 лет в тюрьме за педофилию.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "В прокуратуре Москвы заключили, что у МЧС не было оснований для экстренного предупреждения людей во время столичного урагана 29 мая. Об этом сообщает «Русская служба Би-би-си» со ссылкой на ответ из надзорного ведомства на запрос депутата Госдумы от КПРФ Валерия Рашкина. В результате проверки было установлено, что бездействие спасателей обусловлено информацией от синоптиков в тот день, что скорость ветра не превысит 22 метра в секунду. Это ниже минимальной планки, установленной приказом МЧС для объявления чрезвычайной ситуации. В связи с этим в прокуратуре полагают, что «оснований для принятия мер реагирования» в отношении ответственных лиц в спасательном ведомстве нет. 29 мая в Москве и Подмосковье прошел сильный ливень с грозами и сильным ветром с порывами до 28 метров в секунду. Стихией повалено 14 тысяч деревьев, повреждена кровля 240 зданий, около двух тысяч машин. Жители города не получили заблаговременно экстренного предупреждения об урагане от сотовых операторов. Общее число жертв стихии достигло 17. Последней из них стал 56-летний мужчины, который скончался 21 июня в больнице.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Председатель ЦИК Афганистана Азизулла Лодин (Azizullah Ludin) и его заместитель Дауд Али Наджафи (Daoud Ali Najafi) подали заявления об отставке. Об этом 7 апреля сообщает BBC News. По словам пресс-секретаря президента страны Хамида Карзая, оба прошения об отставке были удовлетворены, новые назначения будут произведены в ближайшее время. Таким образом, в преддверии намеченных на сентябрь парламентских выборов, ЦИК страны получит двух новых руководителей. Деятельность руководства Независимой избирательной комиссии Афганистана подверглась жесткой критике со стороны местных и западных наблюдателей после завершившихся в ноябре 2009 года президентских выборов. Тогда главный соперник Карзая Абдулла Абдулла снял свою кандидатуру со второго тура выборов, выразив возмущение масштабными подтасовками и махинациями, имевшими место в ходе первого тура. По информации иностранных наблюдателей, по итогам проведенного расследования было аннулировано около четверти поданных за Карзая бюллетеней. Тогда под давлением международного сообщества президент признал, что фальсификации действительно имели место. Однако на прошлой неделе Карзай выступил с предположением о том, что в этих махинациях были также замешаны представители ООН и ЕС. Позже в телефонном разговоре с госсекретарем США Хиллари Клинтон Карзай попытался разрядить обстановку, выразив благодарность международному сообществу за помощь при проведении выборов. Конфликт Карзая с западными союзниками обострился 6 апреля, когда афганский президент потребовал, чтобы его перестали принуждать к реформам и даже пригрозил перейти на строну движения \"Талибан\". Правительство Афганистана поспешило заверить, что слова президента были гиперболой, однако Белый дом выразил беспокойство по поводу позиции Карзая, заявив, что подобные заявления ставят под угрозу срыва запланированный на 12 мая визит главы Афганистана в Вашингтон. 7 апреля пресс-секретарь Карзая Вахид Омер (Waheed Omer) выступил с заявлением о том, что последние события ни в коем случае не должны подорвать основу стратегического партнерства Кабула и Вашингтона и заверил, что визит Карзая в США отменен не будет. Кроме того, 7 апреля агентство Reutersсообщило, что в ходе телефонной беседы при участии лидеров Афганистана, США и Великобритании, афганская сторона приняла решение укрепить контингент международной коалиции в провинции Гильменд, направив туда еще 500 военнослужащих.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Российский военный самолет Ан-72 нарушил воздушную границу Эстонии, заявили в Главном штабе сил обороны республики. Об этом сообщает РИА Новости. «В понедельник российский военный самолет Ан-72 в 18:23 мск вошел в воздушное пространство Эстонии вблизи острова Вайндлоо в Финском заливе. Самолет пробыл в эстонском воздушном пространстве полторы минуты. Его транспондер был включен. В радиоконтакт с авиадиспетчерской службой самолет-нарушитель не вступал», — говорится в сообщении эстонских военных. Российский посол в Таллине был приглашен в МИД Эстонии, где ему вручили ноту протеста.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Производитель одежды для спорта JD Sports свернул рекламную кампанию из-за претензий покупателя, обвинившего марку в сексизме. Об этом сообщает Brimingham Live. На сайте бренда появились фотографии синей формы сборной Шотландии по футболу, которую представляли женщина, мужчина и ребенок. Покупатель Саймон Кемп обратил внимание, что модель в рваных джинсах сидела с широко раздвинутыми коленями, в то время как мужчина и мальчик стояли в нормальных позах. Более того, Кемп отметил, что в продаже доступна форма только для мальчиков, а не для детей обоих полов. Покупатель обратился с жалобой в Шотландскую футбольную ассоциацию (Scottish Football Association (SFA), которая попросила JD Sports удалить с сайта фотографию женской версии футболки. JD Sports откликнулся на претензии и заменил снимок моделью в подходящей позе, а также вместе с SFA принес извинения оскорбленным клиентам.  В мае 2018 года восьмилетняя жительница Уэст-Йоркшира (Великобритания) обвинила британский бренд одежды Fat Face в сексизме за то, что карманы в шортах для мальчиков оказались больше, чем в шортах для девочек.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "На сайте Первого канала появились четыре ролика, посвященные предстоящему выходу нового сезона шоу «Прожекторперисхилтон». Каждое видео посвящено одному из ведущих — Ивану Урганту, Сергею Светлакову,  Гарику Мартиросяну и Александру Цекало. Герои по очереди выступили на сеансе психотерапии в составе группы помощи, на котором рассказали о своих пристрастиях. Иван Ургант признался в том, что уже является ведущим одной из популярных телепрограмм, но хотел бы «еще одну». Гарик Мартиросян рассказал участникам собрания о своем клубе в Москве и сокрушался, что в нем «нет новостей, потому что он сам их себе запретил». Сергей Светлаков крайне нервно поведал о своем необычном пристрастии: по его словам, он давно не может «слезть со стула». Ведущий поделился способами, который он перепробовал, и констатировал, что пока от вредной привычки избавиться ему не удалось. Александр Цекало просто провозгласил себя королем юмора, сидя в смирительной рубашке и с бумажной короной на голове. В феврале на Первом канале подтвердили слухи о возвращении шоу: премьера нового сезона программы намечена на 4 марта. Передача «Прожекторперисхилтон» выходила с мая 2008 года по сентябрь 2012-го. Съемка новых выпусков прекратилась, так как Светлаков и Мартиросян потеряли право работать на Первом после продления эксклюзивных контрактов с телеканалом ТНТ. После этого была создана программа «Вечерний Ургант».",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "«Роскосмос» анонсировал запуск спутников связи проекта высокоскоростного глобального интернета OneWeb. Об этом сообщает «Интерфакс» со ссылкой заявление госкорпорации. Пуск ракеты-носителя «Союз» с британским спутником состоится 19 февраля с космодрома Куру во Французской Гвиане. Также в «Роскосмосе» подтвердили пилотируемый запуск корабля «Союз МС-12» 1 марта. В октябре прошлого года представитель ФСБ Владимир Садовников рассказал о необходимости ограничить доступ к проекту OneWeb из соображений безопасности. По его словам, система может носить разведывательный характер и способна «нанести ущерб интересам личности и общества Российской Федерации». Помимо этого, ограничение использования OneWeb в России также будет способствовать сохранению конкуренции на отечественном рынке операторов связи. В свою очередь, глава «Роскосмоса» Дмитрий Рогозин назвал позицию ФСБ слишком скептичной: «Эта орбитальная группировка нашими партнерами все равно будет создана, хотим мы этого или нет… Поэтому мы считаем, что этот проект в принципе будет реализован. Но лучше реализовать его с нашим участием».",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Немецкие ученые обнаружили свидетельства жизни в глубинах нефти: крошечные капли воды, где обитают особые бактерии. О своей находке они рассказали в последнем номере журнала Science. Ученые работали на берегах Пич-Лейк (остров Трининад, Карибское море) — крупнейшего в мире резервуара чистого жидкого асфальта. Минерал поднимается на поверхность, где застывает и образует твердую корку. Хотя раньше считалось, что разложение нефти анаэробными микробами происходит только на границе нефтяной и водной сред, исследователи нашли в самом минеральном веществе крошечные (1-3 микролитра) капли жидкости. Высокий уровень солености и водоустойчивые изотопы капель указывают на подземное происхождение воды. Внутри капель обитают сложно организованные сообщества метанопродуцирующих бактерий, расщепляющих нефть. Деятельность бактерий меняет химический состав минерала и, в конечном счете, приводит к образованию вязкого битума (как в нефтеносных песках). Хотя этот процесс вредит качеству нефти, он может оказаться очень полезным для очищения грунтовых вод. Микроорганизмы, отлично чувствующие себя в токсичной нефти, помогут ученым найти новые методы удаления загрязняющих веществ.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Семья из Вашингтона провела акцию в защиту микроавтобуса \"Фольксвагена\", оформленного в стиле хиппи, от представителей местного ведомства по контролю над общественными сооружениями и постройками. Как сообщает Fox News, чиновники потребовали убрать авто с лужайки у дома, однако семейство Каплан-Аллен воспротивилось этому. Как рассказали члены семьи Каплан-Аллен, хипповый микроавтобус появился у них во дворе весной 2010 года. В настоящее время \"Фольксваген\" находится не на ходу, так как в нем нет двигателя. Микроавтобус стоит на лужайке для красоты и является своеобразной данью уважения культуре хиппи. Тем не менее, творческая задумка не понравилась вашингтонским чиновникам, признавшим автомобиль опасным. В департаменте по контролю над общественными сооружениями отметили, что хипповый микроавтобус может представлять опасность для местных жителей - в нем могут находиться осколки битого стекла, в салоне могут жить крысы, а из автомобиля вытекать различные жидкости. Поскольку власти признали микроавтобус опасным, они велели семье Каплан-Аллен убрать машину в течение установленного срока. Но владельцы хипповой машины оказались несговорчивыми и организовали акцию в защиту \"Фольксвагена\". На мероприятие, прошедшее 3 октября, пришли около ста человек - студенты, школьники, художники и те, кто в 1960-х годах принадлежал к субкультуре хиппи. Впрочем, акция в защиту хиппового автобуса не произвела должного впечатления на чиновников, и они по-прежнему настаивают на необходимости убрать машину с лужайки. \"У них есть 45 дней на то, чтобы избавиться от автомобиля\", - отметили в департаменте. Намерены ли Каплан-Аллен устроить еще одно шествие в защиту микроавтобуса, неизвестно.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Главное управление государственной экспертизы России (Главгосэкспертиза) утвердило проект строительства нового пассажирского терминала в московском аэропорту Домодедово. Планируется, что он заработает к ЧМ-2018, сообщает пресс-служба учреждения. Терминал построят на территории действующего аэропорта. Общая площадь будущего здания составит более 235 тысяч квадратных метров, а пропускная способность — 12 миллионов пассажиров в год. На территории терминала будет установлено 100 регистрационных стоек и около 40 киосков саморегистрации. Там также предполагается разместить офисы авиакомпаний, туристический центр, зону обслуживания трансферных пассажиров. Домодедово — одна из крупнейших воздушных гаваней России. В 2015 году аэропорт обслужил 30,5 миллиона человек. Регулярные пассажирские и грузовые перевозки в Домодедово выполняют 67 авиакомпаний. Маршрутная сеть охватывает более 187 российских и зарубежных направлений. Финальная часть ЧМ по футболу пройдет в России с 14 июня по 15 июля 2018 года. Проведение чемпионата запланировано в 11 городах страны.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Президент России Владимир Путин останется верен хоккею. Об этом он заявил журналистам по окончании чемпионата мира по футболу, передает «Интерфакс». «Настоящая игра в футбол — это особое искусство. Я пока в хоккей позанимаюсь, буду осваивать хоккей. Я на коньках уже немножко научился держаться, буду и дальше двигаться в этом направлении, — сказал он. — Каждый из нас когда-то играл в футбол, пинал мячик. Но этого недостаточно». Ранее 15 июля Путин поблагодарил всех причастных — от болельщиков до волонтеров — за «то отношение, которое они вдохнули в мундиаль. Бывают болельщики эмоциональные, но, как оказалось, это еще и очень ответственные люди. Я даже удивился», — заявил президент. 15 июля сборная Франции стала чемпионом мира. Команда одержала победу над хорватами в финальном матче мундиаля со счетом 4:2. После завершения Олимпийских игр 2018 года в южнокорейском Пхенчхане нападающий сборной России по хоккею Илья Ковальчук пригласил Путина поиграть в хоккей и получил согласие. Путин начал учиться кататься на коньках для игры в хоккей в 60-летнем возрасте. ",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Полиция обнаружила автомобиль кассирши из башкирского города Салават Луизы Хайруллиной, которая исчезла вместе с семьей после хищения более 20 миллионов рублей. Об этом сообщает «Вести-Башкортостан». Машину нашли в гараже отца Хайруллиной. Он рассказал, что увидел автомобиль только сегодня, поскольку давно туда не заглядывал. В салоне находилось постельное белье. Полицейские предполагают, что женщина могла скрываться в гараже некоторое время. Луиза Хайруллина пропала вместе с мужем и двумя детьми в конце мая. Следствие считает, что она вынесла из отделения банка, в котором работала, около 24,5 миллиона рублей. За любую информацию о ней пообещали награду в один миллион. Отец Хайруллиной считает, что она не могла пойти на преступление намеренно. Он настаивает, что кто-то заставил его дочь совершить кражу. Перед побегом Хайруллина удалила почти все свои страницы в соцсетях, однако позже в Instagram появился аккаунт, где публикуются сообщения от ее имени. Пользователи поддерживают женщину и желают ей удачи. В сети появился хештег #runluizarun («беги, Луиза, беги») — им отмечают публикации, в которых пишут об исчезнувшей и ее семье.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Масштабная выставка швейцарского художника Урса Фишера откроется в «Гараже» 10 июня. Она приурочена к годовщине пребывания музея в новом доме — бывшем ресторане «Времена года». Экспозиция включает живопись и инсталляции, а также 20 бронзовых, раскрашенных вручную скульптур, созданных специально для «Гаража», сообщили «Ленте.ру» организаторы. Первый персональный проект мастера в России связан с его впечатлениями от архитектуры здания музея — памятника советского модернизма, возведенного в 1968 году и реконструированного по проекту Рема Колхаса. «Небольшие по размеру работы изображают тот или иной преходящий момент: увядший тюльпан в вазе или крысу, играющую на большом пианино. Эти физические воплощения полета фантазии составляют яркий контраст со сдержанной мощью советского модернистского здания», — отмечают в «Гараже». На площади перед «Гаражом» развернется проект YES — крупнейший в творчестве Фишера коллаборативный проект в публичном пространстве. Всем желающим предложат принять участие в создании ландшафта из глиняных скульптур, который будет меняться в течение всей выставки. 11 июня в атриуме музея пройдут поэтические чтения, посвященные жизни художественного сообщества России последних 60 лет. 12 июня организаторы проведут круглый стол о московском концептуализме с участием знаковых фигур той эпохи: Иосифа Бакштейна, Георгия Кизевальтера и Игоря Макаревича. Вечер завершится джазовым концертом. В рамках празднования гостей также ждут другие выставки, чтения, мастер-классы, лекции, экскурсии и архитектурные прогулки, связанные с историей «Гаража».",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Представители оппозиционной Центристской партии в парламенте Эстонии решили инициировать отставку министра финансов Юргена Лиги, сообщает DELFI. Поводом для этого стала недавняя запись чиновника в Facebook, где он попрекнул происхождением своего коллегу, министра образования Евгения Осиновского. «Юрген Лиги неоднократно доказывал, что не подходит на роль члена правительства Эстонской Республики, — заявила глава фракции центристов Кадри Симсон. — Поэтому Центристская фракция начинает сбор подписей для вынесения Лиги вотума недоверия, и ожидает поддержки депутатов парламента». Представительница оппозиции добавила, что высказывания Лиги подрывают усилия по сплочению общества в Эстонии и что они неприемлемы «в европейском культурном пространстве». Пост в Facebook, спровоцировавший скандал, стал продолжением дискуссии об эмиграции на эстонском ТВ. В ходе этих дебатов, как отмечает ERR, министр финансов Юрген Лиги, представляющий правящую Партию реформ, связывал эмиграцию из страны с последствиями советской власти. В свою очередь, министр образования Евгений Осиновский (он представляет Социал-демократическую партию, которая входит в правящую коалицию с реформистами) возразил, что причину не стоит искать в советском прошлом. Лиги после этого написал в Facebook, что позиция его оппонента является следствием «отсутствия корней и невежества». «Министр должен говорить, что стоит терпеть и стараться, дела у нас идут все лучше (а у Финляндии нет), а он говорит, что нельзя обвинять советскую власть, он все исправит. Он, сын иммигранта из розовой партии, должен вести себя очень осторожно, но он и не догадывается об этом», — отметил он. Позднее пост был удален, а министр финансов принес извинения. Он заявил, что не имеет ничего против происхождения коллеги,  а, напротив, «даже удивлен его проэстонским настроением и владением языком». Тем не менее, лидер Социал-демократической партии (соратник Осиновского) Свен Миксер высказался за отставку Лиги. С аналогичным заявлением выступил и лидер оппозиционной партии IRL Урмас Рейнсалу. «Я считаю немыслимым, чтобы после подобного высказывания Лиги оставался в должности министра. Это высказывание нанесло ущерб всему, что мы строим в интересах внутреннего мира и безопасности эстонского общества», — отметил он. Сам Лиги не считает, что должен покидать свой пост.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Исландская певица Бьорк в Facebook назвала себя жертвой сексуальных домогательств со стороны датского режиссера. Как отмечает издание Pitchfork, единственный кинематографист из Дании, у которого снималась исполнительница, — Ларс фон Триер. «Я поняла, что режиссер считает своим правом трогать и домогаться своих актрис, когда пожелает, и мир кинематографа позволяет делать это. Когда я несколько раз отказала режиссеру, он обиделся и наказал меня, а также представил меня перед съемочной группой как проблемную актрису», — написала певица. Бьорк сыграла главную роль в фильме Триера «Танцующая в темноте» 2000 года. Перед выходом картины на экраны стало известно, что артистка поссорилась с режиссером. Источники сообщали, что певица порвала блузку, которую не хотела надевать для сцены, и съела несколько кусков ткани, писала газета The Guardian. Многие знаменитости заговорили о домогательствах на фоне секс-скандала, развернувшегося вокруг голливудского продюсера Харви Вайнштейна. В октябре New York Times написала, что он на протяжении трех десятилетий заключил восемь мировых соглашений с женщинами, которые обвиняли его в нежелательных физических контактах. Среди актрис, назвавших себя жертвами Вайнштейна, — Кара Делевинь, Леа Сейду и Анджелина Джоли.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Челябинский хоккейный клуб «Трактор» продал московскому «Динамо» права на капитана юниорской сборной России Валерия Ничушкина. Об этом «Советскому спорту» сообщил крестный отец 18-летнего хоккеиста Евгений Пустовой. Пустовой рассказал, что сделка стала полной неожиданностью для самого игрока. «Сначала Валера не поверил своим ушам. Он подумал, что его разыгрывают. Невозможно поверить в то, что от него отказался родной клуб», — добавил крестный отец хоккеиста. Пустовой удивился, почему руководство «Трактора» пошло на продажу Ничушкина, хотя ранее всегда выступало против этого. По его словам, на челябинский клуб могли надавить свыше. «Вы сами знаете, кто у нас в верхах любит хоккей», — отметил крестный отец Ничушкина. Издание «Спорт-Экспресс» пишет, что «Динамо» заплатило за Ничушкина порядка 10 миллионов долларов, а сам хоккеист будет получать два миллиона долларов в год. Издание добавляет, что есть вариант, по которому зарплата форварда составит миллион долларов, но в контракте будет предусмотрено большое количество бонусов. Ничушкин дебютировал в составе «Трактора» в ноябре 2012 года. Вместе с командой форвард дошел до финала Кубка Гагарина, где челябинцы уступили как раз «Динамо». В плей-офф россиянин провел 25 матчей, набрав 9 (6+3) очков. В настоящее время Ничушкин в составе юниорской сборной России выступает на чемпионате мира в Сочи. 25 апреля в игре 1/4 финала с Германией форвард отметился хет-триком, а россияне выиграли со счетом 8:4.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Сербский теннисист Янко Типсаревич 23 октября обыграл соотечественника Виктора Троицки в финальном матче Кубка Кремля. Об этом сообщает официальный сайт турнира. Встреча, продолжавшаяся один час 28 минут, закончилась со счетом 6:4, 6:2 в пользу Типсаревича. На пути к финалу победитель турнира обыграл  российских теннисистов Игоря Куницына, Дмитрия Турсунова и Николая Давыденко. Виктор Троицки до сегодняшней встречи являлся действующим чемпионом Кубка Кремля. Ранее 23 октября в финале женской сетки турнира Доминика Цибулкова из Словакии обыграла эстонку Кайю Канепи.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "При министерстве культуры РФ создадут совет по оценке сценариев документальных и художественных фильмов на исторические темы. Об этом сообщает РИА Новости со ссылкой на главу Минкульта Владимира Мединского. Научно-методический совет, по словам руководителя ведомства, будет создан, чтобы на основании его оценки принимать решение о государственной поддержке того или иного фильма. Министр отметил особо, что речь здесь не идет о цензуре. По всей видимости, научно-методический совет будет заниматься теми фильмами, финансирование которых находится в непосредственной компетенции министерства культуры, а не Фонда кино, органа, в основном распределяющего государственные дотации. В декабре 2012 года министерство культуры подготовило список тем для отечественного кинематографа, соответствующих стратегическим интересам государства. В списке оказались 12 «социально значимых» тем: самым крупным блоком являлся как раз исторический. Среди них — «Россия — многонациональная страна», «Военная слава России: победы и победители», «Люди долга: живая память войны в Афганистане», «Народная война: малоизвестные, яркие и драматичные страницы истории Великой Отечественной», а также 400-летие окончания Смуты и 400-летие дома Романовых. В феврале ведомство объявило открытый конкурс на создание игровых и документальных фильмов, которым государство окажет поддержку. Практически все темы неигрового кино связаны с историей России. Тогда же, зимой, был утвержден порядок финансирования кинематографистов, осуществляющегося в качестве государственной поддержки. Из денег, выделенных бюджетом на нужды отечественного кино (в 2013 году это 5,3 миллиарда рублей), 3 миллиарда ушли в Фонд кино, остальное досталось министерству на поддержку дебютного и авторского кино, а также фильмов, соответствующих стратегическим задачам государства.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "В Сочи начались переговоры между Россией и Белоруссией с участием президентов Владимира Путина и Александра Лукашенко, посвященные интеграции двух стран, сообщает ТАСС. Открывая встречу, проходящую в сочинской резиденции Бочаров Ручей, российский лидер поблагодарил белорусскую делегацию за приезд в канун 20-летия Союзного договора. По словам Путина, чиновники обоих государств провели большой анализ того, что было сделано в рамках соглашения, и обсудили, что и как нужно сделать для дальнейшего выполнения обязательств, а что можно было бы актуализировать в связи с «меняющимися обстоятельствами». Лукашенко, в свою очередь, отметил, что делегация республики приехала только для того, чтобы «проанализировать ход нашего анализа договора». «Не просим ничего, не настаиваем ни на чем», — подчеркнул президент Белоруссии. Встрече с участием глав государств предшествовали переговоры на уровне председателей правительств двух стран: 6 декабря российский премьер Дмитрий Медведев и его белорусский коллега Сергей Румас, как писал «Интерфакс», обсудили работу по согласованию дорожных карт по интеграции, однако не смогли решить все спорные вопросы. Медведев выразил надежду на то, что встреча президентов «многое прояснит». По словам Румаса, перед его встречей с российским коллегой оставались неразрешенными 16 вопросов, в том числе по цене на газ, которую Минск хотел бы установить на уровне Смоленской области плюс расходы на транспортировку. Нынешняя стоимость топлива для Белоруссии составляет 127 долларов за тысячу кубометров. Российско-белорусская рабочая группа по урегулированию проблемных вопросов и развитию интеграции была сформирована в конце 2018-го — начале 2019 года. Стороны неоднократно выражали намерение подписать программу по углубленной интеграции до 8 декабря 2019-го, к 20-летию со дня подписания договора о Союзном государстве России и Белоруссии.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Дочь бывшего палестинского террориста заявила, что у нее есть подтверждение тому, что за взрывом самолета над Британией в 1988 году стояла не Ливия, а Иран. Об этом пишет таблоид Mirror. По словам Сахи Хрисат, дочери Марвана Хрисата, власти Ирана заплатили группе палестинских террористов, чтобы те организовали взрыв пассажирского самолета компании Pan American в 1988 году. Тогда, ровно 30 лет назад, жертвами теракта стали 270 человек, в основном — граждане США. Отец Хрисат состоял в террористической ячейке под началом палестинского радикала Ахмада Джибриля и отвечал за изготовление бомб с пластичной взрывчаткой и высотомером, замаскированный под проигрыватель кассет — подобная бомба взорвалась в багажном отсеке авиалайнера и привела к смерти сотен людей. Хрисат утверждает, что у нее есть документы и записи отца, подтверждающие все обвинения: иранское правительство якобы передало Джибрилю миллионы фунтов за осуществление теракта. Мотивом была месть США за сбитый в том же году американскими военными пассажирский лайнер компании Iran Air, хотя американцы и утверждали, что это произошло по ошибке. Официально организатором теракта над Локерби считается сотрудник ливийских спецслужб Абдельбасет Али Махмед Аль-Меграхи. Он был выдан Великобритании режимом Каддафи в 1999 году, осужден на пожизненное заключение, но в 2009 году его отпустили из-за того, что обнаружили у него рак. Он умер в 2012 году в своем доме в Триполи, так и не признав вину.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Французский кинорежиссер, один из самых знаменитых представителей \"Новой волны\" Эрик Ромер скончался 11 января, сообщает AFP со ссылкой на продюсера Маргарет Менегос. Режиссеру было 89 лет; по сообщению родственников Ромера, около недели назад его госпитализировали. Причина смерти пока не называется. Настоящее имя Ромера - Жан-Мари Морис Шерер. В 1950-х он начал сотрудничать со знаменитым журналом Cahiers du Cinema вместе с другими будущими лидерами \"Новой волны\" Годаром и Трюффо, а с 1957 по 1963 год был главным редактором этого издания. Ромер составлял из своих фильмов циклы. В первый из них, \"Нравоучительные рассказы\" по произведениям Мармонтеля, вошли такие ленты как \"Моя ночь у Мод\" (1969), \"Колено Клэр\" (1970) и \"Любовь после полудня\" (1972). Следующий цикл получил название \"Комедии и поговорки\". Одно из самых знаменитых произведений Ромера - цикл \"Времена года\" (\"Весенняя сказка\", 1990; \"Зимняя сказка\", 1992; \"Летняя сказка\", 1996; \"Осенняя сказка\", 1998). В 2007 году Ромер объявил об окончании режиссерской карьеры.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Национальная судебная ассамблея Испании дала год тюрьмы жителю города Бильбао за пост в Twitter, сообщает агентство Europa Press во вторник, 12 января. Ибаи Очоа Хиль (Ibai Otxoa Gil) был признан виновным в призыве к террористической деятельности за публикацию в социальной сети комментария: «Может кто-нибудь пустить пулю в затылок инфанте, пожалуйста?» Самым тяжелым возможным наказанием в таком случае могли стать два года тюремного заключения. Но мужчина признал свою вину и, принимая во внимание отсутствие судимостей, ассамблея присудила ему один год тюрьмы. Очоа Хиль был арестован в ноябре 2014 года. До этого он в течение года публиковал в Twitter комментарии, оправдывающие действия террористической баскской группировки ЭТА. Инфанта, о которой шла речь, — сестра короля Филиппа VI Кристина, бывшая герцогиня Пальма-де-Майорки. Она была лишена титула в июне 2015 года из-за обвинений в коррупции и мошенничестве (расследование началось в 2011 году). Тогда же инфанта Кристина и ее супруг были отстранены от участия в официальных королевских мероприятиях. 11 января 2016 года она предстала перед судом Балеарских островов и за шесть часов ответила более чем на 400 вопросов.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Радикалы напали на главу представительства Россотрудничества в Киеве Константина Воробьева, когда он шел возлагать цветы к Вечному огню. Об этом он сообщил РИА Новости. «Я как раз пытался ехать к месту, где собираются киевляне традиционно 9 мая утром, и вместе с коллегами и друзьями возложить цветы к Вечному огню и к памятнику Николая Ватутина. На выходе из подъезда на меня напали сзади несколько человек <…> и облили нечистотами и зеленкой», — рассказал Воробьев. По словам главы Россотрудничества, нападавшие являлись членами националистической организации С14 (входит в запрещенный в России «Правый сектор»). Они также пригрозили ему «более серьезной расправой». Офис Россотрудничества в Киеве дважды был разгромлен в феврале. 17 февраля туда ворвались радикалы С14, разрисовали стены и сожгли российский флаг. 18 февраля члены группировки «Организация украинских националистов» (ОУН, запрещена в России) забросали здание камнями и яйцами, разбили окна и сожгли российский флаг. Об этой акции деятели культуры заранее предупредили мэра Киева и президента Украины. При этом полиция Киева еще после первого разгрома в одностороннем порядке расторгла договор об охране российской организации.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      },
      {
        "text": "Бывший финансовый директор Римско-католической архиепархии Филадельфии призналась в том, что украла у церкви более 900 тысяч долларов. Анита Гуззарди (Anita Guzzardi) признала себя виновной по обвинениям в мошенничестве, незаконном использовании компьютерных программ и подделке документов. Как сообщает Associated Press, свое признание женщина сделала еще в минувшую пятницу, 29 июня, однако известно об этом стало только сейчас. По словам обвинителей, Анита Гуззарди с 2005 по 2011 год многократно использовала церковные чеки для оплаты личных счетов. Поводом к расследованию послужило обращение American Express в органы власти. Гуззарди работала в архиепархии Филадельфии с 1989 года. По сообщению Reuters, после предъявления обвинения в июле 2011 года Гуззарди не признала себя виновной и была уволена с должности финансового директора, которую заняла незадолго до ареста. Как сообщает адвокат финансистки Луи Бусико, сейчас Анита Гуззарди полностью признает свою вину и полагает, что должна возместить нанесенный церкви ущерб. Обвинители заявили, что Гуззарди уже вернула церкви более 250 тысяч долларов. Вынесение приговора назначено на 24 августа 2012 года. Аните Гуззардо грозит до 21 года лишения свободы. Однако согласно Федеральному руководству по вынесению приговоров в США срок может быть сокращен до нескольких месяцев.",
        "dataset": "Lenta.ru news",
        "pred": 0,
        "class": 0
      }
    ],
    "false_negatives": [],
    "error_count": 0,
    "check_counter": 148
  },
  "model_pair": {
    "observer": "deepseek-ai/deepseek-llm-7b-base",
    "performer": "deepseek-ai/deepseek-coder-7b-instruct-v1.5",
    "pair_name": "Pair 1 - deepseek-llm-7b-base and deepseek-coder-7b-instruct-v1.5"
  },
  "dataset_name": "chatGPT_o1-mini"
}